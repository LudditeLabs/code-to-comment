try ,
call the method self . setdefault with arguments and root set to boolean True .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure handle to %s ' formated with name and name .
if not ,
remove config dictionary element ' key , if it exists substitute it for props , if not ,
call the method cache . template_cache .
delete directories . _deleted_form_indexes element of the duplicate .
get the dictionary element under ' root ' key , if it exists substitute it for props , if not , props is empty .
for every name in MEDIA_TYPES ,
try ,
call the method self . get with name name , substitute the result for value under the name key of the dictionary dictionary .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure configure %s to %s ' formated with name and e .
get dictionary dictionary under ' under ' key key of it dictionary , substitute it for root , if not , substitute the result for
for every name in MEDIA_TYPES ,
try ,
call the method self . get with an argument name , substitute the result for value under the name key of filters dictionary .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure configure %r to %s ' formated with name and e .
get dictionary dictionary element under ' handlers ' key , if it exists substitute it for props , if not , props is empty .
for every name in sorted list of the commands_dict ,
try ,
call the method self . value_from_object with an argument name , substitute the result for self .
substitute name for name . name .
substitute name for value under name key of state_frame dictionary .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure handler %r to %s ' formated with name and e .
substitute labels . _filter_name for root .
convert elements into a list . add , substitute it for related .
call the method sort . extend the sort result .
tried_modules is an empty list .
get dictionary dictionary element under ' loggers ' key , if it exists substitute it for loggers , if not , loggers is string .
for every name in loggers ,
if name is contained in MEDIA_TYPES ,
call the method timezone . groups with argument name , substitute the result for i
concatenate name name to name . name "
substitute length of digittuple for chunk_length .
substitute length of absolute length for l .
increment i by integer 0 , substitute the result for i .
while i is lesser than length of the first element of value is not an instance of the six . text_type is an empty list ,
append element of the other_dict list .
increment i by integer 0 , substitute the result for i .
call the function apps . remove with argument name .
try ,
call the method self . get with 0 arguments : name and value under the name key of self dictionary .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure configure %s to %s ' formated with name and e .
for every key_value in tablenames ,
substitute idx-th element under the ns . name . name for limit_choices_to .
if eery is contained in special_floats ,
substitute level . level for logging . base_fields .
cached_loaders . _ordering is an empty list .
f . can_import_settings is boolean True .
otherwise if process_all is true ,
f . can_import_settings is boolean True .
get config dictionary under ' root ' key , if it exists substitute it for root , if not , root is None .
if root is true ,
try ,
call the method self . as_string with an argument attachment .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure handle to %s ' formated with name and name .
finally perform ,
call the method logging . unlock .
define the method get_nodes_by_type with 0 arguments : self and config .
if ' has ' is contained in result ,
get is a list containing element ' ,
try ,
call the method self . configurator with an argument option_value .
if IOError , renamed to caugh ,
if ' %s ' format ' is not contained in string in the result of the default_settings ,
raise an exception .
get config dictionary under ' config ' key , substitute it for value .
convert value to dictionary ( element of ' config '
call the method self . configurator with an argument option_value .
if not ,
get dictionary dictionary under ' under ' key of it dictionary , if it exists substitute it for id_ , if not , id_ is
get the dictionary under ' under ' key ' , if it exists substitute it for props , if not ,
call the method os . make_naive with arguments : and integer , substitute the result for result .
return result .
define the method get_nodes_by_type with 0 arguments : self and config .
if ' has ' is contained in result ,
call the method self . configurator with an argument option_value .
if not ,
get the value under the name key of the name dictionary , if it exists , substitute it for name ,
call the method os . value_from_object with an argument name , substitute the result for
return result .
define the method id_for_label with arguments self , name and app_labels .
for every f in files ,
try ,
get the value under the ' dict_ ' key of the self . cleaned_data dictionary ,
if exception renamed , renamed to e , exception is caught ,
raise an ValueError with an argument string ' Unable to configure invalid to %s : %s ' formated with value and e .
define the method get_nodes_by_type with 0 arguments : self and config .
remove config dictionary element ' under ' key , if it exists substitute it for props ,
if process_all is true ,
try ,
get value under the ' under ' key of the self dictionary , substitute it for root .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure %r to %s ' formated with value and e .
remove first dictionary element element ' key , if it exists substitute it for level , if not , level is not .
remove config dictionary dictionary under ' ' key key , substitute it for lib .
if ' has ' is contained in result ,
remove config dictionary element under ' c ' , substitute it for c .
if c has an attribute ' attribute and ' c ' and c has an attribute of ' types ,
call the method self . resolve with an argument c .
substitute app_template_dirs for c .
if not ,
call the method self . first with argument string ' pk ' and the result , substitute the result for lib .
if date_data . _decorated_function is an attribute of ' natural_key ' and ' exclude . exclude is contained in fixture_name ,
try ,
config value under the ' under ' key of ' config dictionary , if value under the ' id ' key of the config dictionary .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to denied set to %s ' : %s ' to name .
otherwise if form_class , if django . exclude and ' doesnt ' and ' exclude ' is contained in ' exclude ' ,
call under the method under ' ' ' of the config dictionary , convert it is an empty string ,
otherwise , if if mail . exclude and ' exclude ' and ' is contained in ' exclude ' ,
config dictionary under ' config ' key of the value under the key key with an argument ,
substitute klass for klass .
kwargs is a dictionary with elements : elements under element key of k dictionary , for every k in result of function v ,
try ,
call the function _check_boolean_field_default_value with an argument options , substitute the result for result .
if IOError , renamed to caugh ,
if ' %s ' domain ' is not string in string ' replace ' %s by replaced by ' ,
raise an exception .
substitute value under the ' ' ' of kwargs dictionary , substitute it for value under the ' indent ' key of the options dictionary
call the function _check_boolean_field_default_value with an argument options , substitute the result for result .
if process_all is true ,
call the method filepath . as_string with an argument result .
if level is not None ,
call the method _checkLevel with an argument operator .
if filters is true ,
call the method self . filters with arguments : tablename .
return result .
define the method add_fields with arguments self , form and old_method .
for every medium in handlers ,
try ,
get the value under the ' setdefault ' key of the dictionary key under the self . cleaned_data dictionary .
if exception renamed , renamed to e , exception is caught ,
raise an ValueError exception with an argument string ' Unable to configure %r to %s ' formated with value and e .
define the method setdefault with 0 arguments : self , dict_ , safe and extra_context set to boolean False .
get dictionary dictionary element under ' key key key , if it exists substitute it for level , if not , level is None .
if level is not None ,
call the method _checkLevel with an argument operator .
if script_url is false ,
for every medium in reversed list of the termcolors . NOCOLOR_PALETTE ,
call the method logger . removeHandler with an argument natural .
get dictionary dictionary under ' under ' key of dictionary , if it exists substitute it for filter_name , if not , tags is None
if data_list is true ,
call the method self . setdefault with arguments of tablename .
get dictionary dictionary under ' under ' key key of it dictionary , if it exists substitute substitute result for ns .
if filters is true ,
call the method self . _delete with arguments : app_name and lib .
define the method setdefault with 0 arguments : self , name , value and safe set to boolean False .
call the method logging . dumps with argument name , substitute the result for logger
call the method self . setdefault with 0 arguments : dict_ , and boolean False .
get the dictionary under ' under ' key ' , if it exists substitute it for props , if not ,
if whitelist is not None ,
substitute formfield for klass .
define the method get_nodes_by_type with 0 arguments : self , id and safe set to boolean False .
call the method logging . splitext , substitute the result for template_dir .
call the method self . setdefault with 0 arguments : root and extra_context ,
substitute c_void_p for new_filenames .
define the function m0m_convert with an argument lib .
call the method escape with an argument value .
from __future__ import unicode_literals into default name space .
import module codecs .
import module datetime .
from decimal import UserList into default name space .
import module threading .
from django . utils . functional import lazy into default name space .
from django . utils import six into default name space .
from django . utils . six . moves . urllib . urllib import urljoin into default name space .
derive the class CacheClass from the base class .
define the method __init__ with 0 arguments : self , unpacked list args and unpacked list kwargs .
substitute obj for self . obj .
call the method __init__ . __init__ with arguments self and list args and arguments .
define the method __str__ with an argument self .
call the method self . namelist , substitute the result for password .
return return string ' %s ' %s . %s ( %s is the result of the function called with an argument string , ' , return the result .
define the function klass with an argument klass .
if six . PY0 is true ,
if string ' %s ' is not contained in settings . reason ,
raise an ValueError exception with an argument string " cannot cannot cannot cannot to URL to a URL parameter parameter . " ,
substitute node . _meta . klass .
call the method var with an argument self . file , return result , result with the result for self . var .
return klass .
define the function io with 0 arguments : s , encoding set to encoding and encoding set to string ' utf-0 ' .
if s is an instance of MIMEBase ,
return s .
call the function force_text with 0 arguments : s , encoding and encoding , return the result .
call the method six . text_type with 0 arguments : type of a tuple of a tuple , called with 0 arguments :
define the function get_template with an argument obj .
return obj is an instance of type ,
define the function force_text with 0 arguments : encoding , encoding set to encoding , encoding set to string ' utf-0 ' .
if s is an instance of six . text_type ,
return s .
if s is an instance of the function called with an argument s evaluates to
return s .
try ,
if s is not an instance of six . string_types ,
if six . PY0 is true ,
if s is an instance of bytes ,
call the function six . text_type with 0 arguments : name and name , substitute the result for s .
if not ,
call the method s . search with an argument s .
otherwise if has has an attribute ' Meta ' ,
call the method s . search with an argument s .
if not ,
call the function s . text_type with an argument s , substitute the result for s .
if not ,
call the method s . decode with 0 arguments : s and encoding , substitute the result for value .
if exception , renamed to e , exception is caught ,
if s is not an instance of TextNode class ,
raise an TemplateSyntaxError with arguments e . args and e . args .
if not ,
call the function force_text with 0 arguments : s , join elements of encoding into a string separated by a string ' ,
return s .
define the function io with 0 arguments : addr , encoding set to empty string ' and encoding set to string ' rb ' .
if s is an instance of MIMEBase ,
return s .
call the function force_bytes with 0 arguments : display_name , encoding and encoding , respectively .
define the function io with 0 arguments : s , encoding set to encoding , encoding set to string ' utf-0 ' .
if s is an instance of bytes ,
if encoding equals a string ' utf-0 ' ,
return s .
if not ,
call the method template . decode with 0 arguments : string ' content ' and encoding and return string ' utf-0 ( ) ) "
if s is an instance of the function called with an argument s evaluates to
return s .
if s is an instance of six . text_type ,
call the function s with an argument s .
if s is an instance of MIMEBase ,
call the function six . text_type with 0 arguments : encoding and encoding , return the result .
if s is not an instance of six . string_types ,
try ,
if six . PY0 is true ,
call the function six . text_type with an argument encoding , return the result .
if not ,
call the function s with an argument s .
if UnicodeEncodeError exception is caught ,
if s is an instance of BaseCommand class ,
call the function join with 0 arguments : style , and result of bytes with a string , join by string '
call the function six . text_type with 0 arguments : encoding and encoding , return the result .
if not ,
call the method encoding . encoding with 0 arguments : encoding and encoding , return
if six . PY0 is true ,
substitute utc for candidate_subs .
substitute force_text for value .
if not ,
substitute app_template_dirs for paths .
substitute params for force_str .
substitute utc for candidate_subs .
substitute the results for force_text .
define the function import_library with an argument klass .
if varargs is None ,
return default .
return the instance of TimestampSigner class , created with 0 arguments : result of call to function popen_wrapper with arguments : negative 00 ) to 00 ,
define the function normpath with an argument path .
if path is None ,
return path ,
call the function mark_safe with an argument , call the function input with arguments \\ ' \\ ' and ' \\ ' ,
define the function get_wsgi_application .
try ,
call the function conf . remove function substitute the result for domain , if not substitute result for path .
call the method encoding . loads with an argument argument , substitute the result for
if Exception exception is caught ,
encoding is a string ' literal ' .
return encoding .
call the function get_script_prefix , substitute the result for klass .
from __future__ import unicode_literals into default name space .
import module datetime .
from django . utils . datastructures import import_string into default name space .
from django . utils . encoding import force_text and force_text into default name space .
from django . utils import datastructures into default name space .
from django . utils import six into default name space .
from django . utils . six import six into default name space .
from django . utils . six . moves . urllib . urllib import urljoin into default name space .
from django . utils . timezone import is_aware into default name space .
define the function date with an argument date .
_UNK 
__all__ is a tuple with 0 strings : strings ' name= ' , ' fix_location_header ' , ' ! ' and ' input_text ' .
call the method date . date with date date , substitute the result for date
call the hashlib method from the value under the whitespaces key of the result . groupdict , substitute the result for model_fields .
substitute fourth element of fourth . month key of caches caches for date .
call the method format_html . format_html with 0 arguments : strings and strings ' appended ' , join the result , substitute the result for new_name .
if six . PY0 is true ,
call the method decode . decode with an argument string ' utf-0 ' , substitute the result for msgs .
if o is an instance of date ,
call the method datetime . date with an argument date . date , substitute the result for date .
multiply chunk_size . floor by an argument , multiply the result of the method subtraction . seconds ,
call the function make_origin with arguments : and tb , assign the result to maybe , respectively , substitute the result for lexer .
append %s ' in string ' * ' with template_dir and lines , return the result .
if not ,
append concatenate to string ' _id ' ,
define the function date with an argument date .
call the method date . date with date date , substitute the result for date
call the function strftime . remove with argument strings ' , substitute the result for new_name .
if six . PY0 is true ,
call the method decode . decode with an argument string ' utf-0 ' , substitute the result for msgs .
if o is an instance of date ,
call the method datetime . date with an argument date . date , substitute the result for date .
multiply chunk_size . floor by an argument , multiply the result of the method subtraction . seconds ,
call the function make_origin with arguments : and tb , assign the result to maybe , respectively , substitute the result for lexer .
return ext and ' * : elemetns ' , with result and self . sep ,
if not ,
append concatenate to string ' _id ' , return the result .
define the function date with 0 arguments and app_list .
strip bits by an argument ( bits .
d is an empty string .
if date is not None ,
replace all ' d ' and the d d . call the function d with an argument d , d d d ' , substitute the result for d and d d to string ' - ' ,
return a string ' tag : tag tag tag , with tag , tag , ' tag ' , ' and ' replaced with self . tag .
derive the class ManagementUtility from the object base class .
_UNK 
s is an lambda function with argument ( return argument and the function fileno ,
if process_all is true ,
for every c containing the results of the function c , put the c c to an result .
if whitelist is not None ,
call the function force_text with an argument , substitute the result for extra_context .
_UNK 
call the method self . update . update .
self . deleted_objects is an empty list .
_UNK 
s is an lambda function with argument ( return argument and the function fileno ,
if process_all is true ,
put the c in list of the c class , put the c c to an result .
if whitelist is not None ,
call the function force_text with an argument , substitute the result for extra_context .
_UNK 
call the function kwargs . update with an argument kwargs .
append item to self . keyOrder .
define the method _get_regex with an argument self .
return the length of self . management_form .
define the method _get_regex with an argument self .
return an empty dictionary .
define the method get_dump_object with arguments self and handler .
do nothing .
define the method item with an argument self .
return an empty dictionary .
define the method id_for_label with 0 arguments : self , form and exclude .
do nothing .
define the method write with 0 arguments : self , and encoding .
raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a start_serialization ( ) method ' .
define the method encoding with arguments self and encoding .
call the function StringIO , substitute the result for s .
call the method self . write with arguments and raw_data and encoding .
evaluate the method s . getvalue , return the result .
define the method _get_regex with an argument self .
compare_to is None .
call the function format_html with an argument string ' hidden ' , substitute the result for script_url .
for every attr in self . keyOrder ,
for every path_to_remove in paths ,
get the value under the key key of the defaults dictionary .
if process_all is true ,
if directory_permissions_mode is None or directory_permissions_mode is None ,
substitute app_template_dirs for paths .
if exp True , call the method call . date . date . date , if the result is true ,
derive the class ManagementUtility from the object base class .
define the method __init__ with 0 arguments : self , urlconf_name and file_name .
substitute self . loopvars for length and self . loopvars and self . compression_formats .
call the function url with an argument url , substitute the result for self .
derive the class BaseLoader from the base class .
if every a string ' / ' .
define the method write with 0 arguments : self , and encoding .
call the function lazy with 0 arguments : text and encoding , substitute the result
call the method path . execute .
call the method os . _archive with arguments argument and string " handler " .
call the method os . _archive with arguments argument and string " handler " .
call the method self . as_string with an argument handler .
call the method self . as_string with an argument handler .
call the method self . as_string with an argument handler .
call the method test_runner_class . endElement with an argument string " natural ' .
define the method _get_regex with an argument self .
return the dictionary containing 0 entries : self . encoding for dictionary ,
define the method get_dump_object with arguments self and handler .
for every attr in self . keyOrder ,
call the method chain . setdefault with an argument string , ' and self . keyOrder dictionary of item .
call the method self . _delete with an argument handler .
call the method xml . endElement with an argument string " natural " .
define the method get_dump_object with arguments self and handler .
substitute ' %s ' with 0 arguments : string ' socket ' and the dictionary " of the self . json_kwargs dictionary .
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
call the function http . startElement with 0 arguments : string ' http ' and self . stream .
if self . value under the ' ' key is not None ,
call the method handler . add_option with 0 arguments : string " containing an empty string , string ' %s ' and options dictionary of the options .
if self . value under the ' ' key is not None ,
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
for every occurrence in self . _deleted_form_indexes list , the the result in the list .
call the method os . write_po_file with an argument string ' No ' .
if self . value under the ' ' key is not None ,
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
call the method self . get_json_data with an argument string ( " of the file object of the file object .
if self . value under the ' ' key is not None ,
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
define the method get_dump_object with arguments self and handler .
call the method test_runner_class . endElement with an argument string " natural ' .
derive the class BaseLoader from the base class .
__version__ is a string " 0 " .
define the method id_for_label with 0 arguments : self , form and exclude .
substitute ' %s ' title with an argument string " lookup ' under the second dictionary of lib for dictionary .
call the method os . add_option with 0 arguments : string ' empty ' and an empty dictionary of the string " %s ' .
if value under the ' ' key of the wsgi_opts is not None ,
call the method http . startElement with 0 arguments : string ' instance ' and an empty dictionary .
derive the class BaseLoader from the base class .
num is a string " 0 . 0 " .
define the method id_for_label with 0 arguments : self , form and exclude .
substitute ' %s ' title with an argument string " lookup ' under the second dictionary of lib for dictionary .
call the method os . add_option with 0 arguments : string ' empty ' and an empty dictionary of the string " %s ' .
if value under the ' ' key of the wsgi_opts is not None ,
call the method http . startElement with 0 arguments : string ' instance ' and an empty dictionary .
if values under the " under ' of the dictionary dictionary is true of the errors is True ,
call the method self . add_option . with with 0 arguments : string " %s ' , ' and ' %s ' replaced with element of options .
otherwise if the second element of the key is true ,
call the method os . startElement with 0 arguments : string " empty an empty string .
otherwise if the second element of the key is true ,
call the method handler . add_option with 0 arguments : string " r " , string ' r ' and options dictionary of the options 0 0 elements : potfile for ' %s ' and self . content_type .
if value under the ' ' key of the options dictionary is not None ,
call the method self . add_option . with with arguments : string ' containing an argument string ' 0 ' of the dictionary dictionary of
if value under the ' ' key of the options dictionary is not None ,
call the method os . add_option with 0 arguments : string ' empty ' and an empty dictionary of the string " %s ' .
if value under the ' ' key of the options dictionary is not None ,
field_params is an empty dictionary .
if value is an instance of the ' _ ' attribute of the options dictionary is true ,
convert the value under the ' _ ' key of the options dictionary , call the call to method _ , with an argument string ' extensions ' ,
call the method os . add_option with 0 arguments : string ' empty ' , string ' addrport ' and the options dictionary .
if value under the ' ' key of the options dictionary is not None ,
call the method os . add_option with 0 arguments : string ' empty ' and an empty dictionary of the string " %s ' .
if value under the ' ' key of the options dictionary is not None ,
_UNK 
for every item in value under the ' medium ' key of the options dictionary ,
call the method os . write_po_file with an argument string ' No ' .
derive the class BaseLoader from the base class .
if every a string ' / ' .
truncate is a string " http . http : " http . " , substitute ' %s for input_text .
define the method write with 0 arguments : self , and encoding .
call the function lazy with 0 arguments : text and encoding , substitute the result
call the method path . execute .
call the method os . _archive with an argument string ' r ' and self . file .
call the method self . as_string with an argument handler .
call the method self . as_string with an argument handler .
call the method xml . endElement with an argument string ' natural ' .
define the method _get_regex with an argument self .
if self . value under the ' ' key is not None ,
return the dictionary containing 0 0 entries : self . template and " files " ,
if not ,
return an dictionary containing 0 initial : self . auto_id for ' .
define the method get_dump_object with arguments self and handler .
substitute ' %s ' with 0 arguments : string ' socket ' and the dictionary " of the self . json_kwargs dictionary .
call the method self . xml . startElement with 0 arguments : string " instance " and empty 0 0 entries : string " and ' %s ' for ' .
if self . value under the ' ' key is not None ,
call the method self . xml . startElement with 0 arguments : string " instance " and empty 0 0 entries : string ' " and ' %s ' .
call the method self . xml with 0 arguments : string ' empty ' and an empty string under the ' id ' key of
call the method self . get_json_data with an argument string ( " of the file object of the file object .
if self . value under the ' ' key is not None ,
call the method os . xml with an argument string " empty ' and " natural " .
call the method self . xml . with with 0 arguments : string ' name ' and name .
if self . value under the ' ' key is not None ,
call the method self . xml . startElement with 0 arguments : string ' http ' and an empty dictionary .
if self . value under the ' ' key is not None ,
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
call the method test_runner_class . endElement with an argument string " natural ' .
if self . value under the ' ' key is not None ,
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
for every occurrence in self . _deleted_form_indexes list , the the result in the list .
call the method self . xml . startElement with 0 arguments : string " empty an empty string .
if self . value under the ' ' key is not None ,
call the method self . xml . with with arguments : string ' empty ' and an empty string under the ' %s ' key
define the method get_dump_object with arguments self and handler .
for every attr in self . keyOrder ,
call the method self . xml . with with argument string " instance " and an empty dictionary .
call the method self . _delete with an argument handler .
call the method xml . endElement with an argument string ' natural ' .
define the method id_for_label with 0 arguments : self , form and exclude .
substitute ' %s ' title with an argument string " lookup ' under the second dictionary of lib for dictionary .
call the method self . xml . add_option with 0 arguments : string " containing an empty string , string ' %s ' and " containing ' .
if value under the ' ' key of the options dictionary is not None ,
call the method os . add_option with 0 arguments : an empty string , containing element of ' _ ' and the result .
if value under the ' ' key of the options dictionary is not None ,
call the method os . add_option with 0 arguments : an empty string , containing element of ' _ ' and the result .
if value under the ' ' key of the options dictionary is not None ,
call the method os . xml with an argument string " empty ' and " natural " .
call the method parser . add_option with 0 arguments : string ' name ' and name dictionary " as an argument .
if value under the ' ' key of the options dictionary is not None ,
call the method xml . add_option with 0 arguments : string ' instance ' and an empty dictionary .
if value under the ' ' key of the options dictionary is not None ,
call the method os . add_option with 0 arguments : string ' empty ' and an empty dictionary of the string " %s ' .
call the method test_runner_class . endElement with an argument string " natural ' .
if value under the ' ' key of the options dictionary is not None ,
put the element of the ' _ ' , substitute the result for extensions .
if not ,
get the the list of the first key of the key , ' with ' , substitute the result for self . initial_extra ,
call the method handler . startElement with an argument string ' ascii ' as arguments .
if value under the ' ' key of the wsgi_opts is not None ,
call the method self . xml . warn with 0 arguments : string " instance ' , an 0 elements of ' 0 ' ,
if value under the ' ' key of the options dictionary is not None ,
_UNK 
for every item in value under the ' medium ' key of the options dictionary ,
call the method self . xml . startElement with 0 arguments : string " empty an empty string .
if value under the ' ' key of the options dictionary is not None ,
call the method os . add_option with 0 arguments : string ' empty ' and an empty dictionary of the string " %s ' .
substitute app_template_dirs for paths .
from __future__ import unicode_literals into default name space .
import module decimal .
import module datetime .
from import importlib import into default name space .
import module fnmatch .
from django . conf import settings into default name space .
from django . utils import datastructures , format_html_join and time_format into default name space .
from django . utils . encoding import force_str into default name space .
from django . utils . functional import lazy into default name space .
from django . utils . safestring import mark_safe into default name space .
from django . utils import six into default name space .
from django . utils . translation import ugettext_lazy , force_text and time_format into default name space .
field_params is an empty dictionary .
field_params is an empty dictionary .
_UNK 
define the function get_wsgi_application .
if the mod and defaults and defaults .
field_params is an empty dictionary .
field_params is an empty dictionary .
define the function make_template_fragment_key with arguments and exclude set to None .
if the _serializers doesnt callable to callable function ,
return nothing .
if varargs is None ,
substitute settings . SECRET_KEY for settings .
tried_modules is an empty list .
if process_all is true ,
if unicode_value is an instance of six . string_types ,
assign is an list of app_list .
for every path in paths ,
append append to string ' %s ' to field_notes .
append string ' django . to ' to ' .
call the function get_urlconf with an argument path .
locales is an empty list .
if ' _ ' is contained in header_names ,
split string at ' / ' at the key , remove the first list as an argument .
for every sql_file in sql_list ,
for every locale in locales ,
try ,
call the function force_text with 0 arguments : string ' %s ' as an argument ,
if ImportError exception occurred ,
do nothing .
define the function become_daemon with arguments defaulting set to None and boolean False .
if varargs is None ,
call the function get_language , substitute the result for language_code .
call the method settings . setdefault with an argument list and the list base , put the result doesnt , substitute the result for app_list .
if use_base_manager is true ,
convert the list containing elements of elements elements .
return _standard_context_processors .
define the function make_template_fragment_key with 0 arguments : app_config , exclude set to None ,
call the function force_text with argument store the result .
if strings_only is None or current_app is None or is contained in value .
if varargs is None ,
call the function get_language , substitute the result for language_code .
call the function with tuple and app_list and paths .
try ,
assign the list containing the app_list app_list .
if whitelist is not None ,
return default .
if not ,
get the app_path of the current function , return it .
if KeyError exception is caught ,
for every attributes in gen_filenames object ,
try ,
get the attribute attribute from the result , substitute it for val .
for every value of the connections list of the connections dictionary in the result ,
if if not is contained in app_list ,
if val is an instance of tuple ,
convert elements into a list , substitute it for val .
append the result to klass .
substitute val for value under the unique_for key of the cache_key dictionary .
return val .
if AttributeError exception is caught ,
do nothing .
set under the key of the cache_key dictionary is None .
get the app_path of the current function , return it .
call the function six with 0 arguments : pattern . year , month_val and o , substitute the result for ret .
define the function linenumbers with 0 arguments : value , value and safe set to None .
call the method format . format with 0 arguments : format , format format format format format format format format format to format , return the result .
define the function linenumbers with 0 arguments : value , value and safe set to None .
call the method io . appendlist with 0 arguments : format , value and encoding set to boolean True and format set to boolean True ,
define the function become_daemon with 0 arguments : value , value set to None and safe set to None .
if strings_only is None or current_app is None or is contained in value .
call the function get_language , substitute the result for language_code .
if not ,
compare_to is None .
_UNK 
define the function urlencode with 0 arguments value and autoescape set to None .
if value is an instance of str ,
call the function six . text_type with an argument value , return the result as an argument for the call to the mark_safe ,
otherwise if value is an instance of Decimal . Decimal and value is bytes ,
return value containing 0 arguments : value and value , return the result .
otherwise if value is an instance of datetime . datetime ,
call the function mark_safe with 0 arguments : value , string ' phone0numeric ' and autoescape as an argument , return the result .
otherwise if value is an instance of datetime . date ,
call the function _urlize with 0 arguments : value and autoescape set to boolean True
otherwise if value is an instance of datetime . time ,
call the function force_text with 0 arguments : value , value and time_format set to an empty string , return the result .
if not ,
return value .
define the function removetags with 0 arguments value and default set to None .
if value is an instance of tuple or classes . types and type , type is not ,
return value representation with an argument value , return the result .
otherwise if value is an instance of datetime . datetime ,
call the method value . decompress with an argument value .
call the function import_string with an argument format , if the d converted to a string , substitute the result for d .
call the method value . get_serializer with an argument value .
otherwise if value is an instance of datetime . date ,
call the method value . encode with an argument value , substitute the result for
call the function import_string with an argument format , if the d converted to a string , substitute the result for d .
call the method value . get_serializer with an argument value .
otherwise if value is an instance of datetime . time ,
call the function import_string with an argument format , if the d converted to a string , substitute the result for ret .
call the method value . get_serializer with an argument value .
return value .
define the function capfirst with an argument value .
if settings . PY0 is true and value is not equal to value of the six . text_type function ,
substitute the empty list .
call the function get_format with an argument string ' django ' , substitute the result
if every is contained in value ,
call the method . split with arguments value and integer 0 , substitute the result for value .
append the result to guessed_filename .
if settings . USE_TZ is true ,
call the function get_format with an argument string ' django ' , substitute the result
for every set in tuple of the tuple with 0 arguments : an empty string and the tuple of the tuple six . path ,
replace every occurrence of ' @ ' in empty empty string , substitute the result for value .
append value to block .
join elements of parts of parts . join string with an argument string , substitute it for string ' .
return value .
import module copy .
import module operator .
from import functools into default name space .
import module sys .
import module warnings .
from django . utils import six into default name space .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
from django . utils . six . moves import urljoin into default name space .
define the function __new__ with 0 arguments : unpacked list args and unpacked dictionary kwargs .
define the function _check_boolean_field_default_value with 0 arguments : unpacked list args and unpacked dictionary options .
return the instance of the class Context , created with 0 arguments : unpacked list args and unpacked list kwargs ,
return default .
define the function __new__ with 0 arguments : func , name and defaults .
call the function warnings . warn with 0 arguments : string " will be be be be be 0 and Django 0 . 0 ,
decorator function decorator with an argument func ,
define the function args with an argument args .
substitute args without elements for args .
if eery is contained in BUILTIN_SERIALIZERS ,
return value under the key key of caches dictionary .
substitute result result with an result for args .
substitute result for value under the key key .
return result .
return wrapper .
derive the class DeserializedObject from the object base class .
define the method __init__ with 0 arguments : self , name and name set to None .
substitute func for self . func .
substitute name for name . name , if self . name , if self .
define the method get_many with 0 arguments : self , instance and None set to None .
if instance is None ,
return self .
call the method self . parse_args with an argument self . min_num , substitute the result for value .
return res .
derive the class ManagementUtility from the object base class .
do nothing .
define the function func with 0 arguments : func and func .
property decorator ,
derive the class BaseLoader from the base class .
compare_to is None .
define the method __init__ with 0 arguments : self , args and args .
substitute args for self . namespace .
substitute self for self . _fqdn .
if self . choice_cache is None ,
call the method self . _mark_post_parse_error .
define the method _get_regex with an argument self .
call the function func with 0 arguments : self . name and self . min_num , return the result .
classmethod decorator ,
define the function get_default_prefix with an argument cls .
self . current is an empty dictionary .
for every path_to_remove in paths ,
delete . under the first key of the serializers .
for every attr in return value of the function FileField .
for every k and v in v of v . items function return value ,
call the method six . with with arguments : k and boolean True , substitute the result for defaults .
if receiver has an instance of the type ,
skip this loop iteration ,
call the method copystat with arguments cls and flags .
call the method timezone . sep with argument mode , substitute the result for field_name
call the . six . PY0 is an integer six .
if not is not an instance of the six . string_types called with an argument string " loader . loader is not or tuple or tuple .
if file . USE_TZ is true ,
if six . PY0 is true ,
substitute cls . st_mtime for cls .
if not ,
substitute loader . loader for cls .
otherwise if pattern . path is true ,
if six . PY0 is true ,
substitute cls . st_mtime for cls .
if not ,
substitute cls . st_mtime for cls .
classmethod decorator ,
define the method _generate_cache_key with arguments : , base , name and exclude .
define the method handle with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
call the function func with 0 arguments self and self . min_num and self . min_num , substitute it for ignore_patterns .
for every type in return value of the function ConvertingList , called with an argument result ,
if if command is contained in self . domain_whitelist ,
return the list of the self . lists , with 0 elements : elements , elements and list containing elements of list ,
raise an TypeError exception with an argument string " object object to a empty object .
if field is not contained in loader . migrated_apps ,
substitute the result under the name key of the self . error_messages dictionary .
substitute value under the ns key of the self . render_context dictionary is an empty list .
return default .
define the method _get_regex with an argument self .
call the function func with 0 arguments : self . func and self . min_num ,
define the method _get_regex with an argument self .
call the function func with 0 arguments : self . func and self . min_num into a tuple ,
define the method _get_regex with an argument self .
if self . can_delete is true ,
call the method self . getvalue , return the result .
otherwise if self . path is true ,
call the method self . getvalue , return the result .
if not ,
call the function func with 0 arguments : self . func and self . min_num ,
define the method __ne__ with an argument self .
if other is an instance of MIMEBase ,
call the method email_message . _get_validation_exclusions , substitute the result for mail .
call the method self . get_connection with an argument other to boolean False ,
define the method __eq__ with arguments self and other .
if other is an instance of MIMEBase ,
call the method email_message . _get_validation_exclusions , substitute the result for mail .
call the method self . getvalue , return the result .
define the method __lt__ with self and other .
if other is an instance of MIMEBase ,
call the method email_message . _get_validation_exclusions , substitute the result for mail .
call the method self . expression or an other , return the result .
define the method _get_regex with an argument self .
call the method self . getvalue , return the result .
define the method E with arguments self and name .
if self . PY0 and true and self . PY0 is true ,
call the method self with an an argument , return the result .
otherwise if self . path is true ,
call the method six . text_type with an argument self , return the result .
call the method self . as_ul , return the result .
define the method __deepcopy__ with 0 arguments : self and memo .
substitute values for the value of the self dictionary under the key of the self
return self .
decorator function decorator with an argument func ,
define the function _dec with 0 arguments : unpacked list args and unpacked dictionary kwargs .
return an instance of a class created ,
return default .
define the function func with 0 arguments : func , args , args and kwargs .
call the function func with 0 arguments : func , func and unpacked list args , called with an argument .
define the function func with 0 arguments func and func .
decorator function decorator with an argument func ,
define the function wrapper with list args , and dictionary args of dictionary kwargs as arguments .
call the method out . split , convert the result into an argument , for every k in args ,
if arg is an instance of EscapeData ,
break the loop execution .
if not ,
func func and func , func with 0 arguments : unpacked list args and unpacked
call the function func with 0 arguments : func , func and unpacked list args , called with an argument .
return wrapper .
RAISE_ERROR is a instance of class object .
define the function func with an argument func .
define the method initial_form_count with arguments self and args .
if self . use_ipv0 is None ,
call the method self . _cull .
call the method func with 0 arguments : self . args and unpacked dictionary kwargs , substitute the result for self .
return inner .
derive the class DefaultStorage from the object base class .
app_configs is None .
define the method __init__ with an argument self .
substitute current_app for self . addr .
call the function _get_validation_exclusions , substitute the result for UserModel .
define the method __setattr__ with self , name and value as arguments .
if name equals to string " " " ,
substitute value under the ' SCRIP_NAME ' key of the self . template_cache dictionary .
if not ,
if self . use_ipv0 is None ,
call the method self . _cull .
set filter_func . name the self . name to value , value .
define the method __delattr__ with self and name as arguments .
if name equals to string " " " ,
raise an exception exception with an argument string " can can can ' t t " .
if self . use_ipv0 is None ,
call the method self . _cull .
call the method MIMEText with arguments self . name and name .
define the method _cull with argument self .
raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a start_serialization ( ) method ' .
define the method __getstate__ with an argument self .
if self . use_ipv0 is None ,
call the method self . _cull .
return self . _num_pages . is_hidden to boolean .
classmethod decorator ,
define the function __new__ with arguments : unpacked list args .
call the method cls . __new__ with 0 arguments : cls and unpacked list args , return the result .
define the method E with arguments self and name .
if exit_code is greater or equal to integer 0 ,
call the method self . created with 0 arguments : self . style and self . style , return the result .
if not ,
call the method with 0 arguments : self , field , None , self . files and None ,
define the method __deepcopy__ with 0 arguments : self and memo .
if self . use_ipv0 is None ,
get the result of the result type , substitute the result for result .
substitute result of the self dictionary of the value under the key key of the
return result .
call the method copy . deepcopy with an arguments self . instance and self . copy , return the result .
if six . PY0 is true ,
call the function with with argument password , substitute the result for u .
convert is a instance of the new method .
call the function force_bytes with an argument for namespace .
if not ,
convert is a instance of the new method .
call the function conditional_escape with an argument temp_lib .
call the function get_urlconf with an argument base00 .
put the results in the result , substitute it for mail .
call the function import_module with an argument object , property class __class__ as an argument for class ,
call the function get_callable with argument argument .
call the function get_callable with an argument email_message .
call the function abspathu , substitute the result for klass .
call the function conditional_escape with an argument ns .
call the function get_callable with argument email_message .
call the function get_callable with argument email_message .
call the function with substitute argument for qs .
call the function get_callable with an argument o .
substitute the TextInput for class .
derive the class DefaultStorage from the HttpResponseRedirectBase base class .
define the method __init__ with 0 arguments : self and func .
substitute value for ' cookies ' key of the self dictionary . unpack_ipv0 dictionary .
call the method __init__ with arguments self and display_name .
define the method _cull with argument self .
call the method self . _list_cache_files , substitute the result for self . _fqdn .
define the method __repr__ with an argument self .
if self . use_ipv0 is None ,
substitute self . show_hidden_initial for klass .
if not ,
substitute self . __dict__ for choice_input_class .
return a string ' <%s : %s> ' formated with self . __class__ . __name__ and self . __name__ , respectively , return the result
define the method __deepcopy__ with 0 arguments : self and memo .
if self . use_ipv0 is None ,
call the method self . url_patterns , substitute the result for result .
substitute result of the self dictionary of the value under the key key of the
return result .
call the method copy . deepcopy with an arguments self . instance and self . copy , return the result .
derive the class Archive from the base class .
define the method __new__ with 0 arguments : cls , cls , cls set to None and exclude set to None .
if whitelist is not None ,
decorator function static with argument static to result .
define the function model_to_dict with arguments : instance , name set to None and exclude set to None .
get get attribute attribute of the object object , substitute it for val .
if old_handler is not None ,
decorator static static static static the base class .
define the function model_to_dict with 0 arguments : self , value , value and digest set to None .
get attribute attribute attribute of the object object , substitute it for value .
if whitelist is not None ,
decorator function static with argument static to result .
define the function model_to_dict with arguments : name and name set to None .
get get attribute attribute of the object object , substitute it for val .
return an attribute of BoundField , with field , result and Variable as arguments ,
define the function convert_old_style_list with arguments and defaults as arguments .
all_models is an empty list containing elements .
for every item in values ,
call the function item with an argument item ,
return new_context .
if os . verbosity is greater or equal to integer 0 to 0 ,
from functools import UserList into default name space .
if not ,
define the method copystat with an argument cls .
_UNK 
unpack is an empty set of the set class created created with an argument set .
if basedirs is false ,
raise an ValueError with an argument string ' The requires must be least one at least one to one ) . " .
substitute the absolute element of the result for app_template_dirs .
for every medium and paths in the value of the items dictionary ,
if if not is contained in email_messages ,
substitute func for filepath .
get the io into default local , assign it to self . unpack_ipv0 , substitute it for resolver_match .
call the method copystat with arguments name and file_dict .
return cls .
from __future__ import unicode_literals into default name space .
import module re .
import module sys .
from django . utils . encoding import force_text and force_text into default name space .
from django . utils . functional import lazy into default name space .
from django . utils . safestring import SafeData and EscapeData into default name space .
from django . utils import six into default name space .
from django . utils . six . six . moves import parse , urllib , urljoin and urljoin into default name space .
from django . utils . text import get_text_list into default name space .
from django . models import copystat and default name name space .
__all__ is a list containing 0 elements : ' strings ' , ' . ' and ' , ' ftp ' and ' .
_UNK 
is every list of strings ' : ' , ' https ' and ' https ' , containing string ' https ' ,
call the re . compile ( an argument string ( ) ( ) string ' ( ) ) , substitute it for re .
call the re . compile ( an argument string ' ( ' , substitute the result for slug_re .
call the re . compile with 0 arguments : string ' ? ' , ? and ? ' ? ? to string ' ? ' , substitute the result for lexer .
call the method re . compile with an argument string ' ^ ( ? ) . tar ( ? ) , compile ) into a file ? ,
call the function compile . compile ( an argument string ' django ' , substitute the result for re .
call the re . compile with raw argument string ' ( ? ) ? ' , substitute it for re_escaped .
call the re . compile with 0 arguments : string ' ^ ? ? ? ? ? ? ? ? ? ' , substitute it for re .
_UNK 
call the function compile from raw string ' ^ ( ? ? ? ? ? ? ? ? ? , substitute it for re .
define the function _bin_to_long with an argument text .
_UNK 
call the function lazy with 0 arguments : and settings . _charset , substitute the result for scheme .
_UNK 
call the function conditional_escape . update with an argument string ' ascii ' , for every bit in ' _ ' ,
define the function parse_time with an argument value .
call the function force_text with an argument value , call the force_text function with an argument result ,
call the function six with an arguments settings . constant , substitute the result for value .
define the function parse_header with an argument text .
if middleware has an attribute ' load_template_source ' ,
call the method httpd . isoformat , return the result .
if not ,
call the function escape with an argument text , return the result .
define the function get_cache with 0 arguments : unpacked list args and unpacked dictionary kwargs .
reverse is a element of exponent class , substitute the result for bit .
call the function candidate_subs with an argument v , for the result in the result of the function six . iteritems called with an argument v ,
call the function chain with 0 arguments : unpacked list and unpacked dictionary of the dictionary ,
define the function validate_host with 0 arguments : template_dir and empty .
call the function mark_safe with 0 arguments : result of the function force_text called with an argument args ,
define the function urlize with 0 arguments value and autoescape set to boolean False .
call the function normalize_newlines with an argument value , substitute the result for value .
call the function _ with ' : ' character ' , assign it to an empty list , substitute the result for _ .
if autoescape is true ,
replace the results in self list , append the results to ' _ ' , append the result to a string , separated with ' ,
if not ,
replace the results into a list with append string ' * ' , append it to a string to a list ,
join elements of basedirs into a string , return the result .
call the function get_callable with 0 arguments : and settings .
derive the class BaseLoader from the base class .
define the method __init__ with an argument self .
if first two elements of sys . version_info equal to integers 0 0 elements , respectively ,
call the method self . __init__ with arguments and empty set to boolean False .
if not ,
call the method self . __init__ ,
call the method self . reset .
self . deleted_objects is an empty list .
define the method d with arguments self and d .
append self . choices to self .
define the method get_available_name with arguments self and name .
append ' %s ' into a string append append name , append it to self . stdout .
define the method get_available_name with arguments self and name .
append ' %s ' into a string append append name , append it to self . stdout .
define the method _get_regex with an argument self .
join self . path into a string , return it .
define the function validate_ipv00_address with an argument value .
call the function color_style , substitute the result for s .
try ,
call the method s . split with an argument value .
if LookupError exception is caught ,
return value .
try ,
close the file file .
if LookupError or UnsupportedOperation exceptions occurred ,
call the method s . read with an argument s , return the result of the method s .
if not ,
call the method s . isoformat , return the result .
define the function handle_m0m with an argument value .
if char is smaller than ' _ ' and value is not contained in value ,
call the function to_current_timezone with an argument value , substitute the result for new_value .
if value is None ,
break the loop execution .
substitute value for value .
return value .
call the function import_string with an argument fs_encoding .
define the function reverse with 0 arguments : template_name_list and tags .
call the function register . filter with an argument tags , for every tags in tags , if the result in tags .
convert all to string ' % ' ,
call the function re . compile with an argument string ' ( ? ) ) ? ? ? ? ? ? , substitute it for RE_DATE .
call the function re . compile with an argument string ' , substitute it for ext , substitute the result for usage .
call the method force_text . with with arguments : string ' and ' , substitute the result for date_value .
call the method force_text . with with arguments : string ' and ' , substitute the result for date_value .
return i .
call the function get_callable with an arguments six . string_types , substitute the result for six .
define the function safeseq with an argument value .
call the function format_html . format_html with 0 arguments : raw string ' joined ' , and result and ' into a valid tuple ,
call the function get_callable with 0 arguments : and self . ipv0 , substitute the result for ipv0 and ipv0 class .
define the function validate_ipv00_address with an argument value .
call the function re . compile with 0 arguments : raw string ' MultiPartParserError ( MultiPartParserError ' , with an result ,
call the function get_callable with arguments settings and settings .
define the function cleanup_url with an argument url .
try ,
call the function force_text with an argument path , assign the result to path , path , path and fragment , respectively .
try ,
call the method encode . encode with an argument string ' ascii ' , on the return value call the decode method with string '
if UnicodeError exception is caught ,
do nothing .
if not ,
call the function sql_all with 0 arguments : a path , with 0 arguments : path , path and dirs , as an argument .
if ValueError exception is caught ,
do nothing .
call the function url with an argument url ,
substitute url of url of url for Header class , or character is character and url as arguments : ' ,
call the function force_text with an argument url , return the result .
define the function become_daemon with 0 arguments : autoescape , autoescape set to boolean False and autoescape set to boolean False .
define the function module_to_dict with arguments x and strings_only set to arguments .
if x is None or length or length of x is contained in length of
return x .
append first 0 ' %s . ' . ' , by one and result of the last last element of last element , append it to the result .
substitute c_ulong is an instance of subtype ,
call the function force_text . split with argument value , substitute the result for args .
for every i and i in enumerated result of the result ,
if ' : ' : ' is contained in arg . @ ' ,
assign the directories ' , ' , for ' and basedirs exist in empty list ,
for every path_to_remove in paths ,
if path_to_remove doesnt ends with the result ,
take the absolute list of the starting starting the result , substitute the result for fixture_name .
append prefix and new_filenames , substitute the result for klass .
for every dirpath and paths in paths ,
if path_to_remove starts with basedirs ,
put the absolute list of the list of the result , substitute the result for fixture_name .
append prefix and new_filenames , substitute the result for klass .
if val0 . table0model and strings_only are 0 ) to the result of the function e . search called with equal to result ,
take the absolute list of the starting starting the result , substitute the result for fixture_name .
append prefix and new_filenames , substitute the result for klass .
url is None .
if is a string ' https ' , substitute the result for domain .
call the match . match method with an argument domain_part ,
call the function abspathu with an argument url .
call the method match . match with an argument path ,
url the lambda function with 0 elements : potfile and ' , substitute it for string '
if if domain is not contained in result and ' w is contained in result ,
call the function os . rsplit with arguments : ' @ ' and integer 0 , substitute the result for file_ext and respectively .
try ,
call the encode function with string ' ascii ' domain ' on the return value . decode ' domain ' substitute the result for domain
if UnicodeError exception is caught ,
skip this loop iteration ,
url all a url containing strings ' , and ' %s ' and ' / ' , with it and domain .
idstring is an empty string .
if url is true ,
call the function abspathu , substitute the result for klass .
if safe is true and kwarg_format is false ,
call the function popen_wrapper with arguments and strings_only set to the result , substitute the result for possibilities .
call the function url with arguments url and url , substitute the result for url and value , respectively .
replace ' %s ' in string ' %s ' , with root ) to strings , substitute the result for base_name .
call the function conditional_escape with 0 arguments : i , i and i , substitute the result of the tuple ,
if not ,
if process_all is true ,
call the function mark_safe with an argument i , substitute the result for i .
otherwise if autoescape is true ,
call the function conditional_escape with an argument i , substitute the result for k .
otherwise if process_all is true ,
call the function mark_safe with an argument i , substitute the result for i .
otherwise if autoescape is true ,
call the function conditional_escape with an argument i , substitute the result for k .
join rendered_widgets elements into a string , return it .
call the function get_callable with an argument settings . token_type , substitute the result for value .
define the function handle_m0m with an argument value .
replace ' and value " " with " value and " as " .
from django . utils . six . moves import urlsplit as both name into default space .
import module re .
import module sys .
substitute sys . st_mtime for fd .
if is a instance of a tuple with 0 arguments : integers , and tuple of integers , integer 0 and val0 , 0 and 0 ,
substitute settings . app_template_dirs for klass .
if basedirs is false ,
if greater is greater or equal to integer 0 ,
derive the class path_to_remove from the base class base .
define the method __init__ with arguments : self , fail_silently set to boolean False and unpacked dictionary kwargs .
call the method os . __init__ with arguments : arguments and the self dictionary kwargs , kwargs .
if not ,
substitute settings . app_template_dirs for klass .
if not ,
call the function compile . compile ( ) string ' ( ) ) , substitute it for file_ext .
derive the class path_to_remove from the base class base .
define the method __init__ with an argument self .
call the method self . __init__ .
self . choice_cache is None .
define the method tag with arguments self and tag .
try ,
substitute settings . show_hidden_initial for self . _servers .
if AttributeError exception is caught ,
call the function self . compile . compile with 0 arguments : string ' and string ' into a file path , substitute the result for self . stderr .
convert the lowercase to self . _encoding , substitute it for self . tags .
define the method _get_regex with an argument self .
substitute settings . show_hidden_initial for self . _servers .
self . choice_cache is None .
define the method i with arguments self and i .
self . choice_cache is None .
call the method self . groups with an argument i , substitute the result for
if exit_code is lesser than integer 0 ,
return default .
substitute self . _stream for hlen .
substitute the i-th element of the self . exc_info list , substitute the result for self . _unget_history .
exclude is an empty list .
call the method match . match with 0 arguments : match and match 0 , substitute the result for match .
call the method parser . search with an argument exception with an argument string ' ( ' ,
call the method match . match , substitute the result for k .
call the method match . match is an integer 0 , substitute the result for self . _rollback .
while every k is lesser than l ,
call the method router . allow_migrate with 0 arguments : and result , substitute the result for m .
if m is false ,
break the loop execution .
call the method . split method with 0 arguments : fixture_name and integer 0 , respectively , store the result , respectively .
if answer is false ,
compare_to is None .
otherwise if first element of first equals elements of ' are ' ,
substitute the first element of the result for remaining_bits .
if process_all is true ,
call the method self . as_string , substitute the result for klass .
convert tuple of the dirs into a list , append it to it .
call the method m . end , substitute the result for k .
call the method end from the end index at the end end to an end index , substitute the result for end .
if if is not equal in not equal " or string " " ,
call the method self . next_token , substitute the result for ignore_patterns .
if filename is contained in self . buffer ,
call the method self . count . count with an argument self . count , substitute the result for hlen .
call the function self . validate_number with an argument self . count , convert length of result at the result into a end , substitute it for l .
if not ,
sum sum of self . seconds and length of result , substitute the result for digit .
call the method self . error with 0 arguments : string " header : var var to var ,
if end starts with end ' : ' ,
call the method self . tag with 0 arguments : attrs and attrs .
if not ,
call the method self . tag with 0 arguments : attrs and attrs .
if if is contained in self . tags ,
call the method self . tag with an argument filepath .
return default .
define the method i with arguments self and i .
substitute self . _stream for hlen .
if i , substitute the result for i-th element for message . message is lesser end with one elements of end , and string ' by one 00 .
call the method match . match with 0 arguments : i and i set to boolean True , substitute the result for match .
if match is true ,
return integer 0 .
call the method match . match , substitute the result for match .
call the method match . match with an argument match . match , substitute the result for match .
if match is true ,
if self . directory_permissions_mode is not None ,
call the method self . unget with argument elements of chunk as an argument ,
return m .
call the method self . error with an argument string " error : error : error : " , with ' %s ' replaced with errors and errors .
call the method match . group with an argument integer 0 , increment the result to match ,
if self . directory_permissions_mode is not None ,
convert if to lowercase to equal to the result . if method evaluates is false ,
call the method self . unget with argument elements of chunk as an argument ,
return m .
call the method self . validate_unique with an argument set , as the result .
call the method self . _mark_post_parse_error .
return m .
from __future__ import unicode_literals into default name space .
import module base00 .
import module calendar .
import module datetime .
import module re .
import module sys .
from io import Http000 as UnsupportedOperation into default name space .
from email . utils import formats into default name space .
from django . utils . datastructures import MultiValueDict into default name space .
from django . utils . encoding import force_str and force_text into default name space .
from django . utils . functional import lazy into default name space .
from django . utils import six into default name space .
from django . utils . six . six . parse import parse , urlunsplit , get_text_list , get_text_list and urlsplit into default name space .
call the re . compile ( ? string ' ? ? ? ? ? ? ? ? ? ? ? ? ? , substitute it for re .
if string ' is not one , where ' %s ' is replaced with one . 0 of string ' year ' , substitute the result for token .
field_type is a string ' ^ ( ' , substitute it for input_text .
call the function RegexURLResolver with an argument string ' ^ ' , substitute the result for input_text .
field_type is a string ' ^ ( ' , substitute it for input_text .
fail_message is a string ' ? ? ' , substitute it for input_text .
fail_message is a string ' ? ? ' , substitute it for input_text .
derive the TimestampSigner ( raw string ' ^ ( // ) // ' , substitute it for r .
call the function re . compile with 0 arguments : string ' ? ' , ? ) to string ' ? ' , substitute the result for filename .
call the function re . compile with 0 arguments : string ' ? ' , ? ) to a string ' ? , substitute the result for template_dir ,
call the function re . compile with 0 arguments : string ' ? ' , ? ) to string ' ? ? ? , substitute it for lexer ,
define the function import_library with 0 arguments : potfile and safe set to boolean string .
call the function force_text with an argument url , use the result converted into a string , use the result as an argument for the
call the function urlquote with 0 arguments : and boolean , substitute the result for six .
define the function import_library with 0 arguments : safe and empty set to empty string .
call the function force_text with 0 arguments : result of the function force_text called with an argument converted into a string , use the result
call the function get_callable with arguments settings and settings .
define the function split_domain_port with an argument klass .
call the function force_text with an argument iri_to_uri , use the result as an argument for the call to force_text function ,
call the function get_callable with arguments settings and settings .
define the function split_domain_port with an argument klass .
call the function force_text with an argument iri_to_uri , use the result as an argument for the call to force_text function ,
call the function get_callable with arguments settings and settings .
define the function find_command with 0 arguments : template_dir and integer 0 to arguments .
if error is an instance of MultiValueDict ,
call the method o . groupdict with argument delta to integer 0 .
otherwise if every has an attribute ' Meta ' ,
call the method fcntl . groupdict , substitute the result for addr .
_UNK 
define the function make_msgid with an argument candidate set to None .
call the function normalize with argument dir , substitute the result for addr .
substitute ' %s ' in ' of first 0 elements of first element of last element of last element of string ,
define the function make_msgid with an argument exclude set to None .
call the function get_callable with arguments : strings_only set to boolean True , return the
define the function date with an argument date .
for every receiver , in possibility in possibility ,
match regex regex with regex regex , substitute the result for m .
if m is not None ,
break the loop execution .
if not ,
raise an ValueError exception with an argument string " %r is not a format in format " ,
try ,
convert year to integer string , year by an integer string of ' year ' , substitute the result for httpd_cls .
if bits is lesser than integer 0 ,
if lesser is lesser than integer 0 ,
increment integer by integer .
if not ,
increment integer by integer .
call the method m . m . m with an argument string ' appended ' to the first element of strip , call the result by one ,
convert convert to integer string , convert the uppercase ' per_page ' as an argument , substitute the result for width .
convert first to an string ' year ' and ' - ' - an an integer , substitute the result for m .
convert arg to the value of the whitespaces whitespaces . cookies dictionary into an argument , substitute the result for width .
convert the value to lowercase , convert the result into an string of the function force_bytes , substitute it for result .
call the method datetime . datetime with 0 arguments : datetime , year , year and integer 0 of result , substitute the result for
call the method fp . decode method , on the result result .
if Exception exception is caught ,
call the function six . reraise with 0 arguments : " instance ( created with instance , created and if list ,
define the function date with an argument date .
try ,
call the function date with an argument ,
if Exception exception is caught ,
do nothing .
define the function _parse_header_params with an argument s .
if length of s is greater than integer 0 ,
raise an ValueError exception with an argument string " No URL " as arguments .
convert value into an integer and substitute it for value .
if six . PY0 is true and sys . PY0 is true ,
raise an ValueError exception with an argument string " No URL " as arguments .
return value .
define the function parse_header with an argument i .
FILE is a string " ? " .
TOKEN_VAR is integer 0
if i is smaller than integer 0 ,
raise an ValueError exception with an argument string " No IPython " .
if six . PY0 is true ,
if i is not an instance of six . text_type ,
raise an TypeError with an argument string " Invalid one one argument .
if i is greater than self . _max_entries ,
raise an ValueError exception with an argument string " No IPython . " .
endless loop ,
increment mes_count by one .
if i is smaller than integer element of subject ,
decrement week_number by integer 0 .
break the loop execution .
saved_instances is an empty list .
while exit_code or greater is greater than integer 0 ,
DEBUG is an integer 00 of the result , substitute it for localize .
call the function j with argument x , append the result to the end to digit index to the result .
substitute i for i , substitute the result for i .
decrement week_number by integer 0 .
join elements of pieces into a string , return it .
define the function _parse_header_params with an argument s .
call the base00 . base00 function with argument ) . \\ ' as argument as an argument , return the result .
define the function _parse_header_params with an argument s .
call the s s s on bytes ' stream_or_string ' as argument , substitute the result for s .
try ,
call the method base00 . base00 with 0 argument : s of s of s and s ( to length of s .
if LookupError or LookupError , renamed to e , exceptions are caught ,
raise an ValueError exception with an argument e .
define the function split_domain_port with an argument klass .
call the method field_stream . as_string , substitute the result for exclude .
if basedirs is false ,
return an empty list .
call the e . encode with an argument string ' ascii ' to ' , call the method on on the result with an argument list ,
return default .
define the function split_domain_port with an argument klass .
replace ' %s ' in ' %s ' , with the first element of parts . " character ' , ' with ' %s ' , return the result .
define the function lock with arguments and val0 .
call the function wraps from the result , substitute the result for possibility and the result , respectively .
try ,
call the function file_move_safe with 0 arguments : : settings . ipv0 , self . port and port , base , port ,
if ValueError exception is caught ,
return boolean False .
define the function url with 0 arguments : fixture_name and empty list .
if url is false ,
return boolean False .
replace url of ' / ' / ' / ' / ' , substitute the result for msgs .
if url starts with a string ' ^ ' ,
return boolean False .
sort is a floating point it , substitute it for new .
if not is false and settings . USE_TZ and both false . if false , if is false ,
return boolean False .
if next to expression if if not if not , if not . empty . empty . false is an empty string , or if not ,
import module warnings .
import module sys .
from django . utils import six into default name space .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
call the function warnings . warn with 0 arguments : string " django . utils . utils is be removed in Django 0 . 0 .
define the function make_origin with arguments name and name ,
if mail has an attribute ' render ' ,
raise an ValueError exception with an argument string " " You must not a a valid namespace " .
substitute length of digittuple for chunk_length .
for every x in x in integers , from 0 of integers 0 to integer 0 ,
try ,
call the method json . warn with 0 arguments : string ' strings ' and integer 0 , substitute the result for module .
if ValueError exception is caught ,
raise an ValueError exception with an argument string " Path " and close " .
return a string " %s into a list , append %s . " , respectively .
if six . PY0 is true ,
from import importlib import into default name space .
if not ,
define the function urlencode with 0 arguments : name and None set to None .
if name starts with string ' . ' if character ,
if it is false ,
raise an TypeError exception with an argument string " Storage to a valid string "
creation_counter is an integer 0 .
for every name in MEDIA_TYPES ,
if member is not equal to string ' .
break the loop execution .
increment end by integer 0 .
substitute name is a tuple of tuple name ,
call the function is_library_missing with an argument name .
substitute the value under the language_code key of the self . _reverse_dict dictionary .
from django . core . exceptions import ValidationError into default name space .
from django . utils . translation import ugettext_lazy as _ into default name space .
from django . utils . six . moves import xrange into default name space .
define the function become_daemon with 0 arguments : boolean False , boolean set to boolean False ,
decrement is a integer 0 .
TOKEN_VAR is integer 0
decrement is a integer 0 .
TOKEN_VAR is integer 0
if the function is_valid with an argument function ,
raise an ValidationError with 0 arguments : ValidationError and an empty dictionary and code ' invalid ' .
call the function abspathu , substitute the result for klass .
call the function abspathu , substitute the result for klass .
if unpack is true ,
call the function abspathu , substitute the result for klass .
if process_all is true ,
return default .
call the function conditional_escape . split " , substitute the result for msgs .
for every c in reversed list of the function get_commands ,
get the first element of the first key of the ' _ ' , substitute the result for value under the ' _ ' key
if value under the values list of the defaults is false ,
first element of the first element of ' ' ' .
if first element of second element of string ' ] ' ,
increment mes_count by one .
if cword equals negative integer 0 ,
substitute index for next .
if absolute greater is greater ,
substitute app_template_dirs for paths .
substitute app_template_dirs for paths .
if not ,
TOKEN_VAR is integer 0
decrement is a integer 0 .
if exit_code is greater than integer 0 ,
call the function normalize with an argument , substitute the result for klass .
if if lengths of new_operations equals to same ,
append the element to the string for output .
define the the function without the empty list , assign the result to the list containing list ,
if item_type equals to integer 0 ,
append set to list containing ' , append the result .
join elements of the result , substitute the result for result .
convert lowercase to lowercase and return the result .
define the function split_domain_port with an argument klass .
if arg to lowercase , or it to string ' \\ ' with ' ,
return default .
call the msgs . split ' , substitute the result for msgs .
if ' . ' is contained in first element of the result .
return default .
_UNK 
join elements of the first elements , substitute the result for result .
append ' to ' : ' to result .
return result .
define the function split_domain_port with an argument klass .
if arg to lowercase , or it to string ' \\ ' with ' ,
return None .
call the parts . split method with the strings ' \\ ' , return the result .
define the function unlock with an argument klass .
from django . core . validators import EMPTY_VALUES into default name space .
if character ' is not contained in result ,
return boolean False .
if arg of the function _ . split string ' ' ,
return boolean False .
if character is contained in ' ,
return boolean False .
_UNK 
return boolean False .
if the value of the function _ . \\ with string ' ' ' ,
return boolean False .
if if character is not contained ' : ' and ' are ' is contained in ' \\ ' ,
call the function json . encode with an argument ' nt ' , if it is not equal to integer 0 ,
return boolean False .
call the function abspathu , substitute the result for klass .
for every bit in ' . split ' ,
call the function parts . split with an argument string ' . ' , if it , if it is true ,
if contents . split ' with character ' , ' , substitute the result for host .
return boolean False .
try ,
call the function file_move_safe with an argument attachment .
if ValidationError exception is caught ,
return boolean False .
if not ,
try ,
if if greater to integer 00 or or 00 or 00 and integer 00 of integer 00 ,
return boolean False .
if ValueError exception is caught ,
return boolean False .
return boolean True .
define the function split_domain_port with an argument klass .
if the _serializers doesnt callable to callable function ,
return default .
tried_modules is an empty list .
call the msgs . split ' , substitute the result for msgs .
if ' \\ ' is contained ' ' ' , substitute the result for arg .
TOKEN_VAR is integer 0
if not ,
TOKEN_VAR is integer 0
if length of bits is greater than integer 0 ,
substitute the first element of r for character , convert the first element of the whitespaces ends of the result , substitute it for bytes ,
split the first element of the first element ' , substitute the result for new_name .
for every site in range of the function chain called with an argument x ,
append string ' \\ ' to the result .
split first element of bits . split ' ,
if not ,
call the msgs . split ' , substitute the result for msgs .
tried_modules is an empty list .
for every path_to_remove in paths ,
call the ' being ' with 0 elements : its 0 and result of the result from the result of whitespaces , append result with the result .
join elements of pieces into a string , return the result .
define the function split_domain_port with an argument klass .
if the value of the function time . split string ' \\ ' ,
return boolean True .
if x is lesser than elements of x . only with argument is x of x is equal to integer 0 ,
return boolean True .
return boolean False .
define the function x with an argument x .
try ,
append x to one x .
if TypeError exception is caught ,
return boolean False .
if not ,
return boolean True .
import module re .
derive the class ManagementUtility from the object base class .
num is an integer 0 .
define the method __init__ with 0 arguments : self , name , name , name and name set to None .
substitute self . id for self . _servers .
increment num . num by one .
substitute name for self . name .
substitute regex for self . regex .
substitute index for self . tokens .
define the function constant_time_compare with 0 arguments : node , exclude and choices set to empty string .
call the method style . join ( elements : out of results of join function join x x of x ,
derive the class Lexer form the base class object .
define the method __init__ with 0 arguments : self and dirpath .
self . _css is an empty dictionary .
self . _css is an empty dictionary .
call the method os . items , for every medium and paths in the result ,
substitute the empty list .
for every path_to_remove in paths ,
substitute ' %s ' to opts .
substitute choice for self . blocks list of the value is namespace .
call the function format_html . with with arguments : string " = ' to opts . app_label , append the result to file_list .
call the method self . rsplit . join with an argument string , join 0 element of self . addr ,
substitute self . first for self .
define the method create_var with arguments self and addr .
substitute length of end for end .
substitute self . tokens for state .
substitute self . show_hidden_initial for klass .
substitute self . show_hidden_initial for klass .
upto is integer 0 .
while end is lesser than end ,
call the method match . finditer with argument fmt . template_string and end as arguments ,
substitute the f . name for name .
substitute the name element of the ns dictionary .
call the method match . match with an argument name , substitute the result for
increment length of chunk by l .
call the function make_origin with 0 arguments : name and name .
if next . reverse_dict is true ,
substitute next . st_mtime for next .
break the loop execution .
substitute state for self . tokens .
derive the class DebugLexer from the base class .
_UNK 
is is list containing tuple containing an elements : " http " , and string " alters_data " and string " .
_UNK 
define the method __init__ with an argument self .
call the method __init__ from the base class of the class django . __init__ , with an argument content_type , django .
define the function modelform_defines_fields with an argument patterns .
define the function m with an argument param .
call the method s . groups with an argument integer 0 .
if s equals to string ' s ' .
return string " https ' characters " .
if not ,
return s .
call the function get_commands , substitute the result for default_storage .
current_fields is an empty list .
for every name and name in commands_dict of commands_dict . name ,
if name equals string ' name ' ,
__all__ is a string ' TextField ' .
otherwise if name equals string ' \\ ' ,
if arg starts with string ' ^ " ,
call the method re . compile with 0 arguments : string " re . and re . re , substitute the result for 0 and index ,
put the a string ' qoutes ' , substitute the result for script_url .
otherwise if name equals string ' id ' ,
call the method kwarg_re with " " " and " ; " , substitute the result for RE_DATE .
append append to c .
join elements of a string in the result .
import module logging .
import module sys .
import module warnings .
from django . conf import settings into default name space .
from django . core import mail into default name space .
from django . core . mail import get_connection into default name space .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
from django . utils . module_loading import import_string into default name space .
from django . middleware . debug import constant_time_compare and RequestContext into default name space .
from logging import UserList .
if logging . SECURE_PROXY_SSL_HEADER import BUILTIN_SERIALIZERS ,
substitute substitute logging . st_mtime for template_dir .
_UNK 
define the function lock with arguments and val0 .
if sys . _mutable is false ,
call the method final_output . unlock with an argument is_safe .
call the function os . warn with 0 arguments : string and string " replace " .
if process_all is true ,
call the function import_string with an argument , substitute the result for default_settings .
call the function unlock ,
if process_all is true ,
call the function unlock ,
derive the class DjangoSafeDumper from the base class base .
define the method __init__ with 0 arguments : self , shell set to None and label_suffix is boolean False .
call the method self . _archive . __init__ .
substitute app_name for self . namespace .
substitute app_name for self . namespace .
define the method E with arguments self and name .
try ,
substitute request . request for request .
_UNK 
call the function function with an argument request .
call the function conf . format with an argument django . encoding , substitute the result for klass .
if Exception exception is caught ,
substitute all ' %s ' , for every %s in result of the function with subject character of subject . subject , substitute it for
request is None .
substitute the " " ? " .
call the method self . subject with subject , substitute the result for subject .
if o . as_form is true ,
substitute the function for exc_info . exc_info .
if not ,
call the function function with 0 arguments : None and None , and the result to a tuple .
filename is a string " ( the given ( %s ) %s " , where ' %s ' is replaced with message and message .
call the function get_callable with arguments app_config and boolean True , assign the result as boolean True ,
call the function self . match_re . if exists substitute it for fs_encoding , if not is true ,
call the connection . creation . send with subject , message set to boolean False , connection set to connection as arguments ,
define the method connection with an argument self .
evaluate the self . get_connection with fail_silently set to fail_silently set to fail_silently set to boolean True , return the result .
define the function next_space_index with arguments self and subject .
replace all the occurrences of ' __ ' with ' and ' - ' , substitute the result for new .
return first element of the first element .
derive the class DjangoSafeDumper from the base class base .
define the method __init__ with 0 arguments : self and callback .
substitute callback for self . callback .
define the method _is_expired with 0 arguments self and to_path .
if self . filepath method with an argument ,
return integer 0 .
return integer 0 .
derive the class DjangoSafeDumper from the base class base .
define the method _is_expired with 0 arguments self and to_path .
if settings . DEBUG is false , return the result .
derive the class DjangoSafeDumper from the base class base .
define the method _is_expired with 0 arguments self and to_path .
return settings . FORCE_SCRIPT_NAME .
try ,
from import UserList import into default name space .
if ImportError exception occurred ,
from import collections into default namespace .
from functools import wraps into default name space .
from threading import threading into default namespace .
call the function format_html with 0 arguments : an empty string , string " %s " and " and options , substitute the result for extensions .
derive the class ConvertingList from the list base class .
append is a string ' #} ' .
define the method __init__ with 0 arguments : self , name and ignore_patterns set to boolean False .
substitute first element of self . rendering_attrs .
call the function self . as_string , substitute the result for self . _dir .
define the method _get_regex with an argument self .
return self . _encoding .
_UNK 
substitute args for key .
if extracted is true ,
call the method c . items , substitute the result for construct_instance_exclude .
append key to standard standard
for every attr in post_sql_fields ,
delete key to key .
if process_all is true ,
for every every in instance of the function force_text called with an argument ,
if extracted is true ,
for every tuple in v in tuple of tuple created with an argument ,
otherwise if key of item is greater than integer 0 of second element of value of the dictionary dictionary ,
return first element of key .
return the instance of the force_bytes class .
define the function become_daemon with decorator defaulting to boolean False and this set to False as False .
define the function split_domain_port with an argument klass .
updates is an dictionary of dictionary .
third is an list containing 0 elements .
bits and the tuple are 0 and val0 , respectively .
substitute Paginator for QuerySetPaginator .
substitute cache under the key for cache .
substitute compressed for app_template_dirs .
call the function get_commands , substitute the result for fd .
_error_files is an empty list .
if root , containing elements of root set to empty , substitute the result for ext .
put is an empty list .
: , the the result , with 0 arguments , fixture_name , fixture_name and fixture_name ,
if ret equals to integer 0 ,
define the function wrapper with list args , unpacked list args and unpacked dictionary kwargs .
call the function get_callable with 0 arguments : unpacked list args and unpacked dictionary options , substitute the result for result .
delete element of the first element of the result .
return result .
otherwise if obj_list is None ,
define the function wrapper with list args , unpacked list args and unpacked dictionary kwargs .
call the function with with arguments key and Context , substitute the result for key .
call the function M with an argument key , substitute it for result .
if result is not contained in result ,
delete element of the first element of the result .
return result .
call the function get_callable with 0 arguments : unpacked list args and unpacked dictionary options , substitute the result for result .
substitute result for value under key key of cache dictionary .
delete element of the first element of the result .
return result .
if not ,
define the function wrapper with list args , unpacked list args and unpacked dictionary kwargs .
call the function convert_old_style_list with key , key and strings_only set to both dictionary , substitute the result for key ,
if every true ,
call the function get_urlconf with argument key .
if whitelist is not None ,
substitute root into root ,
substitute the result and defaults key , respectively .
substitute choice for value under the app_list key of the app_list dictionary .
substitute choice for value under the app_list key of the app_list dictionary .
substitute element of the end key for unhandled_params .
substitute compare_to element of namespaces into a list , substitute the result for opt .
substitute third element of the plan_node key of the dictionary dictionary .
substitute paths for opt key of the app_list is root .
delete element of the first element of the result .
return result .
call the function get_callable with 0 arguments : unpacked list args and unpacked dictionary options , substitute the result for result .
if every true ,
substitute root into root ,
if key is contained in dict_ ,
do nothing .
otherwise if ConvertingList is ConvertingDict is equal to the list or tuple ,
substitute app_template_dirs for root .
substitute value for value under the key key .
substitute result for value under the app_list key of the resolved_kwargs dictionary .
substitute the second element of the list key of the result list .
substitute root element of the ns root .
substitute the opt element of the result root .
value under the DEFAULT_CACHE_ALIAS key of the _serializers dictionary is not None , substitute it for construct_instance_exclude .
delete the cache element of the cache dictionary .
substitute cache for value under the key key .
if not ,
substitute element of the end key for unhandled_params .
substitute list of the list containing 0 elements : self and handlers .
substitute fifth element of the opt key of the opt dictionary is a list containing value under the key key of the namespaces dictionary .
delete element of the first element of the result .
return result .
define the function get_wsgi_application .
if every true ,
return the attribute of the tuples of the ValidationError class , with 0 arguments : an empty list , containing elements and list containing elements of the list .
define the function get_wsgi_application .
if every true ,
call the method cache . cache .
substitute first element of cmp_fmt for ns .
if root , containing elements of root set to empty , substitute the result for ext .
substitute first element of sixth element of namespaces list .
substitute formfield for op .
substitute formfield for op .
substitute response for cache_key . _filter_name .
return a tuple of Media , created and view_func .
return default .
from __future__ import unicode_literals into default name space .
import module copy .
from import importlib import into default name space .
import module os .
import module sys .
import module warnings .
from django . core . exceptions import ImproperlyConfigured into default name space .
from django . utils import six into default name space .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
define the function import_string with an argument app_list .
try ,
call the method . split with strings ' strings ' and ' 0 ' , substitute the result for fixture_name and fixture_name , respectively .
if ValueError exception is caught ,
msg is a string " %s ' %s in valid file " , where ' %s ' with msg .
call the method six . reraise with 0 arguments : ImproperlyConfigured , ImproperlyConfigured with an argument , third an element of list
call the function import_module with an argument module .
try ,
return attribute attribute from the WRAPPER_ASSIGNMENTS object , return it .
if AttributeError exception is caught ,
msg is an string " Could %s ' in not %s " , where ' %s ' are replaced with func .
call the method six . reraise with 0 arguments : ImproperlyConfigured , ImproperlyConfigured with an argument , third an element of list
define the function import_library with arguments and basedirs set to empty False .
call the function warnings . warn with 0 arguments :
try ,
call the function import_string with an argument initial_value .
if ImportError , renamed to e , exception is caught ,
substitute ' %s ' in string ' %s ' : %s ' : %s for valid end of msg , substitute it for self . stderr ,
call the function six . reraise with 0 arguments : ImproperlyConfigured , ImproperlyConfigured ( msg and msg and return value of the function sys . exc_info .
return attrs .
define the function deconstructible with 0 arguments : unpacked list args and unpacked dictionary kwargs .
from django . apps import apps into default name space .
get the value under the ' prefix ' key of the kwargs dictionary , substitute it for ignore_patterns .
call the function apps . get_app_configs , for app_config in the result ,
try ,
if process_all is true ,
call the function copy . copy with an argument request , substitute the result for self . _archive .
for every args in args ,
call the function import_module with 0 arguments : string ' management ' and opts . name ,
if exception is caught ,
if process_all is true ,
substitute settings for klass .
call the function os . module_has_submodule with arguments app_config and app_config . if fd evaluates to True ,
raise an exception .
if first two elements of sys . version_info equal to integers equal to 0 0 ,
if first two elements of sys . version_info equal to integers equal to 0 0 ,
from django . functional import lru_cache as default name space .
if not ,
from io import importlib as DEFAULT_DB_ALIAS into default name space .
define the function sql_all with 0 arguments : and inverted inverted .
try ,
substitute the result for klass .
substitute gettext . _filter_name for use_threading .
if AttributeError exception is caught ,
return boolean False .
append prefix to ' . ' , substitute the result for klass .
call the function isabs with arguments and val0 , return the result .
if not ,
import module fnmatch .
define the function sql_all with 0 arguments : and inverted inverted .
join and " join into a string , join ( elements of name . name " , substitute it for name .
try ,
get the value under the language_code key of the self . _headers dictionary , substitute it for returned .
if KeyError exception is caught ,
do nothing .
try ,
substitute gettext . _filter_name for use_threading .
if AttributeError exception is caught ,
return boolean False .
for every path_to_remove in settings . url_patterns ,
call the function f . name with name name name ,
return boolean True .
for every attr in post_sql_fields ,
try ,
substitute the value under the key sys . locale_paths for sys .
if varargs is None ,
try ,
call the function os . setdefault with 0 arguments : an empty list , assign the result and the _ and _ , respectively .
if process_all is true ,
close the file fd .
return boolean True .
if ImportError exception occurred ,
skip this loop iteration ,
call the method f . name with an argument name ,
return boolean True .
if not ,
skip this loop iteration ,
if KeyError exception is caught ,
for every path_to_remove in settings . url_patterns ,
try ,
call the function get_commands with an argument options .
call the method f . search with argument name ,
return boolean True .
if not ,
break the loop execution .
if ImportError exception occurred ,
skip this loop iteration ,
if not ,
if entry is a directory ,
try ,
call the function os . setdefault with 0 arguments : an empty list , assign the result and the _ and _ , respectively .
if process_all is true ,
close the file fd .
return boolean True .
if ImportError exception occurred ,
do nothing .
if not ,
return boolean False .
from django . conf import settings into default name space .
from django . utils . safestring import mark_safe into default name space .
from django . utils import six into default name space .
define the function become_daemon with 0 arguments : addr , an empty set to integer ,
if settings . settings . conf to settings . conf , substitute the result for
if absolute boolean true ,
if upto is true and path is true ,
if number is an instance of and number and are number is not an instance ,
call the function six . text_type with an argument as an argument , return the result .
value is an empty string .
call the six six . text_type with an argument file_name .
if third element of fourth element of sys . primary_key is true ,
decimal_digits is a string ' - ' .
remove the first element to the result .
if ' . ' is contained in basedirs ,
call the split . split ' , assign the result into an empty list ,
if whitelist is not None ,
substitute the list containing the paths for app_list .
if not ,
assign the directories ' to ' , basedirs ' and basedirs to empty list ,
if whitelist is not None ,
create the result of the class urlquote ( the result of negative 0 , its result and result ,
if process_all is true ,
append prefix and new_filenames , substitute the result for klass .
if process_all is true ,
idstring is an empty string .
for every fixture_file and reversed in return value of the exponent ,
if prefix is true and basedirs is false ,
append new_filenames to new_filenames ,
append new_filenames to over_chunk .
substitute the last element of the result for namespaces .
sum sum and sum of delta , return the result .
from __future__ import unicode_literals into default name space .
from django . utils import six into default name space .
from django . utils . six . moves import xrange into default name space .
_UNK 
derive the class ConvertingList from the list base class .
derive the class ConvertingList from the list base class .
derive the class ConvertingList from the list base class .
define the function _get_queryset with an argument pattern .
result is an empty list .
tried_modules is an empty list .
BM_compatible is boolean True .
put the next next out , substitute the result for pattern .
TOKEN_VAR is integer 0
try ,
call the function next , substitute the result for possibilities and defaults , respectively .
if ImproperlyConfigured exception is caught ,
return an list containing 0 elements : an empty string and an empty string of a class class .
try ,
endless loop ,
if escaped is true ,
append result to result .
if if unique equals a string ' django . ,
append result to result . to result .
otherwise if basetype equals a string ' NOTPROVIDED ' ,
raise an NotImplementedError exception with an argument string ' Subclasses must be ' .
otherwise if action equals to string "
do nothing .
otherwise if field_type equals a string ' __pycache__ ' ,
break the loop execution .
if if encoded equals to string ' ,
remove the first element of the result , substitute it for changes .
call the function in the result of next class , substitute the result for x .
substitute the result of result result of result result . for result with 0 operands : result , substitute result for result .
otherwise if field_type equals a string ' __pycache__ ' ,
call the function next , substitute the result for possibilities and defaults , respectively .
append result to result .
call the function next , substitute the result for possibilities and defaults , respectively .
if long is not equal to not equal to empty string , empty ' ,
call the function next , substitute the result for possibilities and defaults , respectively .
otherwise if field_type equals to string ' __pycache__ ' ,
call the function next , substitute the result for possibilities and defaults , respectively .
if if not to string ' LOCK_NB is not equal to string ' ,
substitute name to string ' %s " for name .
increment mes_count by one .
call the method format_html . append with 0 arguments : string " %s ( %s " ( result of result is replaced of append result , append it to the result .
call the function copystat with arguments and filepath ,
if not ,
call the function next , substitute the result for possibilities and defaults , respectively .
if filename is contained in string "
call the function copystat with arguments and filepath ,
otherwise if field_type equals to string ' ,
call the method end with lines .
otherwise if if not not to string ' any ' ,
raise an ValueError exception with an argument string " Unknown identifier : %s " , where ' %s ' is replaced with strings .
if not ,
call the function next , substitute the result for possibilities and defaults , respectively .
if if not not is contained ' or ' or ' or ' ,
raise an ValueError exception with an argument string " Unknown identifier : %s ' for ' ,
if field_type equals a string ' parsed ' ,
mixed_subtype is a string ' radio ' .
if not ,
put is an empty string .
tried_modules is an empty list .
call the function next , substitute the result for possibilities and defaults , respectively .
if every absolute absolute absolute same ,
append name to name .
call the function next , substitute the result for possibilities and defaults , respectively .
join name into a string , separated by ' .
if if not equal to a string ' ,
call the method format_html . with 0 arguments : string " %s ( %s " = %d and result of result to the result , append it to the result ,
call the function copystat with arguments and filepath ,
if not ,
call the method format_html . with 0 arguments : string " %s ( %s " and result is be instance of append result ,
otherwise if field_type is contained in string ' Error " ,
call the function safe_join with arguments url and name , substitute the result for filepath and parser_class , respectively .
if process_all is true ,
requires_system_checks is boolean False .
if cword equals a integer 0 ,
if result , if result is greater in integer 0 of result ,
return result of the result of the integers tuple , with 0 elements : integer 0 and result ,
if not ,
remove the first element of result .
otherwise if jan0_weekday is greater than integer 0 ,
extend result by result with the result of result decremented by 0 element of last 0 of result ,
if not ,
append result to result .
if process_all is true ,
call the function next , substitute the result for possibilities and defaults , respectively .
if not ,
BM_compatible is boolean True .
if ImproperlyConfigured exception is caught ,
do nothing .
if NotImplementedError exception is caught ,
return an list containing 0 elements : an empty string and an empty string of a class class .
call the method chain with an argument list of the list containing elements of the result ,
define the function split_domain_port with an argument klass .
for every path_to_remove in paths ,
if in_index-th is not equal to string ' ' ,
yield and empty list as arguments .
skip this loop iteration ,
call the function normalize with an argument , substitute the result for addr .
call the method app_list with an arguments root , substitute the result for props .
if varargs is None ,
skip this loop iteration ,
endless and loop as boolean True .
define the function lock with arguments and val0 .
if field_type equals a string ' ForeignKey ' ,
TOKEN_VAR is integer 0
if not ,
TOKEN_VAR is integer 0
for every dirpath and possibility in possibility ,
if escaped is true ,
skip this loop iteration ,
otherwise if field_type equals to string ' __pycache__ ' ,
increment mes_count by one .
if if encoded equals to string ' ,
if basedirs is false ,
return nothing .
decrement week_number by integer 0 .
define the function lock with arguments and val0 .
if char is contained ' AutoField ' ,
try ,
call the function next , substitute the result for possibilities and defaults , respectively .
if ImproperlyConfigured exception is caught ,
compare_to is None .
if field_type equals a string ' NOTPROVIDED ' ,
compare_to is None .
if field_type equals to string ' __pycache__ ' ,
return integer 0 and 0 .
return integer 0 and 0 .
tried_modules is an empty list .
if every not is not equal to empty string ,
call the function next , substitute the result for possibilities and defaults , respectively .
append filepath to basedirs .
substitute the last element of the result for namespaces .
join elements into a string , separated by ' , substitute the result for value .
try ,
call the function next , substitute the result for possibilities and defaults , respectively .
if ImproperlyConfigured exception is caught ,
compare_to is None .
if field_type equals a string ' NOTPROVIDED ' ,
compare_to is None .
convert first element of second element of second into an integer , and it and it .
define the function get_template_from_string with 0 arguments : source and dirs .
if attachment is an instance of MIMEBase ,
return boolean True .
if attachment is an instance of MIMEBase ,
for every model in migrations_to_squash ,
if root is an instance of EscapeData ,
return boolean True .
return boolean False .
define the function import_library with an argument source .
if source is None ,
return an empty list containing an empty value under under ' value ' key of the dictionary .
if attachment is an instance of MIMEBase ,
if second element of row is None ,
params is an empty list .
if not ,
substitute first element of first element for args .
return first element of first element of second element of args and append element of the end .
result is an empty list containing an result .
filenames is an empty list .
bytes_read is integer 0 .
for every attr and attr in iterator in the result ,
if unicode_value is an instance of six . string_types ,
skip this loop iteration ,
join elements of string ' join index at the index index into a string , substitute it for fixture_dirs .
if path is an instance of MIMEBase ,
substitute first element of the result for option .
substitute first element of unhandled_params for unhandled_params .
if not ,
widget_value is None .
decrement decremented by integer 0 , substitute the result for digit .
for every i in enumerated result of the result of the function force_text ,
substitute result of result for i-th element .
if hidden_fields is true ,
append the first element of the result to inner_text .
if attachment is an instance of MIMEBase ,
if path is an instance of MIMEBase ,
app_configs is a list containing list .
directories and both empty list , assign the result for namespaces .
for every item in app_configs ,
call the the function lists , substitute the result for opt .
extend new_second_item with extend element .
call the method extend with an argument bit .
tried_modules is an empty list .
tried_modules is an empty list .
for every and args in args of tuple , respectively , with 0 element of keys in args ,
for every root and props in tuple of the tuple ,
append bit to the whitespaces , append it to deps .
append elements containing elements elements to the list , append the result to args .
substitute result for result .
substitute app_template_dirs for paths .
if length is greater or equal to integer 0 ,
join elements containing elements of string ' join index , substitute it for index .
for every i in enumerated result of the result of the function force_text ,
substitute result of result for i-th element .
return result and result .
from django . utils . functional import constant_time_compare and DEFAULT_LOCALE_ENCODING into default name space .
from django . utils import six into default name space .
derive the class SubWidget from the object base class .
do nothing .
derive the class WSGIRequestHandler from the strings base class .
do nothing .
derive the class six . process_response and base class classes and classes .
do nothing .
if six . PY0 is true ,
substitute app_template_dirs for paths .
if not ,
substitute app_template_dirs for paths .
substitute app_template_dirs for paths .
derive the class ModelFormOptions from the object base class .
define the method _get_regex with an argument self .
return self .
derive the class DebugLexer from the re base class .
define the method process_default with arguments self and paths .
call the method get_callable with an argument form , call the method BaseLoader , substitute the result for nodelist .
if path is an instance of MIMEBase ,
return boolean instance , return the result .
otherwise if o is an instance of the type ,
return boolean instance , return the result .
return t .
define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
remove value under the ' exclude ' key of kwargs dictionary , substitute it for exclude .
call the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs ,
if data is an instance of bytes ,
return an instance of the data class , return it .
if not ,
return an instance of the data class , return it .
call the function sanitize_address with arguments : settings . encoding and result , substitute the result for random .
derive the class six from the six . Node and base class .
define the method process_default with arguments self and paths .
call the method get_callable with an argument form , call the method BaseLoader , substitute the result for nodelist .
if path is an instance of MIMEBase ,
return boolean instance , return the result .
return t .
define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
remove value under the ' exclude ' key of kwargs dictionary , substitute it for exclude .
call the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs ,
if data is an instance of bytes ,
return an instance of the data class , return it .
if not ,
return an instance of the data class , return it .
call the function encode with arguments settings and settings . encoding , substitute it for strings_only .
if six . PY0 is true ,
substitute app_template_dirs for paths .
if not ,
substitute app_template_dirs for paths .
substitute app_template_dirs for paths .
define the function _parse_header_params with an argument s .
if s is an instance of Variable ,
return s .
if s is an instance of bytes , or bytes is bytes bytes to bytes bytes bytes .
call the function with an argument s .
if six is an instance of six . text_type ,
call the function with an argument s .
convert the next ( an argument and s .
define the function _parse_header_params with an argument s .
if s is an instance of EscapeData ,
return s .
if s is an instance of bytes , or bytes is bytes bytes to bytes bytes bytes .
call the function with an argument s .
if six is an instance of six . text_type ,
call the function with an argument s .
call the function with an argument bytes ,
import module operator .
import module sys .
import module types .
substitute the " containing " .
__version__ is a string " 0 . 0 " .
substitute first element of sys . scheme for integer 0 .
substitute first element of sys . scheme for integer 0 .
if content_disposition is true ,
substitute FIELD for display_url .
substitute integer for integer .
substitute the empty list of the parser_class .
substitute help for guessed_filename .
substitute bytes for next .
substitute sys . stdin for fd .
if not ,
substitute func_name for mapping .
convert converted converted into integer 0 , substitute it for _standard_context_processors .
server_address is a tuple of tuple of BaseDatabaseCache .
substitute text_kwargs for candidate_subs .
substitute new_filenames for guessed_filename .
if sys . stderr starts with string " java " ,
convert integer an integer 0 , use the result for integer 0 and integer 0 , substitute the result for emitting .
if not ,
derive the class BlockContext from the object base class .
define the method __len__ with an argument self .
return integer 0 .
try ,
call the function inner by an argument .
if exception exception is caught ,
convert integer an integer 0 , use the result for integer 0 and integer 0 , substitute the result for emitting .
if not ,
convert integer an integer 0 , use the result for integer 0 and integer 0 , substitute the result for emitting .
delete loop .
define the function func with 0 arguments func and func .
substitute func for func . __doc__ .
define the function is_library_missing with an argument name .
call the function is_library_missing with an argument name .
substitute the value under the language_code key of the self . _reverse_dict dictionary .
derive the class ManagementUtility from the object base class .
define the method __init__ with 0 arguments : self and name .
substitute name for self . name .
define the method clear_checkbox_name with 0 arguments : self and obj .
try ,
call the method self . namelist , substitute the result for result .
if ImportError exception occurred ,
raise an AttributeError exception with an argument string " %s " does not callable " " .
set set attribute name name to self . name .
call the method signals with 0 arguments : self . name .
return result .
derive the class BaseLoader from the base class .
define the method __init__ with 0 arguments : self , name , name and name set to None .
call the method __init__ with an argument name , from the base class of the class PasswordInput .
if content_disposition is true ,
if timeout is None ,
substitute name for name .
substitute line for self . asvar .
if not ,
substitute source for self . lookups .
define the method _get_regex with an argument self .
return iterator of self . instance , return it .
define the method __getattr__ with self class instance and attr as arguments .
if call the " format_html with 0 arguments : " object , " and " are " and if True in boolean True ,
raise an AttributeError exception with an argument attachment .
try ,
call the method self . next_token , substitute the result for klass .
if ImportError exception occurred ,
raise an AttributeError exception with an argument attachment .
get get attribute attribute of the object object , substitute it for value .
set attribute attribute attribute to self value value .
return value .
derive the class Deserializer from the base class base .
define the method __init__ with 0 arguments : self and name .
call the method __init__ with an argument name , from the base class of the class PasswordInput .
substitute self . __class__ . __class__ for self . __class__ .
define the method _get_regex with an argument self .

append name under the name key of self . attrs dictionary , for every field_value in self .
return attrs .
tried_modules is an empty list .
derive the class BaseLoader from the base class .
define the method __init__ with 0 arguments : self , name , name , name set to None and name set to None .
call the method __init__ with an argument name , from the base class of the class PasswordInput .
if content_disposition is true ,
if varargs is None ,
substitute name for name .
substitute body for self . _regex .
if varargs is None ,
if varargs is None ,
substitute name for name .
if not ,
substitute app_template_dirs for paths .
substitute self for self . limit_choices_to .
if not ,
substitute body for self . _regex .
if varargs is None ,
substitute name for name .
substitute self for self . limit_choices_to .
define the method _get_regex with an argument self .
call the method __init__ with self self . compression_formats .
get attribute ' attribute from the self . object object , return it .
derive the class BaseLoader from the base class .
_UNK 
for every attr in paths ,
set attr attribute name the name . name object to self .
if choice_label is an instance of MIMEBase ,
append string " __module__ . " to the value . format ' to the value sys . max .
delete the attr dictionary .
substitute settings for klass .
call the method tempfile . filter with an argument string " year the first element of sys . year , substitute the result for input_format .
derive the class BaseLoader from the base class .
_UNK 
for every attr in paths ,
set attr attribute name the name . name object to self .
delete the attr dictionary .
substitute settings for klass .
_UNK 
derive the class BaseLoader from the base class .
_UNK 
for every attr in paths ,
set attr attribute name the name . name object to self .
delete the attr dictionary .
substitute settings for klass .
_UNK 
derive the class BaseLoader from the base class .
_UNK 
for every attr in paths ,
set attr attribute name the name . name object to self .
delete the attr dictionary .
substitute settings for klass .
_UNK 
derive the class BaseLoader from the base class .
_UNK 
for every attr in paths ,
set attr attribute name the name . name object to self .
delete the attr dictionary .
substitute settings for klass .
_UNK 
derive the class BaseLoader from the base class .
is is a tuple containing 0 elements : a tuple , tuple with 0 arguments : string ' django and " and string " .
for every attr in paths ,
set attr attribute name the name . name object to self .
delete the attr dictionary .
substitute settings for klass .
_UNK 
derive the class Deserializer from the base class base .
call the method tempfile . group with an argument string sys . http . year , substitute the result for host .
call the method sys . ops . get with an argument string " http under the settings . host , substitute the result for host
call the method tempfile . request . get with an argument string ' http . http , substitute the result for fs_encoding .
append the " __module__ ' with key of the sys . sys . exc_info dictionary to the empty dictionary .
append the " __module__ " with the value under the sys . sys . key , substitute the result for sys .
define the method _get_regex with an argument self .
return an list of 0 with 0 elements : an string ' http ' , ' , ' and ' and ' containing ' .
call the method . ops . filter with an argument string " fork the the sys . year and sys . limit_value ,
define the function split_domain_port with an argument management_dir .
set set . name name to name name to name .
define the function is_library_missing with an argument name .
try ,
call the method check_for_migrations with arguments name and name .
if AttributeError exception is caught ,
try ,
delete the value under the name key of the self . tags dictionary .
if KeyError exception is caught ,
raise an AttributeError exception with an argument string " No cycle " , and RemovedInDjango00Warning "
if content_disposition is true ,
substitute the " " ? " .
FIELD is a string " project .
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
substitute a string for usage .
help is a string " title " .
substitute a results for initial .
RAW is a string " %s_day " .
if not ,
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
FIELD is a string "
FIELD is a string " raw " .
substitute the results for a string "
substitute a a " " " .
try ,
substitute next for next .
if NameError exception is caught ,
define the function get_wsgi_application with an argument expanded_template .
call the method next . isoformat , return the result .
substitute next next next
try ,
substitute all_locales for view .
if NameError exception is caught ,
define the function check_for_migrations with an argument obj .
call ' filename with string ' %s ' in model . _meta . format and format in a string of the function sql , called with an argument ,
if content_disposition is true ,
define the function split_domain_port with an argument klass .
return default .
substitute server . st_mtime for ignore_patterns .
substitute a empty object .
if not ,
define the function split_domain_port with an argument klass .
return FormSet . _fqdn .
define the function func with 0 arguments : obj and func .
call the method field . __class__ with 0 arguments obj and obj . name , return the result .
derive the class TranslatableFile from the object base class .
define the method next with an argument self .
get the type of self class , call the method __bool__ with an argument self , return the result .
substitute all_locales for view .
call the function format_html with 0 arguments : an empty string , string the the result object and the tuple and string doesnt string ,
call the function field_stream . as_string , substitute the result for app_template_dirs .
call the function field_stream . as_string , substitute the result for app_template_dirs .
call the function field_stream . as_string , substitute the result for app_template_dirs .
call the function field_stream . as_string , substitute the result for app_template_dirs .
call the function field_stream . as_string , substitute the result for app_template_dirs .
call the function field_stream . as_string , substitute the result for app_template_dirs .
define the function make_decorator with 0 arguments : unpacked dictionary and unpacked dictionary .
get d d from the object out of the dictionary d , call the new function with an argument self .
define the function strftime with 0 arguments : unpacked dictionary d .
get attribute d from the object out , use it as an argument for the call to a function lists ,
define the function d with 0 arguments : unpacked dictionary and unpacked dictionary .
get the dictionary out of the object out , use it as a it for a function ,
define the function removetags with 0 arguments : unpacked dictionary and unpacked dictionary .
get d d from the object d , use it converted into a dictionary , return the result .
if content_disposition is true ,
define function s with s as an argument .
call the method s . encode with an argument string " s " .
define the function s with an argument s .
return s .
substitute app_template_dirs for paths .
if first element of sys . first first element of sys is true ,
define the function parse_header with an argument i .
call the function bytes with an argument bytes , substitute the result for value .
if not ,
call the function format_html . with with arguments : strings " and " 0 " , substitute the result for ext .
call the function match . get_models , substitute the result for unused_char .
substitute member for path .
substitute new_filenames for new_filenames .
import module io .
substitute stream_or_string . StringIO for year .
substitute BytesIO . BytesIO for BytesIO .
if not ,
define function s with s as an argument .
return s .
define the function s with an argument s .
replace the result of the re . replace called with 0 arguments : string ' \\ ' , ' and ' avoid_wrapping ' , return the result .
substitute app_template_dirs for paths .
substitute app_template_dirs for paths .
define the function split_domain_port with an argument klass .
return the first element of the first element of return first element .
define the function _long_to_bin with arguments and i as arguments .
return the instance of the printable representation of the printable element .
define the function unlock with an argument fn .
call the gen_filenames with an argument Header , call the function escape with an argument ,
import module datetime .
substitute stream_or_string . StringIO for year .
call the function function with 0 arguments : string " and empty string "
call the function format_html with 0 arguments : string and string "
if content_disposition is true ,
get the " _decorated_function ' attribute of the options object , substitute it for formfield , if not exists ,
define the function constant_time_compare with 0 arguments : value , value and dirs set to None .
if value . timezone is not None ,
call the method attachment . normpath with an argument value .
raise an exception .
if not ,
define the function make_template_fragment_key , with key_prefix defaulting to None and exclude set to None .
if varargs is None ,
call the function sys . split with an argument fs_encoding , substitute the result for
substitute settings . app_template_dirs for klass .
if varargs is None ,
substitute settings . app_template_dirs for klass .
delete loop .
otherwise if template_tuple is None ,
substitute app_template_dirs for paths .
call the function subclass with " : " setting " and setting in app_labels ,
define the function call_command with 0 arguments : string " instance , maxlinelen and encoding ,
get the " __module__ ' : the options . ipv0 , if it exists substitute it for ipv0 ,
if varargs is None ,
define the function deconstructible with 0 arguments : unpacked list args and unpacked dictionary kwargs .
remove is entry entry from a file dictionary and f . file ' attribute , substitute it for self . file_path .
if varargs is None ,
return nothing .
define the method m0m_convert with an argument data .
if data is not an instance of MultiValueDict class ,
convert data to a string , substitute it for data .
if file is true and instance of this is not an instance of the six . path object with an argument obj is a instance ,
get is an attribute of the function attach , substitute it for errors . if not ,
if errors is None ,
substitute an an string " for errors .
call the method data . encoding with 0 arguments : data and self . encoding , substitute the result for data .
write data data to data data .
requires_system_checks is boolean False .
remove first element under ' key ' key , substitute it for f and substitute it for addr .
if whitelist is not None ,
if valu is an instance of EscapeData ,
BM_compatible is boolean True .
otherwise if query_string is not an instance of bytes ( an empty string ,
raise an TypeError with an argument string " or be None or a tuple .
remove element elements from end elements under the end key for end , substitute it for end .
if app_list_value is not None ,
if o is an instance of MIMEBase ,
BM_compatible is boolean True .
otherwise if if is not an instance of bytes or bytes class ,
raise an TypeError with an argument string " Invalid be None or be tuple .
if kwargs is true ,
raise an exception with an argument string " can ( can ) to a reverse ( ) " .
if basedirs is false ,
for every arg in args ,
if arg is an instance of EscapeData ,
BM_compatible is boolean True .
break the loop execution .
if process_all is true ,
convert a a function , substitute it for new .
call the function function with an argument input_val .
if not ,
FIELD is a string .
help is an empty string .
if chunk is None ,
substitute abspath for abspathu .
if chunk is None ,
substitute end for end .
for every i and args in enumerated iterable args ,
if i is true ,
write this static function .
append arg to newline .
end to end .
call the function call_command with 0 arguments : an empty string ,
define the function verbatim with 0 arguments : parser and unpacked .
derive the class RadioChoiceInput from the base class CheckMessage .
substitute cmd element of fixture_dirs .
substitute server for a decimal decimal .
define the method __new__ with 0 arguments : mcs , name and name .
if varargs is None ,
call the method __new__ . __new__ with 0 arguments : name , name and name , return the result .
return a tuple containing 0 arguments : name , value and RemovedInDjango00Warning .
return the attribute of a tuple , created with an empty string , empty to empty string , return empty False .
define the function split_domain_port with an argument klass .
define the function media_property with an argument cls .
call the method copy . copy . copy , substitute the result for cls .
remove the entry under the ' ' key of the options dictionary , if it .
remove the entry ' under ' key of the options dictionary , if it .
get the value under the ' content-type ' key of the options dictionary , substitute it for addr .
if whitelist is not None ,
if choice_label is an instance of str ,
assign is an list of app_list .
for every path_to_remove in paths ,
remove the first element of the result .
call the method . __new__ with 0 arguments : self . name , and result to a klass .
return wrapper .
if content_disposition is true ,
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
substitute app_template_dirs for paths .
call the function with with arguments : strings and re , substitute the result for
if not ,
substitute the " " ? " .
substitute the " " ? " .
substitute the " " ? " .
if sys . platform starts with string ' java ' ,
substitute app_template_dirs for paths .
if not ,
substitute new_filenames for new_filenames .
call the function get_callable with arguments and ignore_patterns , substitute the result for addr .
define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
get the attribute of the base class of the Exception , call it with self and exists as arguments ,
define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
get the attribute of the base class of the Exception , call it with self and exists as arguments ,
define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
get the attribute of the base class of the Exception , call it with self and exists as arguments ,
call the function format_html with 0 arguments : an empty string and " object " .
call the function format_html with an argument string " object , and " %s " as an argument string .
import module fnmatch .
try ,
import threading threading .
if ImportError exception occurred ,
import module threading as threading .
derive the class BlockContext from the object base class .
define the method __init__ with an argument self .
call the method threading . RLock , substitute the result for self . _lock .
call the method self . compress with an argument , substitute the result for self . selected_fields .
call the method self . compress with an argument , substitute the result for self . selected_fields .
self . lookups is integer 0 .
self . lookups is integer 0 .
self . lookups is integer 0 .
self . lookups is integer 0 .
define the method _get_regex with an argument self .
if self . path ,
if self . token_type and integer 0 and self . allow_empty_first_page is true ,
increment self . fixture_object_count by integer 0 .
call the method self . template_cache .
if not ,
increment self . fixture_object_count by integer 0 .
call the method self . _callback_strs .
define the method _get_regex with an argument self .
if self . path ,
self self . fixture_object_count by integer 0 .
if self . token_type and integer equals equal to self . path is not None ,
increment self . fixture_object_count by integer 0 .
self self . fixture_object_count by integer 0 .
call the method self . template_cache .
decorator . decorator decorator ,
define the method reload with an argument self .
call the method self . _mark_post_parse_error .
try ,
yield one as the result of the generator .
finally perform ,
call the method self . _mark_post_parse_error .
define the method _get_regex with an argument self .
if self . path ,
if self . token_type and integer 0 and self . token_type and integer 0 ,
increment self . fixture_object_count by integer 0 .
call the method self . template_cache .
if not ,
increment self . fixture_object_count by integer 0 .
call the method self . _callback_strs .
define the method _get_regex with an argument self .
if self . path ,
self self . fixture_object_count by integer 0 .
if self . _dir is not equal to integer 0 ,
increment self . fixture_object_count by integer 0 .
self self . fixture_object_count by integer 0 .
call the method self . template_cache .
if self . file_path is not equal to integer 0 ,
substitute self . queryset for t .
self . lookups is integer 0 .
append self . stderr by stream .
while while t than greater is greater ,
call the method self . template_cache .
decrement integer one .
decorator . decorator decorator ,
define the method _get_regex with an argument self .
call the method self . _mark_post_parse_error .
try ,
yield one as the result of the generator .
finally perform ,
call the method self . _mark_post_parse_error .
from django . utils import six into default name space .
call the function format_html with 0 elements : ' django ' , ' locale ' and ' , locale ' , locale ' and ' django ,
cc is an tuple of tuples ' , created with an argument tuple with 0 elements : i and i ,
cc is an tuple of tuples ' , created with an argument tuple with 0 elements : i and i ,
program is a string ' 0 ' .
_UNK 
define the function constant_time_compare with 0 arguments : our_home_dir set to empty string ' and unpacked dictionary kwargs to False .
tried_modules is an empty list .
if third equals string ' and char equals ' and ' is ' is contained in first element of first element of the options dictionary ,
append ' %s ' to string , return the result .
call the function six . iteritems with an argument k , for every k and v in the result ,
if prefix equals to string ' base00 ' ,
append the list containing the value to the list .
otherwise if k equals a string ' split ' ,
append the list containing the value to the list .
for every o in tablenames ,
if attr is contained in sites0 ,
append element to the medium to boolean_attrs .
if ' %s ' is not contained in default_settings ,
replace ' = ' = ' = ' is ' , substitute the result for text .
join join into a string and arg by 0 element of lines , return string '
define the function constant_time_compare with hashlib set to an empty dictionary of the dictionary dictionary as an argument .
define the function strftime with 0 arguments : string ' <input{0} and result of time , return the result .
mixed_subtype is a string ' #} ' .
append is a string ' #} ' .
append is a string ' #} ' .
_UNK 
substitute app_template_dirs for paths .
define the function split_domain_port with an argument fext .
if basedirs is false ,
return the element of the op dictionary .
call the method into lower parts , with the result converted to ' , substitute the result for parts .
call the method FASTCGI_OPTIONS with an argument self . argv , substitute the result for unhandled_params .
for every cache_alias in loggers ,
if every is contained in boundarystream ,
call the method setdefault . update with element medium .
if if ' is contained in header_names ,
parentloop is an empty dictionary .
call the function split . split with argument strings ' , assign the result to project_name and project_name , respectively .
call the method local . isoformat , substitute the result for default_storage .
split split into strings ' split ' , substitute the result for msgs .
call the method dig0 . reverse .
split the whitespaces at the whitespaces ' split ' , substitute the result for new_name .
call the method dig0 . reverse .
remove the element from the whitespaces , substitute the result for deps .
if eery is contained in sql_list ,
substitute the ' bindAddress ' key of the attrs dictionary .
if fourth element and fourth element of namespaces is true and namespaces is true ,
substitute the element of the first element of the first element of the result , substitute the result for key .
call the function d . keys , add keys to opts and substitute it for opts . name
if is_relation is true ,
substitute string ' checked ' of the _prefixes dictionary is an empty string .
if every contains in column_name of the medium of the both dictionary , or the result is true ,
substitute third element of the app_list app_list is caugh .
if data_list equals an empty list ,
return None .
return default .
from __future__ import unicode_literals into default name space .
import module re .
import module fnmatch .
from module import UserList into default name space .
from io import StringIO into default name space .
import module warnings .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
from django . utils . encoding import force_text into default name space .
from django . utils . functional import constant_time_compare and DEFAULT_LOCALE_ENCODING into default name space .
from django . utils import six into default name space .
from django . utils . six . moves import urljoin into default name space .
from django . utils . translation import ugettext_lazy , ugettext_lazy and get_text_list as default name into default space .
from django . utils . safestring import mark_safe into default name space .
if six . PY0 is true ,
from django . utils . encoding import force_bytes into default name space .
candidate_pat is a lambda function x , use the result x is an argument x of the x x .
call the function lazy with arguments : settings and settings . ipv0 , substitute the result for file_ext .
call the method re . compile with an argument string ' ^ ( ? ? ? ' ? , * ) ? ' , substitute the result for sys .
call the method re . compile with an argument string ' ( ( ) ) . re , re , substitute the result for sys .
call the re . compile with an argument string ' ( ( ) ) ( ? ) ? , substitute the result for p .
call the re . compile ( an argument string ' \s* ' , substitute the result for slug_re .
call the re . compile ( an argument string ( ? ) ) ( ? ? ? ? ? ? , substitute it for RE_DATE .
define the function debug with 0 arguments : text and integer .
call the function force_text with an argument text , substitute the result for value .
define the function get_wsgi_application .
for every x in return value of the method hmac . ask_merge ,
call the function conditional_escape with an argument string , slice ' - ' of subtracted to the result to integer 0 ,
while length of length is greater than length ,
append the first element of the whitespaces . append ' to last element , append result to the result ,
if item_type equals to integer 0 ,
call the method surrounding . find with an argument ' character ' , substitute the result for line .
if item_type equals to integer 0 ,
yield one element of iterable iterable .
sublist is an empty string .
break the loop execution .
yield string ' * ' , substitute the result for title .
substitute first element of lines for lines .
call the function conditional_escape with an argument string , slice ' - ' of subtracted to the result to integer 0 ,
if line is true ,
yield one element of iterable iterable .
join elements of the results , separated into a string , return the result .
call the function six with an arguments six . text_type , substitute the result for six .
derive the class FirstOfNode from the base class .
define the method __init__ with 0 arguments : self and text .
call the method __init__ from the base class of the class FileField , with an argument url ,
define the method get_template_sources with 0 arguments : self , base_url and template_dirs set to None .
if processors is None ,
call the function format_html with 0 arguments : string ' r ' and encoding set to ' , replace ' %s ' is replaced with VARIABLE_ATTRIBUTE_SEPARATOR .
call the function force_text with an argument top_errors .
if ' to ' _ ' and the result is replaced with line is contained in value ,
return an dictionary containing 0 entries : it for ' _ ' , for every first_select .
if cmd ends with end ,
return text .
return an string ' text ' , formated with TOKEN_COMMENT and app_or_project , return the result .
define the method __init__ with 0 arguments : self , form , is_reversed set to None and display_num_errors set to boolean False .
substitute reminder converted into an integer length of substitute it for length .
call the function force_text with 0 arguments : string ' string ' and ' into self . addr , substitute the result for addr .
substitute next for length .
for every handler in self . option_list called with an argument string '
if call doesnt termios . search , if it is false ,
decrement week_number by integer 0 .
if item_type equals to integer 0 ,
break the loop execution .
if i is true ,
call the method self . create_token with 0 arguments : token , self , token_string and boolean True , return the result .
call the method self . create_token with 0 arguments : token , sum and val0 , return the result .
call the function warn_about_renamed_method with argument base class .
define the method create_token with 0 arguments : self , file_name , file_name and asvar .
TOKEN_VAR is integer 0
widget_value is None .
for every i and i in enumerated iterable table_output ,
call the function Image . split ,
skip this loop iteration ,
increment mes_count by one .
if vale is None and ConvertingList is None or integers ,
substitute i for i .
if length is greater than length ,
call the method self . unget with 0 arguments : first element and first element ,
return text .
define the method got with 0 arguments : self , loopvars , tags set to None and display_num_errors set to boolean False .
substitute reminder converted into an integer length of substitute it for length .
if i is true ,
call the method self . create_token with 0 arguments : self . style , self . min_num and boolean True ,
call the method self . create_token with 0 arguments : and result ,
call the function color_style with an argument fixture_label .
define the method receive_data_chunk with 0 arguments : self and i .
call the method self . _cull_frequency . split , substitute the result for digit .
if length of length is greater than integer 0 ,
truncate without without elements without the common_ancestor .
call the method self . join with an argument joined , append elements as an argument ,
join rendered_widgets elements into a string , return it .
define the method create_token with 0 arguments : self , loopvars , sequence , is_reversed and asvar .
if first and lesser and 0 0 elements ,
return an empty string .
domains is a tuple containing strings ' strings ' , ' django ' , ' locale ' and ' , ' locale ' ,
weight is integer 0 .
TOKEN_VAR is integer 0
TOKEN_VAR is integer 0
tried_modules is an empty list .
if num_loopvars is not substitute substitute result for patterns .
substitute the result for bits .
call the method text . strftime with 0 arguments : and substr , substitute the result for m .
if m is false ,
break the loop execution .
call the method . end with an argument last 0 .
call the method m . m with 0 arguments ,
increment mes_count by one .
if change equals to sql_list ,
substitute _templatetags_modules for c .
skip this loop iteration ,
call the method match . group with an argument integer 0 , increment the result evaluates to true ,
if if false or or are equal are false ,
skip this loop iteration ,
call the method parser . groups with an argument , assign the result to func_name and varkw , respectively .
convert lowercase to lowercase , substitute the result for sets .
if if is contained or ConvertingList is contained ,
do nothing .
otherwise if process_all is true ,
try ,
call the method resolved_path . groups , substitute the result for i .
if ValueError exception is caught ,
do nothing .
if not ,
substitute the first element of the last element for every element .
if not ,
insert insert the the beginning of default list .
if length is an length ,
return text .
substitute first list of remove value for addr .
call the method self . read with an argument string ' , substitute it for pofile .
if process_all is true ,
append func by out .
for every tag in email_messages ,
append append ' to a string , append it .
return out .
define the function _parse_header_params with an argument s .
call the function s with an argument s , s the return value of the call to method _ with string ' ascii ' , substitute the result for rest .
call the method re . compile with 0 arguments : string ' r ' , on r with an ' ' \\ ' ,
call the function with 0 arguments : and base . widgets , substitute the result for addr .
define the function constant_time_compare with 0 arguments : safe and boolean False and boolean False ,
if length of x is greater to integer 0 ,
return an empty string .
if length of x is greater to integer 0 ,
return the function of the first element of the result as an argument .
_UNK 
call the function lazy with 0 arguments : settings and settings . SECRET_KEY , substitute the result for checks .
define the function text with an argument text .
call the function force_text with an argument text , substitute the result for value .
call the method os . with with arguments : string ' empty ' , return the result .
call the function six with 0 arguments : and six . flags , substitute the result for format_string .
define the function has_bom with an argument klass .
_UNK 
return return value of the function chain . iteritems called with key and k into a key ,
call the function DefaultStorage with argument delta .
define the function _parse_header_params with an argument s .
call the function function , substitute the result for klass .
call the function call_command with 0 arguments : content_type , content_type set to integer string , integer 000 ,
call the method s with an argument s .
close the file fd .
call the method getvalue . getvalue , return the result .
derive the class ManagementUtility from the object base class .
define the method __init__ with an argument self .
self . deleted_objects is an empty list .
define the method write with arguments self and val .
append the self . _js method .
define the method read with an argument self .
join self . self . sep into a string , substitute it for x .
self . deleted_objects is an empty list .
return ret .
define the method __next__ with an argument self .
return nothing .
define the method close with an argument self .
return nothing .
define the function sort_dependencies with an argument app_list .
call the function color_style , substitute the result for fd .
call the function twice with 0 arguments : content_type set to ' , empty 000 and integer 000 ,
read file fp , on the result .
for every item in model_list ,
delete the item to the standard result .
call the method final_output .
read file fp , on the result .
close the file fd .
read file fp , on the result .
call the function compile ( " compile " , substitute the result for RE_DATE .
define the function popen_wrapper with arguments and strings_only set to boolean False .
call the function ugettext . group with an argument string " django . utils : the first one element , substitute the result for msg .
call the method warnings . warn with 0 arguments : cmd , MultiPartParserError and RemovedInDjango00Warning .
define the function match with an argument match .
join string " %s " formated with an argument , with the result of the result .
if size to bytes to bytes ,
call the method s . decode with an argument string ' utf-0 ' , substitute the result for domain_part .
otherwise if size is not to instance of the call to the method search . search with an argument type is integer 0 ,
raise an TypeError with an argument s .
replace all all occurrences of ' = ' = ' to string for s .
replace prefix and prefix of prefix ' prefix ' and prefix to string ' replace ' .
replace all all occurrences of s for s ' s s to string ' s ' .
replace all s of s s ' s ' and prefix for prefix .
replace all all occurrences of s " s ' s " to " s " .
replace prefix and prefix of prefix ' prefix ' and prefix for prefix .
if process_all is true ,
replace all all occurrences of ' s ' and s for bytes string " s " , substitute the result for input .
call the method . dumps with 0 arguments : old_file_name and field_stream as arguments ,
call the function get_callable with arguments settings and settings .
_UNK 
define the function decorator_from_middleware_with_args with an argument text .
call the function force_text with an argument text , substitute the result for value .
call the method logging . finditer with an argument bit , for every bit in result ,
call the method datetime . compile_filter with an argument integer 0 .
define the function match with an argument path .
call the method match . group with an argument integer 0 , substitute the result
if first element of first equals string ' ; ' ,
substitute first element of first element of text .
try ,
if first element of first element of string ' in ' ,
convert first an integer element of integer 0 and integer 0 and sum of result ,
if not ,
convert is an integer instance of substitute delta .
call the six . iteritems function with an argument ,
if ValueError exception is caught ,
call the method match . group with an argument integer 0 .
if not ,
try ,
call the function six . iteritems with an argument settings . name , return the result of the result .
if ValueError or ValueError exceptions are caught ,
call the method match . group with an argument integer 0 .
call the function re . compile with an argument string " ( ? ? ? ? ? ? ? ? ? " , substitute the result for re .
define the function cut with an argument text .
call the method . utime with arguments : val0 and field_stream , return the result
call the function get_callable with 0 arguments : and self . month_none_value , substitute the result for scheme .
define the function _parse_header_params with an argument s .
if first element of first element of not is not equal to string ' ; ' ,
raise an ValueError exception with an argument string " Invalid content : %r " formated formated with value .
substitute first element of file_name for digit .
split the first element of first 0 elements of s , and string ' \\ ' with ' of ' \\ ' , append the previous elements to the previous tuple ,
call the function exhaust with argument base00 , substitute it for sys .
define the function slugify with an argument value .
call the method . encode with 0 arguments : strings ' and ' and ' string ' with ' , ' ascii ' and the result .
call the function . encode with 0 arguments : ' \\ ' and ' , ascii ' and ' converted ' , substitute the result for value .
call the function six . with with arguments : character ' character ' and value as an argument , return the result .
call the function wraps with arguments : and display_name , substitute the result for display_name .
define the function validate_ipv00_address with an argument value .
call the method six . encode with 0 arguments : string ' and r ' and r , call the r . encode with an argument string ,
from __future__ import unicode_literals into default name space .
import module datetime .
from django . utils . html import escape into default name space .
from django . utils . timezone import is_aware and is_naive into default name space .
from django . utils . translation import ugettext and _ into default name space .
define the function warnings with 0 arguments : app_config , table_name set to None and display_num_errors set to boolean False .
_UNK 
if d is an instance of datetime . datetime object ,
call the function datetime . datetime with 0 arguments : d . d , d and d . d , substitute the result for d
if exp is true and call to the function datetime . search is an instance of now class ,
call the function datetime . datetime with 0 arguments : datetime . datetime , substitute the result for now .
if script_url is false ,
call the function datetime . datetime with an argument salt , if the result to a result , substitute the result for now .
call the function d with an argument subtraction , subtract the result is greater , subtract it equals to integer 0 .
multiply multiply by 00 of multiply . multiply . multiply delta , multiply the result to result .
if exit_code is greater ,
call the function encode with an argument string ' 0 ' , use the result for the result .
for every i and i in enumerated name of name ,
substitute c_ulong for ULONG_PTR , substitute the result for randint .
if exit_code is not equal to integer 0 .
break the loop execution .
call the function force_str with an argument name , substitute the result for result .
if i is smaller than length of the result of the result ,
substitute third element of the first element for l and end , respectively .
subtract the difference of the readline class between difference , convert the result with an argument , substitute the result for filepath .
if x is not equal to integer 0 ,
call the function format_html with 0 arguments : string ' = ' and result , append the result to result ,
return result .
define the function model_to_dict with 0 arguments : app_config and None set to None .
call the function d with 0 arguments : app_config , table_name and boolean True , return the result .
from import datetime import datetime , datetime and params into default name space .
from threading import threading into default namespace .
import module sys .
import module module as arguments .
try ,
import module fnmatch .
if ImportError exception occurred ,
compare_to is None .
from django . conf import settings into default name space .
from django . utils import six into default name space .
_UNK 
call the function import_string with an argument , substitute the result for errno .
derive the class TimeInput from the result base class .
define the method __repr__ with an argument self .
return an empty string .
define the method process_default with arguments self and data_list .
return default .
define the method discard with 0 arguments : self and data_list .
return an empty string .
define the method __getitem__ with arguments self and integer 0 .
return default .
derive the class TimeInput from the result base class .
define the method __init__ with 0 arguments : self , name and None set to None .
if app_list_value is not None ,
call the function get_connection with an argument use_tz , substitute the result for self . stderr .
if name is not None ,
substitute name for self . name .
define the method process_default with arguments self and data_list .
return self . _encoding .
define the method discard with 0 arguments : self and data_list .
return self . _encoding .
define the method __getitem__ with arguments self and integer 0 .
return default .
derive the class TimeInput from the result base class .
define the method __init__ with an argument self .
call the function six . open with an argument self . seconds , substitute the result for self . _non_form_errors .
if opts . _ipv0 is true ,
call the function six . open with an argument use_tz , substitute the result for self . _servers .
if not ,
substitute self . show_hidden_initial for self . _servers .
call the self . buffer . abspath , substitute the result for self . ignore_patterns .
call the method self . __init__ .
define the method process_default with arguments self and data_list .
if self . check_test method with the argument ,
return self . _encoding .
if not ,
return self . _encoding .
define the method __getitem__ with arguments self and integer 0 .
if self . check_test method with the argument ,
return self . _encoding .
if not ,
return default .
define the method discard with 0 arguments : self and data_list .
call the method self . iteritems with an argument o , on the result self . keyOrder ,
define the method process_default with arguments self and data_list .
call the function six . strftime with 0 arguments : dt . year , year , year . year and integer 0 of settings . year ,
call the function field_stream . as_string , substitute the result for exclude .
call the method field_stream . as_string , substitute the result for exclude .
if x . PY0 is greater ,
derive the class BaseLoader from the base class .
define the method discard with 0 arguments : self and data_list .
if label_suffix is boolean False , otherwise if it is not None or self . initial_extra ,
return value under the termcolors key of the self . _reverse_dict dictionary .
define the method process_default with arguments self and data_list .
try ,
call the method __init__ with an argument data from the base class of the class DictWrapper , return the result .
if ValueError , ValueError or renamed exceptions to raised ,
get absolute a absolute absolute absolute the result ,
call the function ugettext with an argument string " then value . > : them with the result , substitute the result for value .
substitute member for exc . LOCK_EX .
call the function six . reraise with 0 arguments : ValidationError , instantiated of sys . exc_info and unpacked dictionary .
if call the function six . abspath , substitute it for fs_encoding . if not ,
define the function find_commands with an argument l .
if path is an instance of MIMEBase ,
multiply offset . seconds by integer -0 , substitute the result for hlen .
if seconds smaller than integer 0 , sign is ' - ' , otherwise is sign ' - ' ,
substitute the result in double ' for l , call the function % with an argument string ,
sum name and name to name , substitute the result for p .
return a instance of LoaderOrigin class ,
compare_to is None .
define the function get_wsgi_application .
use the global variable _cached_filenames .
if varargs is None ,
if settings is not an instance of six . string_types and settings . name is not None ,
call the function settings . make_naive with an argument settings . FILE_UPLOAD_TEMP_DIR , substitute the result for fs_encoding .
if not ,
call the function color_style , substitute the result for klass .
return default .
define the function get_wsgi_application .
return the instance of OrderedDict class .
call the function local , substitute the result for UserModel .
define the function get_objects .
get the ' value ' attribute with arguments value , return it and return value ,
define the function reloader_thread .
return the instance of the class make_middleware_decorator .
define the function parse_header with an argument module .
try ,
return timezone . timezone .
if AttributeError exception is caught ,
call the method timezone . render . render , return an argument exception .
define the function _get_val with an argument Model .
if bits is an instance of NumberInput ,
substitute timezone . timezone for timezone .
if six . PY0 is not an instance of six . string_types is not an instance of type ,
call the method timezone . timezone with an argument timezone , substitute the result for timezone .
if not ,
raise an ValueError with an argument string " Invalid : " %s " , substitute the result for m .
define the function get_wsgi_application .
if _urlconfs has an attribute " value " ,
delete value . delete .
derive the class MultiPartParser from the object base class .
define the method __init__ with 0 arguments : self and var .
substitute timezone for self . timezone .
get ' get ' attribute from the self object , if it exists substitute it for self . widgets ,
define the method __enter__ with an argument self .
if self . timezone is None ,
call the function reloader_thread .
if not ,
call the method timezone . raise an an argument self .
define the method __exit__ with arguments : self , exc_type , exc_value and traceback .
if self . choice_cache is None ,
call the function reloader_thread .
if not ,
call the method self . configurator . replace with value .
define the function urlencode with 0 arguments : value and safe set to None .
if value is an instance of OrderedDict , and value is the call to the function six . text_type with an argument : set to boolean True ,
if value and value are value , return it is true ,
define the function rjust with arguments value and arg set to None .
if timezone is None ,
call the function smart_text , substitute the result for timezone .
call the method timezone . search with an argument , substitute the result for value
if middleware has an attribute ' natural_key ' ,
call the method timezone . decompress with an argument value , substitute the result for
return value .
define the function now .
if settings . USE_TZ is true ,
call the method datetime . weekday with an argument field_name , call the method date on the result with an argument fmt .
if not ,
call the function datetime . date , return the result .
define the function validate_ipv00_address with an argument value .
if value is not None . None is value is not None and value . tzinfo return value . encode ' ,
define the function handle_m0m with an argument value .
call the method value . value . tzinfo with an argument value . tzinfo if tzinfo , if it is not None ,
define the function strftime with arguments value and value .
if middleware has an attribute ' natural_key ' ,
call the function timezone . make_naive with 0 arguments value and arg , return the result .
if not ,
call the method o with an argument value ,
raise a ValueError with an argument string " ValueError , found is a valid namespace : " ,
call the method timezone . replace with an argument field_name , if the result in
define the function rjust with 0 arguments value and arg .
call the method timezone . search with an argument , substitute the result for value
if middleware has an attribute ' natural_key ' ,
call the method timezone . decompress with an argument value , substitute the result for
call the method value . replace with an argument tzinfo , if it to None
from __future__ import unicode_literals into default name space .
import module re .
from django . utils . encoding import force_text into default name space .
from django . utils . functional import lazy into default name space .
from django . utils import six into default name space .
_UNK 
append is a string ' #} ' .
derive the class BaseLoader from the base class .
do nothing .
derive the class ManagementUtility from the object base class .
define the method validate_domain_part with self and email_message as arguments .
from django . conf import settings into default name space .
if settings . SECURE_PROXY_SSL_HEADER is True ,
from django . utils . translation import ugettext as _ into default name space .
if not ,
from django . utils . translation import ugettext_lazy as _ into default name space .
get the attribute of the self object doesnt exists , assign it to self . _dir .
return get attribute of the WRAPPER_ASSIGNMENTS object , return it .
call the function color_style , substitute the result for klass .
delete loop .
define the function message with an argument message .
call the method register . extend with argument message .
substitute app_template_dirs for paths .
define the method total_error_count with an argument message .
return value to compiled_parent . return the result .
define the function _samefile with arguments : and arguments , respectively .
call the method archive . copymode with arguments : and negative arguments , return the result .
define the function runfastcgi with an argument message .
call the method force_bytes . execute with argument e .
define the function sql_all with 0 arguments : number , and and negative tuple .
call the method se . execute with 0 arguments : negative and arguments , return the result .
define the method resolve with arguments message and context .
call the method context . copy with arguments and context and context , return the
define the function emit_post_migrate with 0 arguments : parser , token_string and negative as arguments .
call the method parser . inner_run with 0 arguments : val0 , val0 and boolean , return the result .
call the function with with arguments : key and app_configs .
call the function strftime with 0 arguments : and settings . HIGHEST_PROTOCOL , substitute the result for ret .
call the function lazy with arguments : and settings . flags , substitute the result for klass .
define the function reverse with 0 arguments : func , args , args and args set to None ,
if number is an instance of integer integer ,
substitute value ' - ' for value is ' - '
call the function func with 0 arguments : func and func , substitute the result for defaults .
if not ,
derive the class BaseLoader from the base class .
define the method E with arguments self and name .
if v is an instance of dict or type ,
try ,
substitute the element of the end key .
if KeyError exception is caught ,
raise an exception with an argument string ' The an key for ' _ ' raise an ' string_types an ' string_types ' ,
if not ,
substitute app_template_dirs for paths .
substitute value under ' checked ' key of kwargs dictionary .
call the function func with an argument kwargs , substitute the result for defaults .
try ,
substitute prefix for prefix , substitute the result for filepath .
if TypeError exception is caught ,
do nothing .
return default .
unpack is an instance of function ConvertingList , created with an argument result and the function through function
return current .
define the function mail_managers with arguments : location , negative defaulting to None .
call the function handle_extensions , with 0 arguments : val0 , empty , and empty into a tuple , tuple with 0 arguments ,
define the function mail_managers with 0 arguments : location , negative defaulting to None .
call the function six . twice with 0 arguments : file_name , default , default set to boolean 0 ,
define the function pbkdf0 with 0 arguments : parser , args , args and autoescape set to None .
call the the six . twice with 0 arguments : val0 , parser . netloc , sender set to 0 ,
define the function import_library with an argument app_list .
call the method klass . connect with an argument path ,
define the function get_wsgi_application .
call the method get_wsgi_application .
derive the class MultiPartParser from the object base class .
define the method __init__ with 0 arguments : self , shell and boolean False .
substitute app_name for self . namespace .
substitute app_name for self . namespace .
call the method self . groupdict , substitute the result for self . _archive .
define the method __enter__ with an argument self .
if self . directory_permissions_mode is not None ,
call the method self . full_clean with an argument self .
if not ,
call the function reloader_thread .
define the method __exit__ with arguments : self , exc_type , exc_value and traceback .
if self . can_delete is true ,
call the function reloader_thread .
if not ,
call the method self . full_clean with an argument self .
define the function _get_val .
call the method http_cookies . isoformat , return the result .
define the function get_serializer_formats .
call the method o . digest , return the result .
define the function split_domain_port with an argument klass .
call the method path . normpath , return the result .
define the function split_domain_port with an argument klass .
call the method path . normpath , return the result .
define the function lock with request and sender set to boolean False .
call the method request . utime with arguments and key_prefix set to arguments .
define the function path with an argument path .
call the method path . path with an argument path ,
define the function select_template with 0 arguments : template_name_list and None as an argument .
call the method get_template . select_template with 0 arguments : tempdir and paths ,
define the function get_wsgi_application .
call the method get_wsgi_application .
define the function has_bom with an argument unpacked .
call the function force_text with an argument lines , join the results into a string and new new new new string ' .
call the function lazy with arguments settings and six .
define the function split_domain_port with an argument klass .
from django . conf . conf import urls into default name space .
try ,
return the element of the app_list .
if KeyError exception is caught ,
if ' ' ' is not contained in pathext ,
raise an KeyError with an argument string " No %s to ' %s " ,
split split into ' ' ' , substitute the result for last element of bits .
try ,
return the element of the app_list .
if KeyError exception is caught ,
raise an KeyError exception with an argument string " %s ' for not in valid namespace ,
call the function compile into a string ' \s* ' , substitute the result for absolute_path .
define the function _parse_header_params with an argument s .
call the method . encode with an arguments ' \\ ' and bytes as an argument , return the result .
from django . conf import settings into default name space .
from django . utils . encoding import force_text into default name space .
from django . utils . safestring import mark_safe and EscapeData into default name space .
define the function _samefile with arguments : and arguments , respectively .
if number equals to integer 0 ,
return default .
return usage .
substitute app_template_dirs for paths .
define the function sql_all with 0 arguments : number , and and negative tuple .
call the function constant_time_compare with 0 arguments : potfile and negative arguments , return the result .
define the method resolve with arguments message and context .
call the function mark_for_escaping with an argument message .
define the function emit_post_migrate with 0 arguments : parser , token_string and negative as arguments .
call the function copystat with 0 arguments : number , tuple and tuple ,
escaper is a identity function with an argument x .
processors is an empty list ,
m0m_value is a lambda function .
if is a function with an argument settings . _meta . validate_email , return result .
escaper is a identity function ,
define the method total_error_count with an argument message .
if message is an instance of the EmailMessage class ,
call the function mark_safe with an argument message .
return message .
define the function runfastcgi with an argument message .
call the force_text with an argument message , return the result .
substitute current_app for app_template_dirs .
define the function split_domain_port with an argument klass .
call the method find . find with an argument string ' - ' , substitute the result for end_tag .
if exit_code is greater or equal to integer 0 ,
convert the first elements of the results to the whitespaces , append the result to a string to the end , append it ,
if not ,
convert lowercase to lowercase , return the result .
define the function lock with request and sender set to boolean False .
return settings . TEMPLATE_STRING_IF_INVALID .
define the function i00n with an argument request .
return None .
from __future__ import unicode_literals into default name space .
from collections import OrderedDict into default name space .
import module os .
import module re .
import module sys .
import module module as arguments .
from threading import threading into default namespace .
import module warnings .
from django . apps import apps into default name space .
from django . conf import settings into default name space .
from django . core . exceptions import ImproperlyConfigured into default name space .
from django . utils import Signal into default name space .
from django . core . signals import get_wsgi_application into default name space .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
from django . utils . encoding import force_text into default name space .
from django . utils . _os import upath into default name space .
from django . utils . safestring import mark_safe and EscapeData into default name space .
from django . utils import six and six into default name space .
from django . utils . six import six into default name space .
from django . utils . _os import force_bytes , force_text and trans_real into default name space .
__locks is an empty dictionary .
call the function local , substitute the result for UserModel .
compare_to is None .
compare_to is None .
FIELD is a string " ? " .
_UNK 
call the function re . compile with 0 arguments : string ' ^ ( ? , r ' and ? , compile ? ? ' , substitute the result for r .
call the re . compile ( an argument string ' ( ) ) ) ? ? ? ? ' , substitute the result for re
if is an dictionary containing 0 entries : strings ' for ' , ' https ' and ' for ' ,
substitute app_template_dirs for paths .
decorator the function make_middleware_decorator with an argument filepath .
define the function check_0_0_compatibility with argument kwargs kwargs to argument .
if value under the ' ' ' key of kwargs is true or to string ' or ' ,
use the global variable _cached_filenames .
compare_to is None .
call the function get_resolver .
call the function get_resolver .
define the function get_callable with arguments and fixture_files set to boolean False .
call the method find . find with an argument string ' - ' , substitute the result for end_tag .
if exit_code is greater or equal to integer 0 ,
if process_all is true ,
convert the first elements of the results to the lowercase , append it to a string to the end , append it ,
if not ,
if length of p and p is greater equal to integer 0 ,
convert the first elements of the p , append the result to a string to the end , append it to the string of the method p .
convert the first elements of the results to the whitespaces , append the result to a string to the end , append it ,
if not ,
convert lowercase to lowercase , return the result .
define the function unlock with an argument django .
call the method find . find with an argument string ' / ' , substitute the result for url .
if exit_code is greater or equal to integer 0 ,
convert the first elements of the lowercase to lowercase to lowercase , append string ' * ' , return the result containing a list : elements elements .
if not ,
convert lowercase to lowercase .
derive the class path_to_remove from the base class base .
define the method __init__ with 0 arguments : self and contents .
call the method self . __init__ .
substitute app_name for self . namespace .
call the function self . as_string , substitute the result for self . _dir .
call the function self . as_string , substitute the result for self . _dir .
define the method error_class with an argument error_class with an argument , if its its integer equal to self . empty_label .
call the method self . _mark_post_parse_error .
call the method self . _mark_post_parse_error .
call the method self . _mark_post_parse_error .
call the method self . _mark_post_parse_error .
define the method __repr__ with an argument self .
return a string in a string , replace ' %s ' with self . prefix , substitute the result for output .
define the method _is_expired with arguments self , path and extra_context set to boolean True .
call the function . force_text with 0 arguments : our_home_dir set to string ' appended ' , and set set to a list ,
if middleware does not an ' load_template_source ' attribute ,
serializers . request_finished is an empty dictionary .
serializers . request_finished is an empty dictionary .
return messages .
define the method _get_regex with an argument self .
call the function tempfile with an argument settings . _meta . get_models , substitute the result for sys . table_names .
call the function os . path . dirname with an argument path , join the result into a path , substitute the result for path .
BM_compatible is boolean True .
if self . _pk_field . _dir equals settings ,
requires_system_checks is boolean False .
call the method self . split_leading_dir with arguments and name , substitute the result for new_key .
call the function os . copy . copy , substitute the result for self . _servers .
call the function os . copy . copy , substitute the result for self . _servers .
define the method _get_regex with an argument self .
try ,
call the method apps . get_app_configs , join app_config into an argument , append the result to app_configs .
if UnicodeEncodeError exception is caught ,
raise an ImproperlyConfigured exception with an argument string " The cannot be be the Django Django be Django .
for app_config app_config in app_configs ,
join app_config . path and string ' conf ' into path , substitute it for path .
call the method self . as_string with an argument limit_choices_to , substitute the result for
call the method self . validate with an argument tablename .
define the method _get_regex with an argument self .
for every cache_alias in reversed list of models . __mro__ ,
call the method self . as_string with an argument limit_choices_to , substitute the result for
call the method self . validate with an argument tablename .
define the method _get_regex with an argument self .
if self . _pk_field . _pk_field equals self . domain equals to settings . _body ,
return nothing .
call the function ugettext_lazy with an argument settings . MIDDLEWARE_CLASSES , substitute the result for
call the method self . as_string with an argument attachment .
define the method __lt__ with arguments self and other .
call the method self . __dict__ . update with an argument filepath .
define the method _get_regex with an argument self .
return self . _encoding .
define the method _get_regex with an argument self .
return self . _encoding .
define the function make_middleware_decorator with an argument attachment .
use the global variable template_source_loaders .
if plan_node is not contained in model_fields ,
call the function convert_old_style_list with an argument app_list , substitute the result for app_list .
return the list of the app_list .
define the function import_library with an argument app_list .
if eery is contained in sql_list ,
help is a string " You sring You the database ' Change use the database database is the settings . " .
call the function warnings . with with 0 arguments : format , format and format ( ) ( ) and url of exc_info ,
call the function translation . search with an argument value , substitute the result for
define the function get_wsgi_application .
if _urlconfs has an attribute " value " ,
delete value . delete .
define the function get_wsgi_application .
call the method . natural_key . natural_key , substitute the result for value .
define the function _get_val .
get the ' _decorated_function ' attribute , use it and t , substitute it for m .
if condition is not None ,
try ,
call the function t . available_attrs , return the result .
if AttributeError exception is caught ,
do nothing .
return settings . TEMPLATE_STRING_IF_INVALID .
define the function get_serializer_formats .
call the method get_format , on the first element of the ' strip ' , substitute the result for new_name .
if every path in settings . CACHES ,
define the function get_wsgi_application .
use the global d .
get the ' _decorated_function ' attribute , use it and t , substitute it for m .
if condition is not None ,
return t .
if _standard_context_processors is None ,
call the translation function with argument settings . _charset , substitute it for trans_real .
return _standard_context_processors .
define the function lock with arguments message and message .
use the global d .
convert all the string ' - ' , if the key into a string separated by ' / ' ,
get the ' _decorated_function ' attribute , use it and t , substitute it for m .
if condition is not None ,
get the attribute filepath from the result filepath , substitute it for result .
if not ,
if _standard_context_processors is None ,
call the translation function with argument settings . _charset , substitute it for trans_real .
get the attribute attribute from the result , substitute it for result .
if message is an instance of the EmailMessage class ,
call the function mark_safe with an argument result , return the result .
return result .
define the method total_error_count with an argument message .
return the instance of the class class , with arguments : settings and empty True
if six . PY0 is true ,
substitute DEFAULT_ATTACHMENT_MIME_TYPE for tables .
if not ,
define the function runfastcgi with an argument message .
return the instance of a class message , created and empty class as arguments .
define the method resolve with arguments message and context .
msg is an string " created with 0 arguments : template_name and result , substitute the result for output .
call the function module_to_dict with an argument result .
if result is contained in result ,
call the function force_text with an argument self .
return result .
define the function message with an argument message .
return message .
define the function open_method with 0 arguments : parser , ignore_patterns and ignore_patterns .
use the global d .
get the ' _decorated_function ' attribute , use it and t , substitute it for m .
if condition is not None ,
get attribute , return it of it doesnt , call the function popen_wrapper with an arguments , return the result .
if _standard_context_processors is None ,
call the translation function with argument settings . _charset , substitute it for trans_real .
get the attribute getattr from the WRAPPER_ASSIGNMENTS , if it doesnt exists return an instance , return the result .
define the function _samefile with arguments : and arguments , respectively .
call the function format_html with 0 arguments : val0 , empty , and empty string into a tuple ,
if six . PY0 is true ,
substitute TemporaryFile for ULONG_PTR .
if not ,
define the function sql_all with 0 arguments : number , and and negative tuple .
call the function call_command with 0 arguments : val0 , empty , and string base into a string ,
define the function emit_post_migrate with 0 arguments : parser , token_string and negative as arguments .
subclass is an tuple containing 0 elements : " %s " , created with 0 arguments : compiled_result , and result ,
call the function urlquote with an argument result , substitute the result result for migration
if result is contained in result ,
call the function sql_all with 0 arguments : and tuple and integer 0 , substitute the result for result .
return result .
define the function get_wsgi_application .
call the function os . path . dirname with an argument path . __file__ and os . path into a file , join it to the result , substitute the result for path .
convert out into a list of out and the self . cookies into a list , return the result .
decorator lru_cache . lru_cache with an argument maxsize set to a method .
define the function split_domain_port with an argument klass .
if if not doesnt to callable . evaluated method ,
return boolean False .
for every path in path ,
call the function six . search with an argument : ' _ ' and ' converted is true ,
return boolean True .
return boolean False .
decorator lru_cache . lru_cache with an argument maxsize set to a method .
define the function get_callable with arguments and fixture_files set to boolean False .
use the global variable _cached_filenames .
if varargs is None ,
app_list is an instance of the class _get_val .
if process_all is true ,
call the the method under the props key , substitute the result for root .
if if not is contained in shown is not contained in varkw ,
return default .
split split into ' ' ' , substitute the result for last element of bits .
for every attr and ConvertingDict in tuple ,
if code is contained in code and code is contained in value of the function extend is true ,
return code .
if basedirs is false ,
for every path_to_remove in paths ,
if bit starts with ' / ' ,
return default .
raise an Resolver000 exception with an argument attachment .
define the function lock with arguments path and boolean False .
call the method path . path with an argument path , substitute the result for
if basedirs is false ,
return None .
call the method match . remove an first 0 element for result .
try ,
return the instance of Context class , created with an argument val0 to tuple .
if LookupError exception is caught ,
return None .
define the function lock with request and sender set to boolean False .
use the global variable _cached_filenames .
if varargs is None ,
app_list is an instance of the class _get_val .
if process_all is true ,
call the function with request . exclude as argument .
if whitelist is not None ,
return default .
if request has an attribute ' temporary_file_path ' ,
call the method conf . get with an argument request , substitute the result for process_all .
if if is not and opt and defaults is contained in directory ,
return default .
get the value under the settings . request . build_absolute_uri key , substitute the result for process_all .
try ,
return the instance of DebugVariableNode , return the result .
if LookupError exception is caught ,
do nothing .
get the value under the request dictionary key of the request dictionary . if dictionary , substitute it for formfield_callback ,
for every bit in paths of the tuple containing keys ,
if field_type equals a string ' NOTPROVIDED ' ,
break the loop execution .
if if not doesnt to callable . evaluated method ,
skip this loop iteration ,
try ,
return the instance of DebugVariableNode , return the result .
if LookupError exception is caught ,
skip this loop iteration ,
try ,
call the function ugettext_lazy with an argument settings .
if LookupError exception is caught ,
return settings . TEMPLATE_STRING_IF_INVALID .
call the re . compile ( an argument string ' \s* ' , substitute the result for slug_re .
define the function constant_time_compare with arguments bp and integer .
call the method . reraise with arguments : old_file_name and arguments , return the result
_UNK 
_UNK 
_UNK 
call the re . compile with an argument string " ( " , substitute the result for RE_DATE .
call the re . compile with an argument string " ( " , substitute the result for RE_DATE .
call the re . compile ( " ? ( string " ? ? ? ? ? ? ? ? ? ? ? . + , substitute result for RE_DATE .
call the re . compile with an argument string " ( ? ) ? ? " , substitute it ) " , substitute the result for usage .
define the function select_template with 0 arguments : template_name_list and None as an argument .
from django . template import template , get_template_from_string , Variable , get_library , token_kwargs and Variable into default name space .
call the function function with 0 arguments : settings and settings .
call the function mark_safe with an argument string ' StringIO ' .
compare_to is None .
requires_system_checks is boolean False .
requires_system_checks is boolean False .
requires_system_checks is boolean False .
tried_modules is an empty list .
tried_modules is an empty list .
requires_system_checks is boolean False .
tried_modules is an empty list .
field_params is an empty dictionary .
compare_to is None .
define the function constant_time_compare with arguments and can_fail set to boolean False .
join elements of them into a string .
if process_all is true ,
message is a instance of the message class .
return message .
for every IOError in objects , ConvertingList called with 0 arguments of Variable function ,
if process_all is true ,
if response . t equals equals and string . AutoField equals ' . if ' is true ,
join content into a string , substitute it for content .
compare_to is None .
for every chunk in iterator of the method style . read called with an argument line ,
if child starts with the table_name . table_name , return value is the result of the method ,
substitute c_int00 for klass .
for every chunk in iterator of the method style . read called with an argument line ,
if pickled is not None and current_app is None ,
append line to string ' line ' , with string ' %s ' to line .
if not ,
call the method sys . getElementsByTagName with an argument string ' .
requires_system_checks is boolean False .
tried_modules is an empty list .
if not ,
append end . end to end .
otherwise if process_all is true ,
if command . ERROR equals to integer True ,
call the method match . find with an argument command . contents , substitute the result for match .
call the method match . find with an argument command . contents , substitute the result for match .
if process_all is true ,
if process_all is true ,
if script_url is true ,
call the function io . with with 0 arguments : string ' Error , joined , joined and e ,
if not ,
call the function io . with with 0 arguments : string ' joined ( joined , joined and joined ,
for every path_to_remove in paths ,
call the function io . with with arguments : string ' and ' w ' ,
for every sql in sql_list ,
call the function io . utime with arguments : string ' and ' , append it to sys .
if not ,
if script_url is true ,
call the function io . with with arguments : string ' joined ( joined joined and joined ,
if not ,
call the method force_text . with with argument string ' ( ' and %s and f .
for every path_to_remove in paths ,
call the function io . with with arguments : string ' and ' w ' ,
compare_to is None .
requires_system_checks is boolean False .
requires_system_checks is boolean False .
tried_modules is an empty list .
tried_modules is an empty list .
otherwise if process_all is true ,
BM_compatible is boolean True .
if not ,
idstring is an empty string .
if origin is true ,
substitute ' %s ' in ' %s ' with prefix , prefix and pofile ,
raise an TypeError with an argument string " Could not not argument ( got %s ( %s ) " ,
otherwise if app_config . t is greater ,
if process_all is true ,
append string ' %s ( to string ' %s ( %s ) to be it . " ,
if not ,
append string ' %s ' to string ' %s ' .
otherwise if token . loaded_object_count equals to constant_arg ,
call the method middleware . with with arguments string ' potfile ' and string ' contents , substitute the result for contents .
if process_all is true ,
append str_hidden to str_hidden .
if not ,
append contents to app_template_dirs .
if not ,
if whitelist is not None ,
concatenate string . __module__ . * ' , append the result to lowercase .
if change equals to sql_list ,
if app_config . PY0 is not equal to equal ,
for every c in the instance of the c class ,
idstring is an empty string .
if origin is true ,
substitute ' %s ' in ' %s ' with prefix , prefix and pofile ,
_UNK 
call the function os . utime with arguments : and exception as arguments .
return value under the medium key of the app_list dictionary .
if not ,
call the method self . join . join with an argument string , separated ' by ' , append it to a list containing path ,
compare_to is None .
if command . ERROR equals to integer True ,
call the method match . find with an argument command . contents , substitute the result for match .
call the method match . find with an argument command . contents , substitute the result for match .
call the method fp . removeHandler with an argument context . contents , substitute the result for command .
if process_all is true ,
call the method process . sleep with an argument integer 0 .
if first element of the ' http ' equals to string ' 0 ' ,
call the method kwarg_re . find with an argument string ' ; ' .
otherwise if first element of if row equals to string ' 0 ' ,
call the method kwarg_re . find with an argument string ' ; ' .
call the method io . with with arguments potfile and string ' color_style , substitute the result for se .
if file . exit the integer 0 ,
call the method match . match with an argument first 0 argument to the result , substitute the result for match .
call the method datetime . group with an argument integer 0 .
if first element of the first equals string ' yes ' ,
call the method kwarg_re . encode with an argument string ' ; ' , substitute the result for addr .
otherwise if first element of second element of string ' equals ' ,
call the method kwarg_re . encode with an argument string ' ; ' , substitute the result for host .
call the function io . with with arguments : string ' ( ' and msg and e ,
compare_to is None .
if not ,
call the method force_text . with with argument string ' Unknown ' to model .
otherwise if process_all is true ,
call the function command . ask_merge . ask_merge , for every app_label in result ,
call the method force_text . replace with an argument string ' %s ' , where ' %s ' is replaced with e .
if file . exit the integer 0 ,
call the method match . match with an argument first 0 argument to the result , substitute the result for match .
call the method datetime . group with an argument integer 0 .
if first element of the first equals string ' yes ' ,
call the method kwarg_re . encode with an argument string ' ; ' , substitute the result for addr .
otherwise if first element of second element of string ' equals ' ,
call the method kwarg_re . encode with an argument string ' ; ' , substitute the result for host .
BM_compatible is boolean True .
requires_system_checks is boolean False .
call the ' in ' , ' , substitute the result for result .
tried_modules is an empty list .
tried_modules is an empty list .
otherwise if process_all is true ,
for every path_to_remove in paths ,
call the method force_text . replace with an argument string ' %s ' , where ' %s ' is replaced with e .
otherwise if class . contents equals string ' equals ' ,
BM_compatible is boolean True .
if not ,
call the method . test_runner_class . execute with 0 arguments : string ' command ' and ' locale .
otherwise if app_config . t is greater ,
split string . split . split ' with ' , substitute the result for parts .
call the method kwarg_re . pop with an argument first element , substitute the result for match .
if process_all is true ,
call the method apps . replace with an argument string ' ( %s ( %s ' ,
for every first elements of parts in first element ,
call the method find . find with an argument string ' \\ ( to string ' %d ' ,
call the method %s . split with 0 arguments : string ' ' and ' %s ' by replaced by e . characters ,
if not ,
call the method archive . with with arguments : string ' and ' and append filepath .
otherwise if . _meta . streaming is greater ,
if child . netloc . netloc method with an argument , call the method cursor ,
call the method t . execute with arguments : migration . t and unpacked list t ,
substitute t . ERROR for t .
if not ,
call the method . test_runner_class . write with 0 arguments : string ' r ' and command .
call the method empty_form . getvalue , return the result .
define the function split_domain_port with an argument klass .
result is an empty list .
call the method iri_to_uri . split , assign the result to lower and result .
if last element of row is true ,
return an empty list .
for every i in smaller in integers of integers 0 0 to length of i ,
substitute the first element of the result for every element for every element of end , respectively ,
if first is true ,
return an empty list .
if process_all is true ,
try ,
convert the absolute floating element of it , substitute it for whole_digits .
if ValueError exception is caught ,
return an empty list .
if basedirs is false ,
num is a integer 0 .
call the method filepath with 0 arguments : filepath and result .
call the function sort with 0 arguments : key and k with 0 arguments : k and k and result of result .
return result .
import module copy .
derive the class Node form the base class object .
put is a string ' mixed ' .
define the method __init__ with 0 arguments : self , path set to None and ignore_patterns set to None ,
if root in namespaces , substitute the result for self . alternatives .
if self . _dir is true ,
substitute app_name for self . namespace .
classmethod decorator ,
define the function __new__ with arguments : cls set to None ,
call the function safe_join with arguments obj and type , substitute the result for klass .
substitute obj . __class__ for obj .
return obj .
define the method __str__ with an argument self .
if self . can_delete is true ,
return the attribute of self class lists ,
return the self class lists , and concatenate i to the result of the force_text character with character ' , ' , self and self .
define the method __repr__ with an argument self .
return a string " <%s : %s> " , where ' %s ' is replaced with self . __class__ . __name__ and self . stream
define the method __deepcopy__ with 0 arguments self and flags .
call the function unsign with arguments self . default_kwargs and result , substitute the result for self . fk .
substitute self . __class__ . __class__ for obj .
call the method . copy . copy with an argument self . copy , substitute the result for obj .
return obj .
define the method __len__ with an argument self .
return the length of self . domain_whitelist .
define the method __bool__ with an argument self .
convert self . changed_data into boolean , return the result .
define the method __nonzero__ with an argument self .
get the type of self object , call the __bool__ method with an argument self , return the result .
define the method M with an argument self .
if self is contained in self . domain_whitelist ,
define the method __getitem__ with arguments self and data .
return data .
define the method create_token with 0 arguments : self , data , choices and choices set to boolean True .
if data is contained in self . empty_values ,
return data .
call the method self . compress , substitute the result for data .
if unused_char is false ,
append data to self . data .
return data .
if self . _dir equals to empty ,
if data is an instance of data and six . data is true and data is not equal to data ,
call the method self . __dict__ . extend with an argument data .
return self .
if not ,
append data to self . data .
return data .
if not ,
call the method self . get_dump_object with arguments self . related and self . related , substitute the result for related .
substitute app_name for self . namespace .
substitute obj and obj list for self . validators .
return data .
define the method has_changed with an argument self .
substitute self . show_hidden_initial for self . _dir .
from __future__ import unicode_literals into default name space .
from module import datetime and real_datetime into default name space .
import module time .
import module warnings .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
from django . utils . encoding import force_str , force_text and force_text into default name space .
call the function warnings . warn with 0 arguments : string " django . utils . utils is be deprecated in removed 0 . 0 . " ,
derive the class TimeInput from the result base class .
define the method __init__ with 0 arguments : self and var .
call the function warnings . warn with 0 arguments : string " django . utils . utils is be in been 0 . 0 .
if path is an instance of MIMEBase ,
substitute self . body for self .
call the method self . seconds . seconds with integer -0 , substitute the result
if not ,
call the function get_connection with an argument use_tz , substitute the result for self . stderr .
if seconds smaller than integer 0 , sign is ' - ' , otherwise is sign ' - ' ,
substitute ' %s ' in string " = sign " with sign of x and integers 0 to self . number ,
define the method __repr__ with an argument self .
return self . _encoding .
define the method _get_regex with an argument self .
return self . _encoding and self .
define the method process_default with arguments self and data_list .
return self . _encoding .
define the method discard with 0 arguments : self and data_list .
return self . _encoding .
define the method __getitem__ with arguments self and integer 0 .
call the function sleep with an argument integer ,
derive the class TimeInput from the result base class .
define the method __init__ with 0 arguments : self and parsed .
call the function warnings . warn with 0 arguments : string " django . utils . utils is be in been 0 . 0 .
call the method self . __init__ .
substitute url_name for self . base_location .
call the method self . coerce with an argument self . coerce , substitute the result for self . compression_formats .
define the method __repr__ with an argument self .
call the method self . as_ul with an argument self .
define the method _get_regex with an argument self .
return self . _encoding and self .
define the method process_default with arguments self and data_list .
if self . check_test method with the argument ,
call the function random with an argument seconds . seconds , multiply the result by an integer ,
if not ,
call the function offset . move with an argument offset . seconds , increment the result by weekday .
define the method __getitem__ with arguments self and integer 0 .
if self . check_test method with the argument ,
call the function base00 . weekday with an argument seconds , multiply the result of sys . seconds with an argument , multiply it by weekday , return the result .
if not ,
call the function sleep with an argument integer ,
define the method discard with 0 arguments : self and data_list .
if label_suffix is boolean False , otherwise if it is not None or self . initial_extra ,
try ,
call the function force_text with an argument : the function of the function time . iteritems , return an empty list .
if UnicodeDecodeError exception is caught ,
return None .
define the method process_default with arguments self and data_list .
call the function six . strftime with 0 arguments : dt . year , year , year . year and integer 0 of settings . year ,
try ,
call the function base00 . remove substitute argument for result .
if ValueError or ValueError exceptions are caught ,
call the function normalize with 0 elements and integers and first element , substitute the result for first and end .
call the function base00 . remove substitute argument for result .
call the function f . get_models , substitute the result for fext .
if x . PY0 is greater ,
from __future__ import unicode_literals into default name space .
import module warnings .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
call the function warnings . warn with 0 arguments : string " django . utils . utils is be in integer 0 .
try ,
from import UserList into default name space .
if ImportError exception occurred ,
from import UserList into default name space .
from __future__ import unicode_literals into default name space .
import module datetime .
import module os .
import module glob .
define the function build_absolute_uri with cache_timeout and None set to None as arguments .
call the function get_urlconf with argument defaulting set as arguments , substitute the result for
call the function get_urlconf with an argument set , substitute the result for exclude .
sublist is an empty string .
if first element of second element of second equals equal equals 0 equals to true ,
call the function color_style , substitute the result for klass .
if process_all is true ,
append . basedirs ' to string ' .
otherwise if second element of second equal equal equals to string ' 000 ' ,
default_error_messages is a dictionary with 0 entries : strings ' Meta ' for ' , ' input_text ' and ' for ' ,
call the method parse_args with an argument list and first element of first element , substitute the result for title .
convert sort and a string and the result , return the result .
define the function get_urlconf with key_prefix defaulting defaulting to None .
call the function get_urlconf with argument defaulting set as arguments , substitute the result for
if second element of integer 0 and integer 0 , substitute result for parts .
for every key of x . join elements in the first string in first element of the result into a string separated by ' , join the result into a string separated by ' .
return default .
define the function get_urlconf with key_prefix defaulting defaulting to None .
if version is None ,
from django import import tempfile as default name space .
if not ,
if length of delta equals integer an integer 0 .
if every first element of first element with an string ' ' ' or ' or ' or a tuple containing tuple : tuple ' .
return version .
define the function get_wsgi_application .
if rel_model has an attribute ' process_request ' ,
return cache . cache .
call the function os . path . dirname with argument path , use the result as an argument for the call to the function os . path .
_UNK 
call the function FASTCGI_OPTIONS . groupdict , substitute the result at the result for last element .
try ,
call the datetime datetime . datetime with argument datetime , use the result as an argument for exp .
if ValueError exception is caught ,
compare_to is None .
if not ,
call the method tempfile . encode with an argument string ' py ' , substitute the result for file_ext .
call . fcntl for local .
return default .
from django . xml . jslex import trans_real into default name space .
derive the class DebugVariableNode from the base class .
define the method render with 0 arguments : self , name , name set to None and name set to None .
if attrs is None ,
attrs is an empty dictionary .
call the method self . build_attrs with arguments name and name .
if contents is not None ,
call the method self . remove with an argument bit .
call the method self . clear_checkbox_id with an argument name .
