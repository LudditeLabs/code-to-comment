Code line 1: from threading import local
Original:  from threading import local into default name space . 
Translation: from threading import threading into default name space .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 2:  import warnings
Original:  import module warnings . 
Translation: import module warnings .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 3:   from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 4:  from django . core import signals
Original:  from django . core import signals into default name space . 
Translation: from django . core import signals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 5:  from django . core . cache . backends . base import (  InvalidCacheBackendError , CacheKeyWarning , BaseCache )
Original:  from django . core . cache . backends . base import InvalidCacheBackendError , CacheKeyWarning and BaseCache into default name space . 
Translation: from django . core . serializers . _UNK . _UNK import _UNK and _UNK into default name space .
BLEU = 37.11 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 73.7 
  2-gram: 44.4 
  3-gram:35.3 
  4-gram: 25.0 

Code line 6:  from django . core . exceptions import ImproperlyConfigured
Original:  from django . core . exceptions import ImproperlyConfigured into default name space . 
Translation: from django . core . exceptions import ImproperlyConfigured into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 7:  from django . utils . deprecation import RemovedInDjango19Warning
Original:  from django . utils . deprecation import RemovedInDjango19Warning into default name space . 
Translation: from django . utils . deprecation import RemovedInDjango00Warning into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 8:  from django . utils . module_loading import import_string
Original:  from django . utils . module_loading import import_string into default name space . 
Translation: from django . utils . module_loading import import_string into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 9:    __all__ = [  'get_cache' , 'cache' , 'DEFAULT_CACHE_ALIAS' , 'InvalidCacheBackendError' ,  'CacheKeyWarning' , 'BaseCache' ,  ]
Original:  __all__ is an list containing 6 elements: ' get_cache ' , ' cache ' , ' DEFAULT_CACHE_ALIAS ' , ' InvalidCacheBackendError ' , 
Translation: __all__ is an list with 0 elements : strings ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' ,
BLEU = 14.99 (Bravity Penalty=1.000, Length ratio=1.609, Translated length=37, Reference length=23)
  1-gram: 43.2 
  2-gram: 27.8 
  3-gram:14.3 
  4-gram: 2.9 

Code line 10:   DEFAULT_CACHE_ALIAS = 'default'
Original:  ' CacheKeyWarning ' and ' BaseCache ' DEFAULT_CACHE_ALIAS is a string ' default ' . 
Translation: _UNK is a string ' _UNK ' .
BLEU = 17.14 (Bravity Penalty=0.417, Length ratio=0.533, Translated length=8, Reference length=15)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 11:   if DEFAULT_CACHE_ALIAS not in settings . CACHES :
Original:  if DEFAULT_CACHE_ALIAS is not contained in settings . CACHES , 
Translation: if _UNK is not contained in settings . _UNK ,
BLEU = 55.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:50.0 
  4-gram: 42.9 

Code line 12:       raise ImproperlyConfigured ( "You must define a '%s' cache" % DEFAULT_CACHE_ALIAS )
Original:  raise an exception ImproperlyConfigured with string " You must define a ' %s ' cache " as argument , with ' %s ' replaced with DEFAULT_CACHE_ALIAS converted into a string . 
Translation: raise an ImproperlyConfigured with an argument string " _UNK ' %s ' does _UNK _UNK _UNK _UNK "
BLEU = 0.00 (Bravity Penalty=0.486, Length ratio=0.581, Translated length=18, Reference length=31)
  1-gram: 61.1 
  2-gram: 29.4 
  3-gram:6.2 
  4-gram: 0.0 

Code line 13:     def get_cache ( backend , ** kwargs ) :
Original:  define the function get_cache with backend and dictionary pair of elements kwargs as arguments . 
Translation: define the function _UNK with 0 arguments : unpacked and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 14:  warnings . warn ( "'get_cache' is deprecated in favor of 'caches'." ,  RemovedInDjango19Warning , stacklevel = 2 )
Original:  call the function warnings . warn with string " ' get_cache ' is deprecated in favor of ' caches ' . " , RemovedInDjango19Warning , 
Translation: call the function warnings . warn with 0 arguments : string ' _UNK ' is deprecated ' ,
BLEU = 29.65 (Bravity Penalty=0.678, Length ratio=0.720, Translated length=18, Reference length=25)
  1-gram: 77.8 
  2-gram: 47.1 
  3-gram:37.5 
  4-gram: 26.7 

Code line 15:  cache = _create_cache ( backend , ** kwargs )
Original:  and stacklevel set to 2 as arguments . call the _create_cache with backend and dictionary kwargs as arguments , substitute the result for cache . 
Translation: _UNK is an instance of _UNK class , created with 0 arguments : unpacked dictionary
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=15, Reference length=25)
  1-gram: 26.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 16:     signals . request_finished . connect ( cache . close )
Original:  call the function signals . request_finished . connect with argument cache . close . 
Translation: call the method serializers . _UNK . _UNK with _UNK as the argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 50.0 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 17:  return cache
Original:  return cache . 
Translation: return cache .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 18:     def _create_cache ( backend , ** kwargs ) :
Original:  define the function _create_cache with backend and dictionary pair of elements kwargs as arguments . 
Translation: define the function _UNK with 0 arguments : unpacked and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 19:       try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 20:            try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 21:               conf = settings . CACHES [ backend ]
Original:  substitute value under the backend key of settings . CACHES dictionary for conf . 
Translation: substitute settings . _UNK dictionary of the settings . _UNK dictionary .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 58.3 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 22:   except KeyError :
Original:  if KeyError exception is caught , 
Translation: if KeyError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 23:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 24:                    import_string ( backend )
Original:  call the function import_string with argument backend . 
Translation: define the function prepare_js_for_gettext with an argument new_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 55.6 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 25:   except ImportError as e :
Original:  if ImportError , renamed to e , exception is caught , 
Translation: if ImportError , renamed to e , exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 26:                   raise InvalidCacheBackendError ( "Could not find backend '%s': %s" % (  backend , e ) )
Original:  raise and exception InvalidCacheBackendError with string " Could not find backend ' %s ' : %s " as argument , replace ' %s ' with backend and e , respectively . 
Translation: raise an exception exception with an argument string " _UNK _UNK %s ' %s ' %s ' , where ' %s ' with name ,
BLEU = 13.81 (Bravity Penalty=0.787, Length ratio=0.806, Translated length=25, Reference length=31)
  1-gram: 64.0 
  2-gram: 25.0 
  3-gram:13.0 
  4-gram: 4.5 

Code line 27:   location = kwargs . pop ( 'LOCATION' , '' )
Original:  remove ' LOCATION ' key from kwargs dictionary and put it into location , or use an empty string if key doesnt exists . 
Translation: remove the value ' _UNK ' key of the kwargs dictionary , substitute it for defaults .
BLEU = 0.00 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24)
  1-gram: 52.9 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 28:  params = kwargs
Original:  substitute kwargs for params . 
Translation: substitute kwargs for kwargs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 29:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 30:               params = conf . copy ( )
Original:  call the function conf . copy , substitute it for params . 
Translation: call the method copy . copy , substitute the result for defaults .
BLEU = 24.71 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 61.5 
  2-gram: 33.3 
  3-gram:18.2 
  4-gram: 10.0 

Code line 31:  params . update ( kwargs )
Original:  call the function params . update with argument kwargs . 
Translation: update defaults dictionary with kwargs .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=6, Reference length=10)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 32:  backend = params . pop ( 'BACKEND' )
Original:  remove ' BACKEND ' key from params dictionary and put it into backend . 
Translation: remove the value under the ' _UNK ' key of the params dictionary , substitute the result for html .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=20, Reference length=14)
  1-gram: 35.0 
  2-gram: 10.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 33:  location = params . pop ( 'LOCATION' , '' )
Original:  remove ' LOCATION ' key from kwargs dictionary and put it into location , or use an empty string if key doesnt exists . 
Translation: remove the value under ' ' ' key , substitute the result for defaults .
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=15, Reference length=24)
  1-gram: 40.0 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 34:   backend_cls = import_string ( backend )
Original:  call the import_string with argument backend , substitute it for backend_cls . 
Translation: call the function import_string with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 35:   except ImportError as e :
Original:  if ImportError , renamed to e , is caught , 
Translation: if ImportError , renamed to e , exception is caught ,
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 36:           raise InvalidCacheBackendError (  "Could not find backend '%s': %s" % ( backend , e ) )
Original:  aise and exception InvalidCacheBackendError with string " Could not find backend ' %s ' : %s " as argument , replace ' %s ' with backend and e , respectively . 
Translation: raise an exception exception with an argument string " _UNK _UNK %s ' %s ' %s ' , where ' %s ' with name ,
BLEU = 13.58 (Bravity Penalty=0.787, Length ratio=0.806, Translated length=25, Reference length=31)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:13.0 
  4-gram: 4.5 

Code line 37:   return backend_cls ( location , params )
Original:  evaluate the function backend_cls with location and params as arguments , return the result . 
Translation: return the instance of _UNK class , with the arguments source and s .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 57.1 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 38:     class CacheHandler ( object ) :
Original:  derive the class CacheHandler from the object base class . 
Translation: derive the class _UNK from object base class .
BLEU = 39.94 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 39:  def __init__ ( self ) :
Original:  define the __init__ method with argument self . 
Translation: define the method __init__ with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 40:           self . _caches = local ( )
Original:  call the function local , substitute the result for self . _caches . 
Translation: call the method _UNK , substitute the result for self . _UNK .
BLEU = 53.44 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 58.3 
  3-gram:45.5 
  4-gram: 40.0 

Code line 41:    def __getitem__ ( self , alias ) :
Original:  define the __getitem__ method with self and alias arguments . 
Translation: define the method __getitem__ with an argument self and value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 42:           try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 43:               return self . _caches . caches [ alias ]
Original:  return value under the alias key of self . _caches . caches dictionary . 
Translation: return value under the self . _UNK . _UNK dictionary with the _UNK : _UNK
BLEU = 21.02 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 53.3 
  2-gram: 28.6 
  3-gram:15.4 
  4-gram: 8.3 

Code line 44:   except AttributeError :
Original:  except if AttributeError is caught , 
Translation: if AttributeError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 45:               self . _caches . caches = { }
Original:  self . _caches . caches is an empty dictionary . 
Translation: self . _UNK is an empty dictionary .
BLEU = 46.31 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 46:   except KeyError :
Original:  except if KeyError exception is caught , 
Translation: if KeyError exception is caught ,
BLEU = 84.65 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 47:               pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 48:    if alias not in settings . CACHES :
Original:  if alias is not contained in setting . CACHES , 
Translation: if vale is not contained in _UNK . _UNK ,
BLEU = 30.21 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:25.0 
  4-gram: 14.3 

Code line 49:               raise InvalidCacheBackendError (  "Could not find config for '%s' in settings.CACHES" % alias  )
Original:  raise and exception InvalidCacheBackendError with string " Could not find config for ' %s ' in settings . CACHES " as argument , replace ' %s ' with alias . 
Translation: raise an _UNK exception with an argument string ' _UNK ' _UNK ' in _UNK t t t t t t _UNK " , where ' %s ' is replaced with name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=33, Reference length=30)
  1-gram: 45.5 
  2-gram: 9.4 
  3-gram:3.2 
  4-gram: 0.0 

Code line 50:    cache = _create_cache ( alias )
Original:  call the function _create_cache with argument alias . 
Translation: _UNK is an instance of _UNK class , with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.625, Translated length=13, Reference length=8)
  1-gram: 23.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 51:  self . _caches . caches [ alias ] = cache
Original:  substitute cache for value under the alias key of self . _caches . caches dictionary . 
Translation: substitute value for the value under the _UNK key of the self . _UNK dictionary .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 68.8 
  2-gram: 33.3 
  3-gram:7.1 
  4-gram: 0.0 

Code line 52:  return cache
Original:  reuturn cache . 
Translation: return cache .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 53:    def all ( self ) :
Original:  define the method all with argument self . 
Translation: define the method changed_data with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 54:           return getattr ( self . _caches , 'caches' , { } ) . values ( )
Original:  get attribute ' caches ' from the self . _caches if exists , otherwise get an empty dictionary , call the values method on the return value , return it . 
Translation: get ' _UNK ' attribute from the self . object object , if it exists return it ,
BLEU = 9.60 (Bravity Penalty=0.486, Length ratio=0.581, Translated length=18, Reference length=31)
  1-gram: 77.8 
  2-gram: 23.5 
  3-gram:12.5 
  4-gram: 6.7 

Code line 55:     caches = CacheHandler ( )
Original:  call the CacheHandler function , substitute the result for caches . 
Translation: call the function _UNK with the argument _UNK .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 55.6 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 56:    class DefaultCacheProxy ( object ) :
Original:  derive the class DefaultCacheProxy from the base class object . 
Translation: derive the class _UNK from object base class .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 57:  def __getattr__ ( self , name ) :
Original:  define the method __getattr__ with self and name as arguments . 
Translation: define the method __getattr__ with arguments self and name .
BLEU = 50.27 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 100.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 28.6 

Code line 58:           return getattr ( caches [ DEFAULT_CACHE_ALIAS ] , name )
Original:  get attribute name from value under the DEFAULT_CACHE_ALIAS key of caches dictionary , return it . 
Translation: get the attribute under the _UNK key of the _UNK object , call the _UNK with 0 arguments : return value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=22, Reference length=16)
  1-gram: 45.5 
  2-gram: 9.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 59:    def __setattr__ ( self , name , value ) :
Original:  define the method __setattr__ with self , name and value as arguments . 
Translation: define the method _UNK with arguments self , name and value .
BLEU = 42.24 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 91.7 
  2-gram: 54.5 
  3-gram:40.0 
  4-gram: 22.2 

Code line 60:           return setattr ( caches [ DEFAULT_CACHE_ALIAS ] , name , value )
Original:  set the attribute name from value under the DEFAULT_CACHE_ALIAS key of caches dictionary to value , return it . 
Translation: set the value _UNK under the _UNK _UNK of the _UNK dictionary , use _UNK as 0 and return value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.105, Translated length=21, Reference length=19)
  1-gram: 52.4 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 61:    def __delattr__ ( self , name ) :
Original:  define the method __delattr__ with self and name as arguments . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 62:           return delattr ( caches [ DEFAULT_CACHE_ALIAS ] , name )
Original:  delete the attribute name from the cache dictionary under the DEFAULT_CACHE_ALIAS key . 
Translation: return the value under the name key of the _UNK dictionary , with _UNK as the instance of the generator class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.692, Translated length=22, Reference length=13)
  1-gram: 36.4 
  2-gram: 4.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 63:    def __contains__ ( self , key ) :
Original:  define the method __contains__ with self and key as arguments . 
Translation: define the method __contains__ with 0 arguments : self and key .
BLEU = 44.83 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 83.3 
  2-gram: 54.5 
  3-gram:40.0 
  4-gram: 22.2 

Code line 64:           return key in caches [ DEFAULT_CACHE_ALIAS ]
Original:  if key if contained in value under the DEFAULT_CACHE_ALIAS key of caches dictionary , return boolean True , otherwise return False . 
Translation: return key in the value of the _UNK key of the _UNK .
BLEU = 0.00 (Bravity Penalty=0.500, Length ratio=0.591, Translated length=13, Reference length=22)
  1-gram: 61.5 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 65:    def __eq__ ( self , other ) :
Original:  define the method __eq__ with self and other as arguments . 
Translation: define the method __eq__ with an argument self .
BLEU = 38.88 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 66:           return caches [ DEFAULT_CACHE_ALIAS ] == other
Original:  if value under the DEFAULT_CACHE_ALIAS key of caches dictionary equals to other , return boolean True , otherwise return False . 
Translation: return value under the _UNK key of the _UNK .
BLEU = 0.00 (Bravity Penalty=0.333, Length ratio=0.476, Translated length=10, Reference length=21)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 67:    def __ne__ ( self , other ) :
Original:  define the method __ne__ with self and other as arguments . 
Translation: define the method __ne__ with an argument self .
BLEU = 38.88 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 68:           return caches [ DEFAULT_CACHE_ALIAS ] != other
Original:  if value under the DEFAULT_CACHE_ALIAS key of caches dictionary is not equal to other , return boolean True , otherwise return False . 
Translation: return value under the _UNK of _UNK are not of _UNK equals _UNK .
BLEU = 0.00 (Bravity Penalty=0.526, Length ratio=0.609, Translated length=14, Reference length=23)
  1-gram: 50.0 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 69:     cache = DefaultCacheProxy ( )
Original:  call the DefaultCacheProxy function , substitute it for cache . 
Translation: call the function _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 44.4 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 70:    def close_caches ( ** kwargs ) :
Original:  define the function close_caches with dictionary pair of elements kwargs as argument . 
Translation: define the function _UNK with an argument unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 72.7 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 71:          for cache in caches . all ( ) :
Original:  for every cache in return value of the function caches . all . 
Translation: for every d in return value of the call to the function cache . _UNK
BLEU = 32.38 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:23.1 
  4-gram: 16.7 

Code line 72:           cache . close ( )
Original:  call the function cache . close . 
Translation: close file descriptor .
BLEU = 0.00 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=4, Reference length=7)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 73:    signals . request_finished . connect ( close_caches )
Original:  call the function signals . request_finished . connect with argument close_caches . 
Translation: call the method gettext_module . _UNK . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 53.8 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 74:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 75:   import time
Original:  import module time . 
Translation: import module time .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 76:  import warnings
Original:  import module warnings . 
Translation: import module warnings .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 77:   from django . core . exceptions import ImproperlyConfigured , DjangoRuntimeWarning
Original:  from django . core . exceptions import ImproperlyConfigured and DjangoRuntimeWarning into default name space . 
Translation: from django . core . exceptions import ImproperlyConfigured and _UNK into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 78:  from django . utils . module_loading import import_string
Original:  from django . utils . module_loading import import_string into default name space . 
Translation: from django . utils . module_loading import import_string into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 79:    class InvalidCacheBackendError ( ImproperlyConfigured ) :
Original:  derive class InvalidCacheBackendError from the ImproperlyConfigured base class . 
Translation: derive the class _UNK from the base class Exception .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 80:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 81:     class CacheKeyWarning ( DjangoRuntimeWarning ) :
Original:  derive class CacheKeyWarning from the DjangoRuntimeWarning base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 82:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 83:       DEFAULT_TIMEOUT = object ( )
Original:  DEFAULT_TIMEOUT is a instance of the class object . 
Translation: _UNK is an instance of object class .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 84:    MEMCACHE_MAX_KEY_LENGTH = 250
Original:  MEMCACHE_MAX_KEY_LENGTH is integer 250 . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 85:    def default_key_func ( key , key_prefix , version ) :
Original:  define the function default_key_func with 3 arguments , key , key_prefix and version . 
Translation: define the function _UNK with 0 arguments , key and charset as arguments .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 64.3 
  2-gram: 30.8 
  3-gram:16.7 
  4-gram: 0.0 

Code line 86:  return '%s:%s:%s' % ( key_prefix , version , key )
Original:  convert key_prefix , version and key into strings , concatenate them respectively , with character ' : ' as delimiter , return the result . 
Translation: return the string ' %s : %s ' %s ' with %s , %s and _UNK , where ' %s ' is replaced with name
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 36.0 
  2-gram: 4.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 87:     def get_key_func ( key_func ) :
Original:  define the function get_key_func with argument key_func . 
Translation: define the function _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 88:  if key_func is not None :
Original:  if key_func is not of None type , 
Translation: if _UNK is not None ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 83.3 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 89:           if callable ( key_func ) :
Original:  if key_function is callable object , 
Translation: if _UNK is a object ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 90:               return key_func
Original:  return key_func . 
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 91:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 92:               return import_string ( key_func )
Original:  evaluate the function import_string with key_func as argument , return the result . 
Translation: call the function import_string with an argument _UNK , return the result .
BLEU = 49.74 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 58.3 
  3-gram:45.5 
  4-gram: 30.0 

Code line 93:    return default_key_func
Original:  return default_key_func . 
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 94:     class BaseCache ( object ) :
Original:  derive the class BaseCache from the object base class . 
Translation: derive the class _UNK from object base class .
BLEU = 39.94 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 95:       def __init__ ( self , params ) :
Original:  define the initialization function __init__ with self class instance and params as arguments . 
Translation: define the method __init__ with 0 arguments : self and nodetype .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 66.7 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 96:           timeout = params . get ( 'timeout' , params . get ( 'TIMEOUT' , 300 ) )
Original:  call the params . get method with string ' TIMEOUT ' and integer 300 as arguments , use the string ' timeout ' and previous result as the arguments for the call to the params . get method , substitute the result for timeout . 
Translation: call the method value . remove with argument : second element element : an empty string , substitute the result for _ ,
BLEU = 7.79 (Bravity Penalty=0.384, Length ratio=0.511, Translated length=23, Reference length=45)
  1-gram: 52.2 
  2-gram: 22.7 
  3-gram:14.3 
  4-gram: 10.0 

Code line 97:  if timeout is not None :
Original:  if timeout is not None , 
Translation: if max_value is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 98:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 99:                   timeout = int ( timeout )
Original:  convert timeout into an integer . 
Translation: convert to to an integer .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 100:   except ( ValueError , TypeError ) :
Original:  if ValueError or TypeError exceptions occurred , 
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 101:                   timeout = 300
Original:  timeout is integer 300 . 
Translation: substitute _UNK for len_item .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 102:    self . default_timeout = timeout
Original:  substitute timeout for self . default_timeout . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 103:   options = params . get ( 'OPTIONS' , { } )
Original:  call the params . get with string ' OPTIONS ' and empty dictionary as arguments , substitute the result for options . 
Translation: get the value under the ' _UNK ' key of the options dictionary , if the result exists ,
BLEU = 0.00 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 47.4 
  2-gram: 5.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 104:  max_entries = params . get ( 'max_entries' , options . get ( 'MAX_ENTRIES' , 300 ) )
Original:  call the options . get method with string ' MAX_ENTRIES ' and integer 300 as arguments , use the string ' max_entries ' and previous result as the arguments for the call to the params . get method , substitute the result for max_entries . 
Translation: get the value under the ' _UNK ' key of the options dictionary , if the _UNK _UNK exists , if the _UNK exists _UNK ,
BLEU = 0.00 (Bravity Penalty=0.482, Length ratio=0.578, Translated length=26, Reference length=45)
  1-gram: 42.3 
  2-gram: 4.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 105:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 106:               self . _max_entries = int ( max_entries )
Original:  convert max_entries into a string , substitute it for self . _max_entries . 
Translation: convert _UNK into a integer and substitute it for self . _UNK .
BLEU = 35.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 69.2 
  2-gram: 41.7 
  3-gram:27.3 
  4-gram: 20.0 

Code line 107:   except ( ValueError , TypeError ) :
Original:  if ValueError or TypeError exceptions occurred , 
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 108:               self . _max_entries = 300
Original:  self . _max_entries is integer 300 . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 42.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 109:    cull_frequency = params . get ( 'cull_frequency' , options . get ( 'CULL_FREQUENCY' , 3 ) )
Original:  call the options . get method with string ' CULL_FREQUENCY ' and integer 3 as arguments , use the string ' cull_frequency ' and previous result as the arguments for the call to the params . get method , substitute the result for cull_frequency . 
Translation: get the value under the ' _UNK ' key of the options dictionary , if the _UNK _UNK exists , if the _UNK exists _UNK ,
BLEU = 0.00 (Bravity Penalty=0.482, Length ratio=0.578, Translated length=26, Reference length=45)
  1-gram: 42.3 
  2-gram: 4.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 110:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 111:               self . _cull_frequency = int ( cull_frequency )
Original:  convert cull_frequency into an integer and substitute it for self . _cull_frequency . 
Translation: convert _UNK into a integer and substitute it for self . _UNK .
BLEU = 51.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:45.5 
  4-gram: 40.0 

Code line 112:   except ( ValueError , TypeError ) :
Original:  if ValueError or TypeError exceptions occurred , 
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 113:               self . _cull_frequency = 3
Original:  self . _cull_frequency is integer 3 . 
Translation: self . _UNK is integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 114:    self . key_prefix = params . get ( 'KEY_PREFIX' , '' )
Original:  call the params . get method with string ' KEY_PREFIX ' and an empty string as arguments , substitute the result for self . _key_prefix . 
Translation: get the value under the ' _UNK ' key of the dictionary dictionary , substitute the result for self . stderr .
BLEU = 25.09 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26)
  1-gram: 54.5 
  2-gram: 28.6 
  3-gram:25.0 
  4-gram: 21.1 

Code line 115:  self . version = params . get ( 'VERSION' , 1 )
Original:  call the params . get method wit string ' VERSION ' and integer 1 as arguments , substitute the result for self . version . 
Translation: get the value under the ' _UNK ' key of the field_params dictionary , if the key exists substitute it for self . domain ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 40.0 
  2-gram: 8.3 
  3-gram:4.3 
  4-gram: 0.0 

Code line 116:  self . key_func = get_key_func ( params . get ( 'KEY_FUNCTION' , None ) )
Original:  call the method params . get with 2 arguments , string ' KEY_FUNCTION ' and None , use the result as the argument for the call to the function get_key_func , substitute the result for the self . key_func . 
Translation: get the value under the ' _UNK ' key of the options dictionary , if the _UNK exists _UNK exists ,
BLEU = 0.00 (Bravity Penalty=0.405, Length ratio=0.525, Translated length=21, Reference length=40)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 117:    def get_backend_timeout ( self , timeout = DEFAULT_TIMEOUT ) :
Original:  define the method get_backend_timeout with self class instance and timeout set to DEFAULT_TIMEOUT as arguments , 
Translation: define the method _UNK with 0 arguments : self and _UNK set to None .
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 60.0 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 118:  if timeout == DEFAULT_TIMEOUT :
Original:  if timeout equals to DEFAULT_TIMEOUT , 
Translation: if _UNK equals _UNK ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 119:               timeout = self . default_timeout
Original:  substitute self . default_timeout for timeout . 
Translation: substitute self . _UNK for self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 120:   elif timeout == 0 :
Original:  else if timeout equals to integer 0 , 
Translation: otherwise if _UNK equals integer 0 ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 121:                timeout = - 1
Original:  timeout is a integer -1 . 
Translation: doublecolon_start is an integer -0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 122:   return None if timeout is None else time . time ( ) + timeout
Original:  if timeouts is None return None , otherwise return the sum of function time . time return value and timeout . 
Translation: if limit is None , or None is None or None is None , return None .
BLEU = 0.00 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21)
  1-gram: 41.2 
  2-gram: 18.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 123:    def make_key ( self , key , version = None ) :
Original:  define the function make_key with self class instance , key and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and version set to None .
BLEU = 39.84 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 76.5 
  2-gram: 43.8 
  3-gram:33.3 
  4-gram: 28.6 

Code line 124:  if version is None :
Original:  if version is None , 
Translation: if version is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 125:               version = self . version
Original:  substitute self . version for version . 
Translation: substitute self . _UNK for version .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 126:    new_key = self . key_func ( key , self . key_prefix , version )
Original:  call the method self . key_function with key , self . key_prefix and version as arguments , substitute the result for new_key . 
Translation: call the method self . _UNK with 0 arguments : self , _UNK and _UNK as the arguments , substitute the result for _UNK .
BLEU = 36.44 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 68.0 
  2-gram: 37.5 
  3-gram:30.4 
  4-gram: 22.7 

Code line 127:  return new_key
Original:  return new_key . 
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 128:    def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method add with 5 arguments , self , key , value , timeout defaulting to DEFAULT_TIMEOUT and version defaulting to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , length set to None ,
BLEU = 0.00 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24)
  1-gram: 64.7 
  2-gram: 25.0 
  3-gram:6.7 
  4-gram: 0.0 

Code line 129:           """         Set a value in the cache if the key does not already exist. If         timeout is given, that timeout will be used for the key; otherwise         the default cache timeout will be used.         Returns True if the value was stored, False otherwise.         """
Original:  docsring 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=1, Reference length=1)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 130:  raise NotImplementedError ( 'subclasses of BaseCache must provide an add() method' )
Original:  raise an exception of class NotImplementedError with string ' subclasses of BaseCache must provide an add ( ) method ' as argument . 
Translation: raise an NotImplementedError with an argument string ' _UNK must of _UNK provide provide ( ) method ' .
BLEU = 17.27 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23)
  1-gram: 84.2 
  2-gram: 33.3 
  3-gram:11.8 
  4-gram: 6.2 

Code line 131:    def get ( self , key , default = None , version = None ) :
Original:  define the method get with 4 arguments , self , key , default set to None and version set to None . 
Translation: define the method get with 0 arguments : self , key , default set to None and default set to None .
BLEU = 64.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22)
  1-gram: 86.4 
  2-gram: 71.4 
  3-gram:60.0 
  4-gram: 47.4 

Code line 132:  raise NotImplementedError ( 'subclasses of BaseCache must provide a get() method' )
Original:  raise an exception of class NotImplementedError , with string ' subclasses of BaseCache must provide a get ( ) method ' as argument . 
Translation: raise an NotImplementedError with an argument string ' _UNK subclasses of _UNK provide a _UNK ( ) ' .
BLEU = 0.00 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24)
  1-gram: 78.9 
  2-gram: 27.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 133:    def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set with 5 arguments , self , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , _UNK set to None , as the default exception .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 59.1 
  2-gram: 23.8 
  3-gram:10.0 
  4-gram: 0.0 

Code line 134:  raise NotImplementedError ( 'subclasses of BaseCache must provide a set() method' )
Original:  raise an exception of class NotImplementedError , with string ' subclasses of BaseCache must provide a set ( ) method ' as argument . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=18, Reference length=24)
  1-gram: 77.8 
  2-gram: 23.5 
  3-gram:6.2 
  4-gram: 0.0 

Code line 135:    def delete ( self , key , version = None ) :
Original:  define delete method with self class instance , key and version set to None , as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and mimetype set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 70.6 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 0.0 

Code line 136:  raise NotImplementedError ( 'subclasses of BaseCache must provide a delete() method' )
Original:  raise an exception of class NotImplementedError , with string ' subclasses of BaseCache must provide a delete ( ) method ' as argument . 
Translation: raise an NotImplementedError exception with an argument string ' subclasses of _UNK provide a _UNK ( ) ' .
BLEU = 16.38 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24)
  1-gram: 84.2 
  2-gram: 33.3 
  3-gram:11.8 
  4-gram: 6.2 

Code line 137:    def get_many ( self , keys , version = None ) :
Original:  define the get_many method with self class instance , keys and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , _UNK and dklen set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 70.6 
  2-gram: 18.8 
  3-gram:6.7 
  4-gram: 0.0 

Code line 138:  d = { }
Original:  d is an empty dictionary . 
Translation: d is an empty dictionary .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 139:  for k in keys :
Original:  for every k in keys , 
Translation: for every v in sorted_items ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 140:               val = self . get ( k , version = version )
Original:  call the self . get method with k and version set to version as arguments , substitute the result for val . 
Translation: call the method self . get with arguments key and unpacked dictionary , substitute the result for cache_key .
BLEU = 26.32 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 38.9 
  3-gram:23.5 
  4-gram: 12.5 

Code line 141:  if val is not None :
Original:  if val is not None , 
Translation: if val is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 142:                   d [ k ] = val
Original:  substitute val for value under the k key of dictionary d . 
Translation: substitute val for value under the d key of d dictionary .
BLEU = 50.81 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 91.7 
  2-gram: 54.5 
  3-gram:40.0 
  4-gram: 33.3 

Code line 143:    return d
Original:  return d . 
Translation: return d .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 144:    def has_key ( self , key , version = None ) :
Original:  define method has_key with self class instance , key and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and default set to None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 70.6 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 0.0 

Code line 145:  return self . get ( key , version = version ) is not None
Original:  call the self . get method with key and version set to version as arguments , return it if it is not None . 
Translation: get the key of the key key of the _UNK dictionary , with the arguments key and return boolean False .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 42.9 
  2-gram: 5.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 146:    def incr ( self , key , delta = 1 , version = None ) :
Original:  define the method incr with 4 arguments , self class instance , key , delta defaulting to integer 1 and version defaulting to None . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 0.00 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=22, Reference length=25)
  1-gram: 63.6 
  2-gram: 23.8 
  3-gram:10.0 
  4-gram: 0.0 

Code line 147:  value = self . get ( key , version = version )
Original:  call the method self . get with key and version set to version as arguments , substitute the result for value . 
Translation: call the method self . _UNK with arguments key and value , substitute the result for _UNK .
BLEU = 37.29 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=18, Reference length=22)
  1-gram: 88.9 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 26.7 

Code line 148:  if value is None :
Original:  if value is None , 
Translation: if value is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 149:               raise ValueError ( "Key '%s' not found" % key )
Original:  raise an exception of class ValueError , with string " Key ' %s ' not found " as argument , where ' %s ' is substituted for key . 
Translation: raise an ValueError with an argument string " _UNK ' %s ' does ' formated with name .
BLEU = 0.00 (Bravity Penalty=0.543, Length ratio=0.621, Translated length=18, Reference length=29)
  1-gram: 66.7 
  2-gram: 23.5 
  3-gram:6.2 
  4-gram: 0.0 

Code line 150:   new_value = value + delta
Original:  add value and delta together , substitute the result for new_value . 
Translation: sum sum and is_relation , substitute the result for result .
BLEU = 34.85 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 63.6 
  2-gram: 40.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 151:  self . set ( key , new_value , version = version )
Original:  call the self . set method with key , new_value and version set to version as arguments . 
Translation: call the method self . _UNK with 0 arguments : key , _UNK set to default False .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 66.7 
  2-gram: 23.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 152:  return new_value
Original:  return new_value . 
Translation: return empty .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 153:    def decr ( self , key , delta = 1 , version = None ) :
Original:  define the method decr with arguments self , key , delta defaulting to integer 1 and version defaulting to None . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 19.11 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21)
  1-gram: 59.1 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 5.3 

Code line 154:  return self . incr ( key , - delta , version = version )
Original:  call the self . incr method with key , negative delta and version set to version as arguments . 
Translation: call the method self . _UNK with 0 arguments : _UNK , truncate and _UNK as the arguments , return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.211, Translated length=23, Reference length=19)
  1-gram: 47.8 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 155:    def __contains__ ( self , key ) :
Original:  define the private method __contains__ with self class instance and key as arguments . 
Translation: define the method __contains__ with 0 arguments : self and key .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 83.3 
  2-gram: 36.4 
  3-gram:10.0 
  4-gram: 0.0 

Code line 156:     return self . has_key ( key )
Original:  evaluate the self . has_key method with key as argument , return the result . 
Translation: call the method self . has_key with the key and return the result .
BLEU = 26.80 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 78.6 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 9.1 

Code line 157:    def set_many ( self , data , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set_many with arguments , self , data , timeout defaulting to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK set to None , _UNK set to None .
BLEU = 20.15 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 65.0 
  2-gram: 31.6 
  3-gram:16.7 
  4-gram: 5.9 

Code line 158:  for key , value in data . items ( ) :
Original:  for every key and value in data . items method return value , 
Translation: for every key and value in value of dictionary keys .
BLEU = 41.37 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:44.4 
  4-gram: 37.5 

Code line 159:               self . set ( key , value , timeout = timeout , version = version )
Original:  call the method self . set with arguments key , value , timeout set to timeout , version set to version . 
Translation: call the method self . _UNK with 0 arguments : value , key set to None , set the result and extend set to arguments
BLEU = 21.69 (Bravity Penalty=1.000, Length ratio=1.136, Translated length=25, Reference length=22)
  1-gram: 64.0 
  2-gram: 29.2 
  3-gram:13.0 
  4-gram: 9.1 

Code line 160:     def delete_many ( self , keys , version = None ) :
Original:  define the method delete_many with arguments self , keys and version defaulting to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK and dklen set to None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 64.7 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 161:  for key in keys :
Original:  for every key in keys , 
Translation: for every key in obj_dict ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 162:               self . delete ( key , version = version )
Original:  call the delete method with key and version set to version as arguments . 
Translation: call the method self . _UNK with 0 arguments : key and mimetype .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 57.1 
  2-gram: 15.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 163:     def clear ( self ) :
Original:  define the method clear with self class instance as the argument , 
Translation: define the method clear with an argument self .
BLEU = 34.79 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 164:  raise NotImplementedError ( 'subclasses of BaseCache must provide a clear() method' )
Original:  raise an exception NotImplementedError with string ' subclasses of BaseCache must provide a clear ( ) method ' as argument . 
Translation: raise an NotImplementedError exception with an argument string ' subclasses of _UNK must provide a _UNK ( ) ' .
BLEU = 22.39 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 85.0 
  2-gram: 36.8 
  3-gram:16.7 
  4-gram: 5.9 

Code line 165:    def validate_key ( self , key ) :
Original:  define the method validate_key with self class instance and key as arguments . 
Translation: define the method _UNK with 0 arguments : self and key .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 166:  if len ( key ) > MEMCACHE_MAX_KEY_LENGTH :
Original:  if length of key is greater than MEMCACHE_MAX_KEY_LENGTH , 
Translation: if length of field is _UNK ,
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 167:               warnings . warn ( 'Cache key will cause errors if used with memcached: '  '%s (longer than %s)' % ( key , MEMCACHE_MAX_KEY_LENGTH ) ,  CacheKeyWarning )
Original:  substitute ' %s ' in string ' Cache key will cause errors if used with memcached: %s ( longer than %s ) ' with key , 
Translation: call the function warnings . warn with 0 arguments : string " _UNK _UNK _UNK is _UNK _UNK _UNK ( %s ' %s ' with _UNK ) ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=28, Reference length=26)
  1-gram: 35.7 
  2-gram: 11.1 
  3-gram:3.8 
  4-gram: 0.0 

Code line 168:   for char in key :
Original:  and MEMCACHE_MAX_KEY_LENGTH , call the function warnings . warn with previous string and CacheKeyWarning as arguments . for every char in key , 
Translation: for every key in template_dirs ,
BLEU = 0.00 (Bravity Penalty=0.059, Length ratio=0.261, Translated length=6, Reference length=23)
  1-gram: 83.3 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 169:               if ord ( char ) < 33 or ord ( char ) == 127 :
Original:  if ascii value of char is smaller than integer 33 or is equal to integer 127 , 
Translation: decrement j by integer 00 , if absolute absolute reminder of the result of the function force_text with 0 arguments x and x evaluates to
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.471, Translated length=25, Reference length=17)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 170:                   warnings . warn ( 'Cache key contains characters that will cause '  'errors if used with memcached: %r' % key ,  CacheKeyWarning )
Original:  substitute ' %r ' in string ' Cache key contains characters that will cause errors if used with memcached: %r ' with key , 
Translation: call the function warnings . warn with 0 arguments : string ' _UNK _UNK _UNK _UNK if _UNK is not a _UNK ,
BLEU = 0.00 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 21.7 
  2-gram: 4.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 171:      def incr_version ( self , key , delta = 1 , version = None ) :
Original:  call the function warnings . warn with previous string and CacheKeyWarning as arguments . define the method incr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 10.01 (Bravity Penalty=0.506, Length ratio=0.595, Translated length=22, Reference length=37)
  1-gram: 68.2 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 5.3 

Code line 172:  if version is None :
Original:  if version is None , 
Translation: if version is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 173:               version = self . version
Original:  substitute self . version for version . 
Translation: substitute self . _UNK for version .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 174:    value = self . get ( key , version = version )
Original:  call the self . get method with arguments key and version set to version , substitute the result for value . 
Translation: call the method self . _UNK with arguments key and value , substitute the result for _UNK .
BLEU = 35.05 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 88.9 
  2-gram: 52.9 
  3-gram:31.2 
  4-gram: 20.0 

Code line 175:  if value is None :
Original:  if value is None , 
Translation: if value is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 176:               raise ValueError ( "Key '%s' not found" % key )
Original:  raise an exception of the class ValueError with string " Key ' %s ' not found " as argument , ' %s ' is substituted for key . 
Translation: raise an ValueError with an argument string " _UNK ' %s ' does ' formated with name .
BLEU = 0.00 (Bravity Penalty=0.574, Length ratio=0.643, Translated length=18, Reference length=28)
  1-gram: 66.7 
  2-gram: 29.4 
  3-gram:6.2 
  4-gram: 0.0 

Code line 177:    self . set ( key , value , version = version + delta )
Original:  call the method self . set with key , value , version incremented by delta , as arguments . 
Translation: call the method self . appendlist with 0 arguments : value , key and _UNK set to default set .
BLEU = 23.59 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 60.0 
  2-gram: 26.3 
  3-gram:16.7 
  4-gram: 11.8 

Code line 178:  self . delete ( key , version = version )
Original:  call the self . delete method with key and version set to version as arguments . 
Translation: call the method self . _UNK with 0 arguments : key and mimetype .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 71.4 
  2-gram: 23.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 179:  return version + delta
Original:  sum version and delta together , return the result . 
Translation: return sum and _UNK ,
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=5, Reference length=10)
  1-gram: 80.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 180:    def decr_version ( self , key , delta = 1 , version = None ) :
Original:  define the method decr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 18.60 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 63.6 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 5.3 

Code line 181:  return self . incr_version ( key , - delta , version )
Original:  call the method self . incr_version with key , negative delta and version as arguments . 
Translation: call the method self . _UNK with 0 arguments : _UNK , _UNK and _UNK , return the result .
BLEU = 21.31 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=20, Reference length=16)
  1-gram: 50.0 
  2-gram: 21.1 
  3-gram:16.7 
  4-gram: 11.8 

Code line 182:    def close ( self , ** kwargs ) :
Original:  define the close method with 2 arguments , self and dictionary of argument pairs kwargs . 
Translation: define the method read with arguments self and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 83.3 
  2-gram: 27.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 183:           """Close the cache connection"""
Original:  docstirng 
Translation: yield " _UNK " " " _UNK " to the " cache " .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=14.000, Translated length=14, Reference length=1)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 184:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 185:  import base64
Original:  import module base64 . 
Translation: import module base00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 186:  from datetime import datetime
Original:  from datetime import datetime into default name space . 
Translation: from datetime import datetime into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 187:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 188:       from django . utils . six . moves import cPickle as pickle
Original:  from django . utils . six . moves import cPickle as pickle , into default namespace . 
Translation: from django . utils . six . moves import _UNK as _UNK into default name space .
BLEU = 54.16 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 76.5 
  2-gram: 56.2 
  3-gram:46.7 
  4-gram: 42.9 

Code line 189:   except ImportError :
Original:  if ImportError exception occurred , 
Translation: if ImportError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 190:       import pickle
Original:  import pickle . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 191:    from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 192:  from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
Original:  from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space . 
Translation: from django . core . serializers . base . _UNK import _UNK and WSGIHandler into default name space .
BLEU = 43.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 193:  from django . db import connections , transaction , router , DatabaseError
Original:  from django . db import connections , transaction , router and DatabaseError into default name space . 
Translation: from django . db import connections , router , transaction and DEFAULT_DB_ALIAS into default name space .
BLEU = 63.38 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 94.1 
  2-gram: 75.0 
  3-gram:53.3 
  4-gram: 42.9 

Code line 194:  from django . db . backends . utils import typecast_timestamp
Original:  from django . db . backends . utils import typecast_timestamp into default name space . 
Translation: from django . db . db . related import _UNK into default name space .
BLEU = 51.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:46.2 
  4-gram: 33.3 

Code line 195:  from django . utils import timezone , six
Original:  from django . utils import timezone and six into default name space . 
Translation: from django . utils import timezone and timezone into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 196:  from django . utils . encoding import force_bytes
Original:  from django . utils . encoding import force_bytes into default name space . 
Translation: from django . utils . encoding import force_bytes into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 197:    class Options ( object ) :
Original:  derive class Options from the base class object . 
Translation: derive the class _UNK from object base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 198:  def __init__ ( self , table ) :
Original:  define the initialization method __init__ with self class instance and table as arguments . 
Translation: define the method __init__ with 0 arguments : self and nodetype .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 75.0 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 199:           self . db_table = table
Original:  substitute table for self . db_table . 
Translation: substitute url_name for self . tokens .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 200:  self . app_label = 'django_cache'
Original:  self . app_label is a string ' django_cache ' . 
Translation: self . label is a string ' _UNK ' .
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 14.3 

Code line 201:  self . model_name = 'cacheentry'
Original:  self . model_name is a string ' cacheentry ' . 
Translation: self . _UNK is a string ' _UNK ' .
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 14.3 

Code line 202:  self . verbose_name = 'cache entry'
Original:  self . verbose_name is a string ' cache entry ' . 
Translation: self . field is an string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 203:  self . verbose_name_plural = 'cache entries'
Original:  self . verbose_name_plural is a string ' cache entries ' . 
Translation: self . _UNK is a string ' _UNK ' .
BLEU = 32.12 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 14.3 

Code line 204:  self . object_name = 'CacheEntry'
Original:  self . object_name is a string ' CacheEntry ' . 
Translation: self . _UNK is a string ' _UNK ' .
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 14.3 

Code line 205:  self . abstract = False
Original:  self . abstract is boolean False . 
Translation: self . _UNK is boolean False .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 206:  self . managed = True
Original:  self . managed is boolean True . 
Translation: self . _UNK is boolean True .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 207:  self . proxy = False
Original:  self . proxy is boolean False . 
Translation: self . translate is boolean False .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 208:      class BaseDatabaseCache ( BaseCache ) :
Original:  derive class BaseDatabaseCache from BaseCache base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8)
  1-gram: 60.0 
  2-gram: 22.2 
  3-gram:12.5 
  4-gram: 0.0 

Code line 209:       def __init__ ( self , table , params ) :
Original:  define the initialization method __init__ with self , table and params as arguments . 
Translation: define the method __init__ with 0 arguments : self , template_string and defaults .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 71.4 
  2-gram: 30.8 
  3-gram:8.3 
  4-gram: 0.0 

Code line 210:           BaseCache . __init__ ( self , params )
Original:  call the BaseCache . __init__ method with self class instance and params as the arguments . 
Translation: call the method _UNK . _UNK with 0 arguments : self and nodelist .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 64.3 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 211:  self . _table = table
Original:  substitute table for self . _table . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 212:   class CacheEntry ( object ) :
Original:  derive CacheEntry class from the object base class . 
Translation: derive the class _UNK from object base class .
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 213:               _meta = Options ( table )
Original:  _meta is class Options class instance initialized with table argument . 
Translation: _UNK is a tuple with 0 elements : source and token .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 214:   self . cache_model_class = CacheEntry
Original:  substitute CacheEntry for self . cache_model_class . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 215:      class DatabaseCache ( BaseDatabaseCache ) :
Original:  derive DatabaseCache from the BaseDatabaseCache base class . 
Translation: derive the class _UNK from the BaseArchive base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8)
  1-gram: 60.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 216:                  def get ( self , key , default = None , version = None ) :
Original:  define the method get with 4 arguments , self class instance , key , default set to None and version set to None . 
Translation: define the method get with 0 arguments : self , key , default set to None and default set to None .
BLEU = 55.18 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 86.4 
  2-gram: 66.7 
  3-gram:55.0 
  4-gram: 42.1 

Code line 217:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key Whit key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.26 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 73.7 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 218:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 219:  db = router . db_for_read ( self . cache_model_class )
Original:  call the method router . db_for_read with self . cache_model_class as argument , substitute the result for db . 
Translation: call the method _UNK . _UNK with argument self . _UNK , substitute the result for qs .
BLEU = 30.41 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 77.8 
  2-gram: 41.2 
  3-gram:25.0 
  4-gram: 13.3 

Code line 220:  table = connections [ db ] . ops . quote_name ( self . _table )
Original:  call the ops . quote_name method with argument self . _table on the value under the db key of connections dictionary , substitute the result for table . 
Translation: get the list of the _UNK . _UNK method with argument self . _UNK , substitute the result for _UNK .
BLEU = 26.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 221:   with connections [ db ] . cursor ( ) as cursor :
Original:  call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor , 
Translation: call the method connection . _UNK . _UNK with the cursor as cursor as argument ,
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23)
  1-gram: 50.0 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 222:               cursor . execute ( "SELECT cache_key, value, expires FROM %s "  "WHERE cache_key = %%s" % table , [ key ] )
Original:  call the method cursor . execute with string " SELECT cache_key , value , expires FROM %s WHERE cache_key = %%s " as argument , 
Translation: call the method importlib . _UNK with 0 arguments : string " _UNK " , _UNK " _UNK " _UNK " _UNK " ,
BLEU = 0.00 (Bravity Penalty=0.959, Length ratio=0.960, Translated length=24, Reference length=25)
  1-gram: 41.7 
  2-gram: 13.0 
  3-gram:4.5 
  4-gram: 0.0 

Code line 223:  row = cursor . fetchone ( )
Original:  substitute the ' %s ' with table and list containing key , respectively . call the cursor . fetchone method , substitute the result for row . 
Translation: call the method cursor . _UNK , substitute the result for cursor .
BLEU = 13.28 (Bravity Penalty=0.341, Length ratio=0.481, Translated length=13, Reference length=27)
  1-gram: 84.6 
  2-gram: 50.0 
  3-gram:27.3 
  4-gram: 20.0 

Code line 224:   if row is None :
Original:  if row is None , 
Translation: if finder is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 225:               return default
Original:  return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 226:   now = timezone . now ( )
Original:  call the timezone . now function , substitute the result for now . 
Translation: call the function timezone . now , substitute the result for now .
BLEU = 63.60 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:54.5 
  4-gram: 40.0 

Code line 227:  expires = row [ 2 ]
Original:  substitute third element of row list for expires . 
Translation: substitute first element of row for param .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 228:  if connections [ db ] . features . needs_datetime_string_cast and not isinstance ( expires , datetime ) :
Original:  if features . needs_datetime_string_cast field of the object represented stored under the db key of connections dictionary is true , 
Translation: if connection . _UNK is true and _UNK is an instance of _UNK . _UNK class _UNK under _UNK . _UNK type of _UNK is
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=25, Reference length=20)
  1-gram: 28.0 
  2-gram: 4.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 229:                  expires = typecast_timestamp ( str ( expires ) )
Original:  and expires is not an instance of datetime . convert expires to a string , use it as argument for the call to the function typecast_timestamp , substitute the result for expires . 
Translation: convert is an instance of the class _UNK ( ) is a string .
BLEU = 0.00 (Bravity Penalty=0.257, Length ratio=0.424, Translated length=14, Reference length=33)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 230:   if expires < now :
Original:  if expires is lesser than now , 
Translation: if now is smaller than zero ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 231:               db = router . db_for_write ( self . cache_model_class )
Original:  call the method router . db_for_write with argument self . cache_model_class , substitute the result for db . 
Translation: call the method _UNK . _UNK with argument self . _UNK , substitute the result for qs .
BLEU = 41.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 20.0 

Code line 232:  with connections [ db ] . cursor ( ) as cursor :
Original:  call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor , 
Translation: call the method connection . _UNK . _UNK with the cursor as cursor as argument ,
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23)
  1-gram: 50.0 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 233:                   cursor . execute ( "DELETE FROM %s "  "WHERE cache_key = %%s" % table , [ key ] )
Original:  call the method cursor . execute with string " DELETE FROM %s WHERE cache_key = %%s " as argument , 
Translation: call the method importlib . _UNK with the argument " _UNK " , " _UNK " with the first element of _UNK and value " ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=26, Reference length=20)
  1-gram: 34.6 
  2-gram: 8.0 
  3-gram:4.2 
  4-gram: 0.0 

Code line 234:   return default
Original:  substitute the ' %s ' with table and list containing key , respectively . return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=0.009, Length ratio=0.176, Translated length=3, Reference length=17)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 235:   value = connections [ db ] . ops . process_clob ( row [ 1 ] )
Original:  call the method ops . process_clob with second element of row as argument , on the object under the db key of connections dictionary , substitute the result for value . 
Translation: call the method lineno_comment_map . _UNK with element of value under the key key of the options dictionary ,
BLEU = 0.00 (Bravity Penalty=0.532, Length ratio=0.613, Translated length=19, Reference length=31)
  1-gram: 78.9 
  2-gram: 33.3 
  3-gram:5.9 
  4-gram: 0.0 

Code line 236:  return pickle . loads ( base64 . b64decode ( force_bytes ( value ) ) )
Original:  call the function force_bytes with argument value , use the result as an argument for the call to the method base64 . b64decode , 
Translation: call the function _UNK . _UNK with an argument value of the function _UNK , called with an argument ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=20, Reference length=24)
  1-gram: 60.0 
  2-gram: 21.1 
  3-gram:5.6 
  4-gram: 0.0 

Code line 237:    def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  use the result as the argument for the function call to the pickle . loads , return the result . define the method set with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , _UNK set to None , as the default exception .
BLEU = 0.00 (Bravity Penalty=0.336, Length ratio=0.478, Translated length=22, Reference length=46)
  1-gram: 68.2 
  2-gram: 23.8 
  3-gram:10.0 
  4-gram: 0.0 

Code line 238:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 239:  self . validate_key ( key )
Original:  call the method self . validate_key with key as argument . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 38.06 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:27.3 
  4-gram: 20.0 

Code line 240:  self . _base_set ( 'set' , key , value , timeout )
Original:  call the method self . _base_set with string ' set ' , key , value and timeout as arguments . 
Translation: call the method self . _UNK with 0 arguments : string ' _UNK ' , value , _UNK and e .
BLEU = 25.73 (Bravity Penalty=1.000, Length ratio=1.050, Translated length=21, Reference length=20)
  1-gram: 71.4 
  2-gram: 35.0 
  3-gram:15.8 
  4-gram: 11.1 

Code line 241:    def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , length set to None ,
BLEU = 0.00 (Bravity Penalty=0.589, Length ratio=0.654, Translated length=17, Reference length=26)
  1-gram: 70.6 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 0.0 

Code line 242:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 243:  self . validate_key ( key )
Original:  call the method self . validate_key with key as argument . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 38.06 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:27.3 
  4-gram: 20.0 

Code line 244:  return self . _base_set ( 'add' , key , value , timeout )
Original:  call the method self . _base_set with string ' add ' , key , value and timeout as arguments , return the result . 
Translation: call the method self . _UNK with 0 arguments : value , string ' _UNK ' , return the result .
BLEU = 35.59 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 81.0 
  2-gram: 50.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 245:    def _base_set ( self , mode , key , value , timeout = DEFAULT_TIMEOUT ) :
Original:  define the protected method _base_set with 4 arguments , self class instance , key , value and timeout set to DEFAULT_TIMEOUT . 
Translation: define the method _UNK with 0 arguments : self , _UNK , key , value and _UNK as arguments .
BLEU = 21.78 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 65.0 
  2-gram: 26.3 
  3-gram:16.7 
  4-gram: 11.8 

Code line 246:           timeout = self . get_backend_timeout ( timeout )
Original:  call the method self . get_backend_timeout with argument timeout , substitute the result for timeout . 
Translation: call the method self . _UNK with an argument exclude , substitute the result for
BLEU = 48.18 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:46.2 
  4-gram: 33.3 

Code line 247:  db = router . db_for_write ( self . cache_model_class )
Original:  call the method router . db_for_write with argument self . cache_model_class , substitute the result for db . 
Translation: call the method _UNK . _UNK with argument self . _UNK , substitute the result for qs .
BLEU = 41.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 20.0 

Code line 248:  table = connections [ db ] . ops . quote_name ( self . _table )
Original:  call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary , substitute the result for table . 
Translation: get the list of the _UNK . _UNK method with argument self . _UNK , substitute the result for _UNK .
BLEU = 26.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 249:   with connections [ db ] . cursor ( ) as cursor :
Original:  call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor , 
Translation: call the method connection . _UNK . _UNK with the cursor as cursor as argument ,
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23)
  1-gram: 50.0 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 250:               cursor . execute ( "SELECT COUNT(*) FROM %s" % table )
Original:  call the method cursor . execute with string " SELECT COUNT ( * ) FROM %s " as argument , substitute the ' %s ' with table . 
Translation: call the the function importlib . _UNK with an argument string " _UNK ( _UNK ) ) " formated with _UNK ,
BLEU = 0.00 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=22, Reference length=28)
  1-gram: 59.1 
  2-gram: 9.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 251:  num = cursor . fetchone ( ) [ 0 ]
Original:  fetch one record from the database cursor points at , substitute the first element of return value for num . 
Translation: call the method operator . _UNK with an argument value , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 41.2 
  2-gram: 12.5 
  3-gram:6.7 
  4-gram: 0.0 

Code line 252:  now = timezone . now ( )
Original:  call the timezone . now function , substitute the result for now . 
Translation: call the function timezone . now , substitute the result for now .
BLEU = 63.60 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:54.5 
  4-gram: 40.0 

Code line 253:  now = now . replace ( microsecond = 0 )
Original:  call the function now . replace with microseconds set to integer 0 , substitute the result for now . 
Translation: call the function bmatch . replace with the occurrences with the argument and forms_valid is integer 0 .
BLEU = 0.00 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 55.6 
  2-gram: 29.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 254:  if timeout is None :
Original:  if timeout is None , 
Translation: if exclude is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 255:                   exp = datetime . max
Original:  substitute the datetime . max for exp . 
Translation: substitute hashlib . literal for url_fields .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 256:   elif settings . USE_TZ :
Original:  otherwise is settings . USE_TI is true , 
Translation: otherwise if settings . USE_L00N is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 257:                   exp = datetime . utcfromtimestamp ( timeout )
Original:  call the function datetime . utcfromtimestamp with argument timeout , substitute it for exp . 
Translation: call the function datetime . _UNK with argument as argument .
BLEU = 29.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 258:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 259:                   exp = datetime . fromtimestamp ( timeout )
Original:  call the function datetime . fromtimestamp with argument timeout , substitute it for exp . 
Translation: call the function datetime . _UNK with argument as argument .
BLEU = 29.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 260:   exp = exp . replace ( microsecond = 0 )
Original:  call the exp . replace with microsecond set to integer 0 , substitute the result for exp . 
Translation: replace the absolute value of the _UNK with _UNK as an argument , substitute the result for all_issues .
BLEU = 21.95 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18)
  1-gram: 47.4 
  2-gram: 22.2 
  3-gram:17.6 
  4-gram: 12.5 

Code line 261:  if num > self . _max_entries :
Original:  if num is greater than self . _max_entries , 
Translation: if self . _UNK is greater than integer 0 ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 262:                   self . _cull ( db , cursor , now )
Original:  call the method self . _cull with db , cursor and now as arguments . 
Translation: call the method self . _UNK with 0 arguments : record , _UNK and db .
BLEU = 27.88 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 68.8 
  2-gram: 26.7 
  3-gram:21.4 
  4-gram: 15.4 

Code line 263:   pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
Original:  call the method pickle . dumps with value and pickle . HIGHEST_PROTOCOL as arguments , substitute it for pickled . 
Translation: call the function _UNK . _UNK with arguments _UNK and _UNK . _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 55.0 
  2-gram: 10.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 264:  b64encoded = base64 . b64encode ( pickled )
Original:  call the method base64 . b64encode with argument pickled , substitute the result for b64encoded . 
Translation: call the function base00 . _UNK with argument _UNK , substitute the result for _UNK
BLEU = 30.29 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:23.1 
  4-gram: 16.7 

Code line 265:    if six . PY3 :
Original:  if six . PY3 is true , 
Translation: if six . PY0 is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 266:                   b64encoded = b64encoded . decode ( 'latin1' )
Original:  call the method b64encoded . decode with string ' latin1 ' as argument , substitute the result for b64encoded . 
Translation: call the method _UNK . decode with string ' _UNK ' as an argument , substitute the result for _UNK .
BLEU = 48.82 (Bravity Penalty=1.000, Length ratio=1.050, Translated length=21, Reference length=20)
  1-gram: 81.0 
  2-gram: 60.0 
  3-gram:42.1 
  4-gram: 27.8 

Code line 267:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 268:                       with transaction . atomic ( using = db ) :
Original:  with return value of the function transaction . atomic with using set to db as arguments , perform the following , 
Translation: call the method . method with with an argument source , perform set to fp , perform the result .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 50.0 
  2-gram: 15.8 
  3-gram:5.6 
  4-gram: 0.0 

Code line 269:                       cursor . execute ( "SELECT cache_key, expires FROM %s "  "WHERE cache_key = %%s" % table , [ key ] )
Original:  call the method cursor . execute with string " SELECT cache_key , expires FROM %s WHERE cache_key = %%s " as argument , 
Translation: call the method importlib . _UNK with 0 arguments : string " _UNK " , _UNK " _UNK " and _UNK as a tuple containing elements of the function _UNK " ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.391, Translated length=32, Reference length=23)
  1-gram: 34.4 
  2-gram: 9.7 
  3-gram:3.3 
  4-gram: 0.0 

Code line 270:  result = cursor . fetchone ( )
Original:  substitute the ' %s ' with table and list containing key , respectively . fetch one entry from the database that cursor points at , substitute it for the result . 
Translation: call the method cursor . _UNK , substitute the result for result .
BLEU = 0.00 (Bravity Penalty=0.250, Length ratio=0.419, Translated length=13, Reference length=31)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 271:  if result :
Original:  if result is true , 
Translation: if result is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 272:                           current_expires = result [ 1 ]
Original:  substitute the second element of result for current_expires . 
Translation: substitute first element of _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 62.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 273:  if ( connections [ db ] . features . needs_datetime_string_cast and not  isinstance ( current_expires , datetime ) ) :
Original:  if features . needs_datetime_string_cast field of object under the db key of connections dictionary is true and current_expires is not an instance of datetime object . 
Translation: if connection is true and _UNK is _UNK , _UNK return value of the _UNK . _UNK is _UNK None is _UNK ,
BLEU = 0.00 (Bravity Penalty=0.878, Length ratio=0.885, Translated length=23, Reference length=26)
  1-gram: 34.8 
  2-gram: 9.1 
  3-gram:4.8 
  4-gram: 0.0 

Code line 274:                               current_expires = typecast_timestamp ( str ( current_expires ) )
Original:  convert current_expires to a string , use it as the argument for the call to the function typecast_timestamp , substitute the result for current_expires . 
Translation: _UNK is an instance of _UNK class , created with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=0.456, Length ratio=0.560, Translated length=14, Reference length=25)
  1-gram: 21.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 275:    exp = connections [ db ] . ops . value_to_db_datetime ( exp )
Original:  on the object under the db key of connections dictionary call the method ops . value_to_db_datetime with argument exp , substitute the result for the exp . 
Translation: call the method os . _UNK . _UNK with an argument _UNK , substitute the result for _UNK .
BLEU = 18.41 (Bravity Penalty=0.656, Length ratio=0.704, Translated length=19, Reference length=27)
  1-gram: 63.2 
  2-gram: 33.3 
  3-gram:23.5 
  4-gram: 12.5 

Code line 276:  if result and ( mode == 'set' or ( mode == 'add' and current_expires < now ) ) :
Original:  if mode equals to string ' add ' and current_expires is lesser than now , or mode equals to string ' set ' , and result is true , 
Translation: if result equals to boolean False and result of the function _UNK with 0 arguments : result of the function _UNK ' and _UNK set to integer 0 ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=29, Reference length=29)
  1-gram: 34.5 
  2-gram: 10.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 277:                           cursor . execute ( "UPDATE %s SET value = %%s, expires = %%s "  "WHERE cache_key = %%s" % table ,  [ b64encoded , exp , key ] )
Original:  call the method cursor . execute with string " UPDATE %s SET value = %%s , expires = %%s WHERE cache_key = %%s " as argument , 
Translation: call the method importlib . _UNK with 0 arguments : string " _UNK _UNK _UNK _UNK " _UNK " _UNK " _UNK " _UNK " ,
BLEU = 0.00 (Bravity Penalty=0.962, Length ratio=0.963, Translated length=26, Reference length=27)
  1-gram: 34.6 
  2-gram: 12.0 
  3-gram:4.2 
  4-gram: 0.0 

Code line 278:   else :
Original:  substitute the ' %s ' with table and 3 elements of a list: b64encoded , exp and key , respectively . if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=0.001, Length ratio=0.125, Translated length=3, Reference length=24)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 279:                           cursor . execute ( "INSERT INTO %s (cache_key, value, expires) "  "VALUES (%%s, %%s, %%s)" % table ,  [ key , b64encoded , exp ] )
Original:  call the method cursor . execute with string " INSERT INTO %s ( cache_key , value , expires ) VALUES ( %%s , %%s , %%s ) " , 
Translation: call the method importlib . _UNK with 0 arguments : string " _UNK ( _UNK ) _UNK " and _UNK converted of _UNK " ,
BLEU = 0.00 (Bravity Penalty=0.852, Length ratio=0.862, Translated length=25, Reference length=29)
  1-gram: 44.0 
  2-gram: 16.7 
  3-gram:4.3 
  4-gram: 0.0 

Code line 280:     except DatabaseError :
Original:  substitute the ' %s ' with table and 3 elements of a list: b64encoded , exp and key , respectively . if DatabaseError exception is caught , 
Translation: if InputStreamExhausted exception is caught ,
BLEU = 1.62 (Bravity Penalty=0.030, Length ratio=0.222, Translated length=6, Reference length=27)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 281:                    return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 282:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 283:                   return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 284:      def delete ( self , key , version = None ) :
Original:  define the method delete with self class instance , key and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and mimetype set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 76.5 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 0.0 

Code line 285:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 286:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 287:   db = router . db_for_write ( self . cache_model_class )
Original:  call the method router . db_for_write with argument self . cache_model_class , substitute the result for db . 
Translation: call the method _UNK . _UNK with argument self . _UNK , substitute the result for qs .
BLEU = 41.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 20.0 

Code line 288:  table = connections [ db ] . ops . quote_name ( self . _table )
Original:  call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary , substitute the result for table . 
Translation: get the list of the _UNK . _UNK method with argument self . _UNK , substitute the result for _UNK .
BLEU = 26.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 289:   with connections [ db ] . cursor ( ) as cursor :
Original:  call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor , 
Translation: call the method connection . _UNK . _UNK with the cursor as cursor as argument ,
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23)
  1-gram: 50.0 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 290:               cursor . execute ( "DELETE FROM %s WHERE cache_key = %%s" % table , [ key ] )
Original:  call the method cursor . execute with string " DELETE FROM %s WHERE cache_key = %%s " as argument , 
Translation: call the method importlib . _UNK with the argument " _UNK ( _UNK ) " _UNK " _UNK " _UNK " d " ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=24, Reference length=20)
  1-gram: 37.5 
  2-gram: 8.7 
  3-gram:4.5 
  4-gram: 0.0 

Code line 291:     def has_key ( self , key , version = None ) :
Original:  substitute the ' %s ' with table and list containing key , respectively . define the method has_key with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and default set to None .
BLEU = 0.00 (Bravity Penalty=0.414, Length ratio=0.531, Translated length=17, Reference length=32)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 292:           key = self . make_key ( key , version = version )
Original:  call the self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 25.38 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 73.7 
  2-gram: 38.9 
  3-gram:17.6 
  4-gram: 12.5 

Code line 293:  self . validate_key ( key )
Original:  call the self . validate_key method with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 294:   db = router . db_for_read ( self . cache_model_class )
Original:  call the method router . db_for_write with argument self . cache_model_class , substitute the result for db . 
Translation: call the method _UNK . _UNK with argument self . _UNK , substitute the result for qs .
BLEU = 41.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 20.0 

Code line 295:  table = connections [ db ] . ops . quote_name ( self . _table )
Original:  call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary , substitute the result for table . 
Translation: get the list of the _UNK . _UNK method with argument self . _UNK , substitute the result for _UNK .
BLEU = 26.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 296:   if settings . USE_TZ :
Original:  if settings . USE_TZ is true , 
Translation: if settings . USE_TZ is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 297:               now = datetime . utcnow ( )
Original:  call the function datetime . utcnow , substitute the result for now . 
Translation: call the function datetime . _UNK , substitute the result for now .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 298:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 299:               now = datetime . now ( )
Original:  call the function datetime . now , substitute the result to now . 
Translation: call the function datetime . now , substitute the result for now .
BLEU = 79.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 70.0 

Code line 300:   now = now . replace ( microsecond = 0 )
Original:  call the method now . replace with the argument microsecond set to integer 0 , substitute the result for now . 
Translation: call the function bmatch . replace with the occurrences with the argument and forms_valid is integer 0 .
BLEU = 19.29 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 61.1 
  2-gram: 35.3 
  3-gram:18.8 
  4-gram: 6.7 

Code line 301:   with connections [ db ] . cursor ( ) as cursor :
Original:  call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor , 
Translation: call the method connection . _UNK . _UNK with the cursor as cursor as argument ,
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23)
  1-gram: 50.0 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 302:               cursor . execute ( "SELECT cache_key FROM %s "  "WHERE cache_key = %%s and expires > %%s" % table ,  [ key , connections [ db ] . ops . value_to_db_datetime ( now ) ] )
Original:  call the method cursor . execute with string " SELECT cache_key FROM %s WHERE cache_key = %%s and expires > %%s " as argument , 
Translation: call the method s . _UNK with the argument " _UNK " _UNK _UNK _UNK " _UNK " _UNK " _UNK " _UNK " _UNK " ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.080, Translated length=27, Reference length=25)
  1-gram: 33.3 
  2-gram: 7.7 
  3-gram:4.0 
  4-gram: 0.0 

Code line 303:  return cursor . fetchone ( ) is not None
Original:  substitute the ' %s ' with table and list containing return value of the method call ops . value_to_db_datetime with argument now on the object under the db key of connections dictionary , respectively . if exists return next entry from the database that cursor points at . 
Translation: call the method cursor . _UNK , if the result is not None ,
BLEU = 0.00 (Bravity Penalty=0.088, Length ratio=0.292, Translated length=14, Reference length=48)
  1-gram: 57.1 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 304:     def _cull ( self , db , cursor , now ) :
Original:  define the protected method _cull with self class instance , db , cursor and now as arguments . 
Translation: define the method _UNK with 0 arguments : self , content , content and traceback .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18)
  1-gram: 62.5 
  2-gram: 6.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 305:           if self . _cull_frequency == 0 :
Original:  if self . _cull_frequency equals to integer 0 . 
Translation: if self . _UNK equals integer 0 ,
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 306:               self . clear ( )
Original:  call the self . clear method . 
Translation: call the method self . clear .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:20.0 
  4-gram: 0.0 

Code line 307:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 308:                now = now . replace ( tzinfo = None )
Original:  call the method now . replace with argument tzinfo set to None , substitute it for now . 
Translation: call the method timedelta . group with an argument maxsize set to integer 0 , substitute the result for now .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=21, Reference length=18)
  1-gram: 61.9 
  2-gram: 30.0 
  3-gram:10.5 
  4-gram: 0.0 

Code line 309:  table = connections [ db ] . ops . quote_name ( self . _table )
Original:  call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary , substitute the result for table . 
Translation: get the list of the _UNK . _UNK method with argument self . _UNK , substitute the result for _UNK .
BLEU = 26.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 310:  cursor . execute ( "DELETE FROM %s WHERE expires < %%s" % table ,  [ connections [ db ] . ops . value_to_db_datetime ( now ) ] )
Original:  call the method cursor . execute with string " DELETE FROM %s WHERE expires < %%s " as argument , 
Translation: call the method s . _UNK with an argument " _UNK _UNK _UNK _UNK _UNK if _UNK ) " _UNK " _UNK " _UNK " ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=26, Reference length=20)
  1-gram: 34.6 
  2-gram: 8.0 
  3-gram:4.2 
  4-gram: 0.0 

Code line 311:  cursor . execute ( "SELECT COUNT(*) FROM %s" % table )
Original:  substitute the ' %s ' with table and list containing return value of the method call ops . value_to_db_datetime with argument now on the object under the db key of connections dictionary , respectively . call the method cursor . execute with string " SELECT COUNT ( * ) FROM %s " as argument , substitute the ' %s ' with table . 
Translation: call the the function importlib . _UNK with an argument string " _UNK ( _UNK ) ) " formated with _UNK ,
BLEU = 0.00 (Bravity Penalty=0.155, Length ratio=0.349, Translated length=22, Reference length=63)
  1-gram: 59.1 
  2-gram: 9.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 312:  num = cursor . fetchone ( ) [ 0 ]
Original:  fetch next entry for the database that cursor points into , substitute first element of it for num . 
Translation: call the method operator . _UNK with an argument value , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 29.4 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 313:  if num > self . _max_entries :
Original:  if num is greater than self . _max_entries , 
Translation: if self . _UNK is greater than integer 0 ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 314:                   cull_num = num // self . _cull_frequency
Original:  divide num by self . _cull_frequency , floor the result and substitute it for cull_num . 
Translation: substitute _UNK with self . _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.459, Length ratio=0.562, Translated length=9, Reference length=16)
  1-gram: 55.6 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 315:  cursor . execute (  connections [ db ] . ops . cache_key_culling_sql ( ) % table ,  [ cull_num ] )
Original:  evaluate the method connections [ db ] . ops . cache_key_culling_sql , evaluate the result by table modulus , call the method cursor . execute , 
Translation: call the method os . _UNK with argument , use the result as element of the call to the _UNK . _UNK method ,
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=24, Reference length=26)
  1-gram: 45.8 
  2-gram: 13.0 
  3-gram:4.5 
  4-gram: 0.0 

Code line 316:  cursor . execute ( "DELETE FROM %s "  "WHERE cache_key < %%s" % table ,  [ cursor . fetchone ( ) [ 0 ] ] )
Original:  with previous result and list containing cull_num , respectively as arguments . call the method cursor . execute with string " DELETE FROM %s WHERE cache_key < %%s " as argument , 
Translation: call the method importlib . _UNK with an argument " _UNK " _UNK " _UNK " _UNK " _UNK " _UNK " _UNK " ,
BLEU = 0.00 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32)
  1-gram: 36.0 
  2-gram: 8.3 
  3-gram:4.3 
  4-gram: 0.0 

Code line 317:      def clear ( self ) :
Original:  substitute the ' %s ' with table and list containing first element of cursor . fetchone method , respectively . define the method clear with argument self . 
Translation: define the method clear with an argument self .
BLEU = 7.23 (Bravity Penalty=0.121, Length ratio=0.321, Translated length=9, Reference length=28)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 318:           db = router . db_for_write ( self . cache_model_class )
Original:  call the method router . db_for_write with argument self . cache_model_class , substitute the result for db . 
Translation: call the method _UNK . _UNK with argument self . _UNK , substitute the result for qs .
BLEU = 41.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 20.0 

Code line 319:  table = connections [ db ] . ops . quote_name ( self . _table )
Original:  call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary , substitute the result for table . 
Translation: get the list of the _UNK . _UNK method with argument self . _UNK , substitute the result for _UNK .
BLEU = 26.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 320:  with connections [ db ] . cursor ( ) as cursor :
Original:  call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor , 
Translation: call the method connection . _UNK . _UNK with the cursor as cursor as argument ,
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23)
  1-gram: 50.0 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 321:               cursor . execute ( 'DELETE FROM %s' % table )
Original:  call the method cursor . execute with string " DELETE FROM %s " as argument , substitute the ' %s ' with table . 
Translation: call the function importlib . _UNK with an argument string ' _UNK ' , where the _UNK in _UNK .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=20, Reference length=24)
  1-gram: 55.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 322:       class CacheClass ( DatabaseCache ) :
Original:  derive the class CacheClass from the DatabaseCache base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 323:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 324:   from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
Original:  from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space . 
Translation: from django . core . serializers . base . _UNK import _UNK and WSGIHandler into default name space .
BLEU = 43.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 325:    class DummyCache ( BaseCache ) :
Original:  derive the class DummyCache from the base class BaseCache . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 326:       def __init__ ( self , host , * args , ** kwargs ) :
Original:  define initialization method __init__ with 4 arguments: self , host , list of arguments args and dictionary of arguments kwargs . 
Translation: define the method __init__ with arguments self , unpacked list args and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.732, Length ratio=0.762, Translated length=16, Reference length=21)
  1-gram: 81.2 
  2-gram: 33.3 
  3-gram:7.1 
  4-gram: 0.0 

Code line 327:           BaseCache . __init__ ( self , * args , ** kwargs )
Original:  call the BaseCache initialization method __init__ with 3 arguments self , list of arguments args and dictionary of arguments kwargs . 
Translation: call the method __init__ . _UNK with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 73.7 
  2-gram: 27.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 328:    def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method add with 5 arguments: self , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , length set to None ,
BLEU = 0.00 (Bravity Penalty=0.703, Length ratio=0.739, Translated length=17, Reference length=23)
  1-gram: 64.7 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 329:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute it for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 23.97 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 68.4 
  2-gram: 33.3 
  3-gram:17.6 
  4-gram: 12.5 

Code line 330:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 331:  return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 332:    def get ( self , key , default = None , version = None ) :
Original:  define the method get with 4 arguments: self , key , default set to None and version set to None . 
Translation: define the method get with 0 arguments : self , key , default set to None and default set to None .
BLEU = 63.84 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21)
  1-gram: 81.8 
  2-gram: 71.4 
  3-gram:60.0 
  4-gram: 47.4 

Code line 333:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute it for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 23.97 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 68.4 
  2-gram: 33.3 
  3-gram:17.6 
  4-gram: 12.5 

Code line 334:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 335:  return default
Original:  return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 336:    def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set with 5 arguments: self , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , _UNK set to None , as the default exception .
BLEU = 0.00 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 54.5 
  2-gram: 23.8 
  3-gram:10.0 
  4-gram: 0.0 

Code line 337:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute it for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 23.97 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 68.4 
  2-gram: 33.3 
  3-gram:17.6 
  4-gram: 12.5 

Code line 338:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 339:    def delete ( self , key , version = None ) :
Original:  define the method delete with 3 arguments: self , key , and version set to None . 
Translation: define the method _UNK with 0 arguments : self , key and mimetype set to None .
BLEU = 27.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 70.6 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 340:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute it for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 23.97 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 68.4 
  2-gram: 33.3 
  3-gram:17.6 
  4-gram: 12.5 

Code line 341:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 342:    def get_many ( self , keys , version = None ) :
Original:  define the method get_many with 3 arguments: self , keys , and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK and dklen set to None .
BLEU = 24.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 64.7 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 7.1 

Code line 343:           return { }
Original:  return an empty dictionary . 
Translation: return is empty dictionary .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 344:    def has_key ( self , key , version = None ) :
Original:  define the method has_key with 3 arguments: self , key , and version set to None . 
Translation: define the method _UNK with 0 arguments : self , key and default set to None .
BLEU = 27.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 70.6 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 345:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute it for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 23.97 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 68.4 
  2-gram: 33.3 
  3-gram:17.6 
  4-gram: 12.5 

Code line 346:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 347:  return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 348:    def set_many ( self , data , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set_many with 4 arguments: self , data , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK set to None , _UNK set to None .
BLEU = 20.94 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 65.0 
  2-gram: 36.8 
  3-gram:16.7 
  4-gram: 5.9 

Code line 349:           pass
Original:  do nothing 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=3, Reference length=2)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 350:    def delete_many ( self , keys , version = None ) :
Original:  define the method delete_many with 3 arguments: self , keys , and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK and dklen set to None .
BLEU = 24.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 64.7 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 7.1 

Code line 351:           pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 352:    def clear ( self ) :
Original:  define the method clear with argument self . 
Translation: define the method clear with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 353:           pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 354:       class CacheClass ( DummyCache ) :
Original:  derive the class CacheClass from the DummyCache base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 355:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 356:  import errno
Original:  import module errno . 
Translation: import module errno .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 357:  import glob
Original:  import module glob . 
Translation: import module glob .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 358:  import hashlib
Original:  import module hashlib . 
Translation: import module hashlib .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 359:  import io
Original:  import module io . 
Translation: import io .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 360:  import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 361:  import random
Original:  import module random . 
Translation: import module random .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 362:  import tempfile
Original:  import module tempfile . 
Translation: import module tempfile .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 363:  import time
Original:  import module time . 
Translation: import module time .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 364:  import zlib
Original:  import module zlib . 
Translation: import module zlib .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 365:  from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
Original:  from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space . 
Translation: from django . core . serializers . base . _UNK import _UNK and WSGIHandler into default name space .
BLEU = 43.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 366:  from django . core . files . move import file_move_safe
Original:  from django . core . files . move import file_move_safe into default name space . 
Translation: from django . core . files . files import _UNK into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 367:  from django . utils . encoding import force_bytes
Original:  from django . utils . encoding import force_bytes into default name space . 
Translation: from django . utils . encoding import force_bytes into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 368:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 369:       from django . utils . six . moves import cPickle as pickle
Original:  from django . utils . six . moves import cPickle as pickle into default name space . 
Translation: from django . utils . six . moves import _UNK as _UNK into default name space .
BLEU = 70.86 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 88.2 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 57.1 

Code line 370:   except ImportError :
Original:  if ImportError exception is caught , 
Translation: if ImportError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 371:       import pickle
Original:  import pickle . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 372:     class FileBasedCache ( BaseCache ) :
Original:  derive the class FileBasedCache from BaseCache base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 0.0 

Code line 373:       cache_suffix = '.djcache'
Original:  cache_suffix is a string ' . djcache ' . 
Translation: _UNK is a string ' _UNK ' .
BLEU = 36.28 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 374:   def __init__ ( self , dir , params ) :
Original:  define the initialization method __init__ with arguments: self class instance , dir and params . 
Translation: define the method __init__ with 0 arguments : self , _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 375:           super ( FileBasedCache , self ) . __init__ ( params )
Original:  call method __init__ with argument params from the base class of the FileBaseCache . 
Translation: call the method __init__ from the base class of the class _UNK , with _UNK and list .
BLEU = 32.23 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=18, Reference length=14)
  1-gram: 61.1 
  2-gram: 35.3 
  3-gram:25.0 
  4-gram: 20.0 

Code line 376:  self . _dir = os . path . abspath ( dir )
Original:  get absolute directory path of dir , substitute it for self . _dir . 
Translation: get the absolute directory of the _UNK _UNK _UNK , _UNK the self . _UNK object , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.643, Translated length=23, Reference length=14)
  1-gram: 43.5 
  2-gram: 13.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 377:  self . _createdir ( )
Original:  call the self . _createdir method . 
Translation: call the method self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 378:    def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , length set to None ,
BLEU = 0.00 (Bravity Penalty=0.589, Length ratio=0.654, Translated length=17, Reference length=26)
  1-gram: 70.6 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 0.0 

Code line 379:           if self . has_key ( key , version ) :
Original:  evaluate method self . has_key with key and version as arguments , if the result is true , 
Translation: call the method self . _UNK with 0 arguments : key and level ,
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=14, Reference length=18)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 380:               return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 381:   self . set ( key , value , timeout , version )
Original:  call the method self . set with key , value , timeout and version as arguments . 
Translation: call the method self . _UNK with 0 arguments : value , key , _UNK and value .
BLEU = 28.25 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 72.2 
  2-gram: 35.3 
  3-gram:18.8 
  4-gram: 13.3 

Code line 382:  return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 383:    def get ( self , key , default = None , version = None ) :
Original:  define the method get with 5 arguments , self class instance , key , default set to None and version set to None . 
Translation: define the method get with 0 arguments : self , key , default set to None and default set to None .
BLEU = 55.18 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 86.4 
  2-gram: 66.7 
  3-gram:55.0 
  4-gram: 42.1 

Code line 384:           fname = self . _key_to_file ( key , version )
Original:  call the function self . _key_to_file with key and version as arguments , substitute it for fname . 
Translation: call the method self . _UNK with 0 arguments : key and default_list , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 60.0 
  2-gram: 21.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 385:  if os . path . exists ( fname ) :
Original:  if fname file path exists , 
Translation: if _UNK path exists ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 386:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 387:                   with io . open ( fname , 'rb' ) as f :
Original:  with return value of the function io . open with fname and string ' rb ' as arguments , named as f , 
Translation: open the function named ' with file mode and help as an file ,
BLEU = 0.00 (Bravity Penalty=0.526, Length ratio=0.609, Translated length=14, Reference length=23)
  1-gram: 64.3 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 388:                       if not self . _is_expired ( f ) :
Original:  evaluate self . _is_expired method with f as argument , if the result is false , 
Translation: if self . _UNK is false with an argument self . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16)
  1-gram: 61.5 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 389:                           return pickle . loads ( zlib . decompress ( f . read ( ) ) )
Original:  call f . read function , use the result as the argument for zlib . decompress function call , call the pickle . loads function with the previous result as argument , return the result . 
Translation: call the method _UNK . _UNK with an argument sum of the result of the function mark_safe , called with an argument context .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=24, Reference length=36)
  1-gram: 50.0 
  2-gram: 8.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 390:     except IOError as e :
Original:  if IOError , renamed to e , exception is caught , 
Translation: if _UNK , renamed to e , exception is caught ,
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 391:                   if e . errno == errno . ENOENT :
Original:  if e . errno equals to errno . ENOENT , 
Translation: if e . errno equals CommandError . _UNK ,
BLEU = 43.44 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 392:                       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 393:     return default
Original:  return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 394:    def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , _UNK set to None , as the default exception .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26)
  1-gram: 59.1 
  2-gram: 19.0 
  3-gram:10.0 
  4-gram: 0.0 

Code line 395:           self . _createdir ( )
Original:  call the self . _createdir method . 
Translation: call the method self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 396:  fname = self . _key_to_file ( key , version )
Original:  call the function self . _key_to_file with key and version as arguments , substitute it for fname . 
Translation: call the method self . _UNK with 0 arguments : key and default_list , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 60.0 
  2-gram: 21.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 397:  self . _cull ( )
Original:  call the method self . _cull . 
Translation: call the method self . _UNK .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 398:  fd , tmp_path = tempfile . mkstemp ( dir = self . _dir )
Original:  call the method tempfile . mkstemp with dir set to self . _dir , substitute result for fd and tmp_path , respectively . 
Translation: call the method _UNK . _UNK with 0 arguments : _UNK and _UNK . _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 54.5 
  2-gram: 19.0 
  3-gram:5.0 
  4-gram: 0.0 

Code line 399:  renamed = False
Original:  renamed is boolean False . 
Translation: week_number is boolean False .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 400:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 401:               with io . open ( fd , 'wb' ) as f :
Original:  with return value of the function io . open with fname and string ' rb ' as arguments , named as f , 
Translation: open the function io with file with file command , and ' descriptor ' ,
BLEU = 0.00 (Bravity Penalty=0.587, Length ratio=0.652, Translated length=15, Reference length=23)
  1-gram: 73.3 
  2-gram: 14.3 
  3-gram:7.7 
  4-gram: 0.0 

Code line 402:                   expiry = self . get_backend_timeout ( timeout )
Original:  call the method self . get_backend_timeout with argument timeout , substitute it for expiry . 
Translation: call the method self . _UNK with an argument namespace , substitute the result for
BLEU = 30.93 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 66.7 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 16.7 

Code line 403:  f . write ( pickle . dumps ( expiry , - 1 ) )
Original:  call the function pickle . dumps with expiry and integer -1 as arguments , use the result as the argument for the call to f . write function . 
Translation: call the method _UNK . _UNK with 0 arguments : _UNK and _UNK , append the result to the result .
BLEU = 0.00 (Bravity Penalty=0.683, Length ratio=0.724, Translated length=21, Reference length=29)
  1-gram: 57.1 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 404:  f . write ( zlib . compress ( pickle . dumps ( value ) , - 1 ) )
Original:  call the function pickle . dumps with argument value , use the result and integer -1 as arguments for the call to the function zlib . compress , use the result as an argument for the call to the f . write method . 
Translation: call the method _UNK . _UNK with an argument : sum of the function _UNK called with 0 arguments : value and value .
BLEU = 0.00 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=24, Reference length=44)
  1-gram: 54.2 
  2-gram: 13.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 405:   file_move_safe ( tmp_path , fname , allow_overwrite = True )
Original:  call the function file_move_safe with tmp_path , fname , allow_overwrite set to boolean True as arguments . 
Translation: call the function _UNK with 0 arguments : _UNK and _UNK set to boolean True .
BLEU = 22.74 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 62.5 
  2-gram: 33.3 
  3-gram:21.4 
  4-gram: 7.7 

Code line 406:  renamed = True
Original:  renamed is boolean True . 
Translation: intrans is boolean True .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 407:   finally :
Original:  finally perform , 
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 408:               if not renamed :
Original:  if renamed is boolean False , 
Translation: if priority is false ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 409:                   os . remove ( tmp_path )
Original:  remove file tmp_path . 
Translation: remove a directory ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 410:      def delete ( self , key , version = None ) :
Original:  define the method delete with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and mimetype set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 411:           self . _delete ( self . _key_to_file ( key , version ) )
Original:  call the function self . _key_to_file with key and version as arguments , use the result as an argument for the call to the self . _delete method . 
Translation: call the method self . _UNK with 0 arguments : key and _UNK of the function _UNK .
BLEU = 0.00 (Bravity Penalty=0.543, Length ratio=0.621, Translated length=18, Reference length=29)
  1-gram: 66.7 
  2-gram: 23.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 412:    def _delete ( self , fname ) :
Original:  define the method _delete with self and fname as arguments . 
Translation: define the method _UNK with 0 arguments : self and parse_until .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 413:           if not fname . startswith ( self . _dir ) or not os . path . exists ( fname ) :
Original:  if fname doesnt start with self . _dir and fname file path doesnt exists , 
Translation: if _UNK doesnt exists or return value of the method self . _UNK . _UNK with an argument f . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.467, Translated length=22, Reference length=15)
  1-gram: 31.8 
  2-gram: 9.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 414:               return
Original:  return nothing . 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 415:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 416:               os . remove ( fname )
Original:  call the function os . remove with argument fname . 
Translation: remove symlink_path directory ,
BLEU = 0.00 (Bravity Penalty=0.223, Length ratio=0.400, Translated length=4, Reference length=10)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 417:   except OSError as e :
Original:  if exception OSError , renamed to e , is caught , 
Translation: if OSError renamed to e , is caught ,
BLEU = 61.90 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 418:                 if e . errno != errno . ENOENT :
Original:  if e . errno does not equals to errno . ENOENT , 
Translation: if e is to e . _UNK . or e to e . TemplateSyntaxError ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 40.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 419:                   raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 420:      def has_key ( self , key , version = None ) :
Original:  define the method has_key with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and default set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 421:           fname = self . _key_to_file ( key , version )
Original:  call the function self . _key_to_file with key and version as arguments , substitute it for fname . 
Translation: call the method self . _UNK with 0 arguments : key and default_list , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 60.0 
  2-gram: 21.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 422:  if os . path . exists ( fname ) :
Original:  if fname file path exists , 
Translation: if _UNK path exists ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 423:               with io . open ( fname , 'rb' ) as f :
Original:  with call to the io . open function with fname and string ' rb ' as arguments , renamed to f , 
Translation: open the function named ' with file mode and help as an file ,
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=14, Reference length=22)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 424:                   return not self . _is_expired ( f )
Original:  call the method self . _is_expired with argument f , invert the boolean result and return it . 
Translation: call the method self . _UNK with an argument other , return the result .
BLEU = 25.07 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 80.0 
  2-gram: 28.6 
  3-gram:23.1 
  4-gram: 16.7 

Code line 425:    return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 426:    def _cull ( self ) :
Original:  define the method _cull with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 427:  filelist = self . _list_cache_files ( )
Original:  call the self . _list_cache_files method , substitute the result for filelist . 
Translation: call the method self . _UNK , substitute the result for _UNK .
BLEU = 38.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 50.0 
  3-gram:27.3 
  4-gram: 20.0 

Code line 428:  num_entries = len ( filelist )
Original:  num_entries is length of filelist . 
Translation: substitute length of prefixed for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 42.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 429:  if num_entries < self . _max_entries :
Original:  if num_entries is lesser than self . _max_entries , 
Translation: if _UNK is _UNK _UNK . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 430:               return
Original:  return nothing . 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 431:   if self . _cull_frequency == 0 :
Original:  if self . _cull_frequency equals to integer 0 . 
Translation: if self . _UNK equals integer 0 ,
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 432:               return self . clear ( )
Original:  evaluate self . clear method and return the result . 
Translation: return the value of the method self . clear .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 433:    filelist = random . sample ( filelist ,  int ( num_entries / self . _cull_frequency ) )
Original:  divide num_entries by self . _cull_frequency , convert the result to an integer , call the random . sample function with filelist and previous result as arguments , substitute the result for filelist . 
Translation: call the method _UNK . _UNK with an argument _UNK . _UNK base class and convert _UNK into a integer , substitute the result for
BLEU = 14.08 (Bravity Penalty=0.698, Length ratio=0.735, Translated length=25, Reference length=34)
  1-gram: 56.0 
  2-gram: 25.0 
  3-gram:13.0 
  4-gram: 9.1 

Code line 434:  for fname in filelist :
Original:  for every fname in filelist , 
Translation: for every digit in sorted_items ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 435:               self . _delete ( fname )
Original:  call self . _delete method with argument fname . 
Translation: call the method self . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9)
  1-gram: 63.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 436:     def _createdir ( self ) :
Original:  define the method _createdir with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 437:           if not os . path . exists ( self . _dir ) :
Original:  if self . _dir path doesnt exists , 
Translation: if self . _UNK doesnt doesnt exists ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 0.0 

Code line 438:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 439:                   os . makedirs ( self . _dir , 0o700 )
Original:  call os . makedirs function with self . _dir and hexadecimal 0o700 as arguments . 
Translation: _UNK a tuple with 0 elements : self . _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 38.5 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 440:   except OSError as e :
Original:  if OSError , renamed to e , exception is caught , 
Translation: if OSError renamed to e , is caught ,
BLEU = 38.52 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:42.9 
  4-gram: 16.7 

Code line 441:                   if e . errno != errno . EEXIST :
Original:  if e . errno is not equal to errno . EEXIST , 
Translation: if e is to e . _UNK . or e to e . TemplateSyntaxError ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 442:                       raise EnvironmentError (  "Cache directory '%s' does not exist "  "and could not be created'" % self . _dir )
Original:  raise an EnvironmentError exception with string " Cache directory ' %s ' does not exist and could not be created " as argument , 
Translation: raise an exception exception with an argument string " _UNK ' %s ' _UNK not not a _UNK named ' %s ' ,
BLEU = 0.00 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 56.5 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 443:       def _key_to_file ( self , key , version = None ) :
Original:  substitute ' %s ' with self . _dir converted to a string . define the method key_to_file with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and default set to None .
BLEU = 0.00 (Bravity Penalty=0.439, Length ratio=0.548, Translated length=17, Reference length=31)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 444:  key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 445:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 446:  return os . path . join ( self . _dir , '' . join (  [ hashlib . md5 ( force_bytes ( key ) ) . hexdigest ( ) , self . cache_suffix ] ) )
Original:  join into a string: md5 hash sum of force_bytes ( key ) and self . cache_suffix , compose root file path out of self . _dir and previous result , return it . 
Translation: with return value of the self . style . join function with an argument string ,
BLEU = 0.00 (Bravity Penalty=0.346, Length ratio=0.485, Translated length=16, Reference length=33)
  1-gram: 43.8 
  2-gram: 6.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 447:    def clear ( self ) :
Original:  define the method clear with argument self . 
Translation: define the method clear with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 448:  if not os . path . exists ( self . _dir ) :
Original:  if self . _dir file path does not exists , 
Translation: if self . _UNK doesnt doesnt exists ,
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 62.5 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 449:               return
Original:  return nothing . 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 450:   for fname in self . _list_cache_files ( ) :
Original:  if fname is contained in self . _list_cache_files method return value , 
Translation: for every _UNK in return value of the method self . _UNK called with an
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 40.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 451:               self . _delete ( fname )
Original:  call the self . _delete method with argument fname . 
Translation: call the method self . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 452:     def _is_expired ( self , f ) :
Original:  define the method _is_expired with self and f as arguments . 
Translation: define the method _UNK with 0 arguments : self and f .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 453:  exp = pickle . load ( f )
Original:  call the function pickle . load with argument f , substitute the result for exp . 
Translation: call the method _UNK . _UNK with an argument argv , substitute the result for
BLEU = 28.94 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 66.7 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 16.7 

Code line 454:  if exp is not None and exp < time . time ( ) :
Original:  if exp is not None and exp is lesser than return value of the function time . time , 
Translation: if limit is None is None , and call reverse method digest on the result of the function type ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 45.0 
  2-gram: 10.5 
  3-gram:5.6 
  4-gram: 0.0 

Code line 455:               f . close ( )
Original:  call close method on a file stream . 
Translation: close the f . close .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 456:  self . _delete ( f . name )
Original:  call the self . _delete method with argument f . name . 
Translation: call the method self . _UNK . _UNK with an argument name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 76.9 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 457:  return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 458:   return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 459:    def _list_cache_files ( self ) :
Original:  define the method _list_cache_files with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 460:  if not os . path . exists ( self . _dir ) :
Original:  if self . _dir file path does not exists , 
Translation: if self . _UNK doesnt doesnt exists ,
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 62.5 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 461:               return [ ]
Original:  return an empty list . 
Translation: return an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 462:   filelist = [ os . path . join ( self . _dir , fname ) for fname  in glob . glob1 ( self . _dir , '*%s' % self . cache_suffix ) ]
Original:  for every fname in return value of the glob . glob1 function called with 2 arguments: self . _dir and , 
Translation: join the list containing elements of self . _UNK into a valid string , separated by the valid string , separated by the string : separated by the string ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=30, Reference length=21)
  1-gram: 16.7 
  2-gram: 3.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 463:  return filelist
Original:  self . cache_suffix converted to a string , appended to the character ' * ' , call os . path . join with self . _dir and fname as arguments , filelist is a list containing all the previous results . return filelist . 
Translation: return media .
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.068, Translated length=3, Reference length=44)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 464:       class CacheClass ( FileBasedCache ) :
Original:  derive the class CacheClass from the base class FileBasedCache . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 465:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 466:   import time
Original:  import module time . 
Translation: import module time .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 467:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 468:       from django . utils . six . moves import cPickle as pickle
Original:  from django . utils . six . moves import cPickle as pickle into default name space . 
Translation: from django . utils . six . moves import _UNK as _UNK into default name space .
BLEU = 70.86 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 88.2 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 57.1 

Code line 469:   except ImportError :
Original:  if ImportError exception is caught , 
Translation: if ImportError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 470:       import pickle
Original:  import pickle . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 471:    from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
Original:  from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space . 
Translation: from django . core . serializers . base . _UNK import _UNK and WSGIHandler into default name space .
BLEU = 43.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 472:  from django . utils . synch import RWLock
Original:  from django . utils . synch import RWLock into default name space . 
Translation: from django . utils . _UNK import _UNK into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 473:      _caches = { }
Original:  __caches is an empty dictionary . 
Translation: _UNK is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 474:  _expire_info = { }
Original:  __expire_info is an empty dictionary . 
Translation: _UNK is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 475:  _locks = { }
Original:  __locks is an empty dictionary . 
Translation: _UNK is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 476:    class LocMemCache ( BaseCache ) :
Original:  derive the class LocMemCache from the base class BaseCache . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 477:       def __init__ ( self , name , params ) :
Original:  define the initialization method __init__ with 3 arguments: self , name and params . 
Translation: define the method __init__ with 0 arguments : self , name and format_string .
BLEU = 29.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 71.4 
  2-gram: 46.2 
  3-gram:25.0 
  4-gram: 9.1 

Code line 478:           BaseCache . __init__ ( self , params )
Original:  call the __init__ method with self and params arguments from the base class BaseCache . 
Translation: call the method _UNK . _UNK with 0 arguments : self and nodelist .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 57.1 
  2-gram: 15.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 479:  self . _cache = _caches . setdefault ( name , { } )
Original:  call the _caches . setdefault method with name and empty dictionary as arguments , substitute the result for self_cache . 
Translation: call the method logger . _UNK with default name name , substitute the result for _UNK , _UNK .
BLEU = 23.66 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 63.2 
  2-gram: 27.8 
  3-gram:17.6 
  4-gram: 12.5 

Code line 480:  self . _expire_info = _expire_info . setdefault ( name , { } )
Original:  call the _expire_info . setdefault method with name and empty dictionary as arguments , substitute the result for self_expire_info . 
Translation: call the method logger . _UNK with default name name , substitute the result for _UNK , _UNK .
BLEU = 23.66 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 63.2 
  2-gram: 27.8 
  3-gram:17.6 
  4-gram: 12.5 

Code line 481:  self . _lock = _locks . setdefault ( name , RWLock ( ) )
Original:  call the _lock . setdefault method with name and RWLock ( ) as arguments , substitute the result for self_lock . 
Translation: call the method _UNK . _UNK with an argument name , substitute the result for self . _UNK .
BLEU = 22.45 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 63.2 
  2-gram: 27.8 
  3-gram:17.6 
  4-gram: 12.5 

Code line 482:    def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , length set to None ,
BLEU = 0.00 (Bravity Penalty=0.589, Length ratio=0.654, Translated length=17, Reference length=26)
  1-gram: 70.6 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 0.0 

Code line 483:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 484:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 485:  pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
Original:  call the pickle . dumps function with value and pickle . HIGHEST_PROTOCOL as arguments . 
Translation: call the function _UNK . _UNK with arguments _UNK and _UNK . _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=20, Reference length=15)
  1-gram: 45.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 486:  with self . _lock . writer ( ) :
Original:  call the self . _lock . writer method , with the result perform the following , 
Translation: call the method self . _archive . read , with the result as argument ,
BLEU = 22.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 487:               if self . _has_expired ( key ) :
Original:  evaluate self . _has_expired with argument key , if the result is True , 
Translation: if key to self . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=7, Reference length=14)
  1-gram: 71.4 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 488:                   self . _set ( key , pickled , timeout )
Original:  call the method self . _set with key , pickled and timeout as arguments . 
Translation: call the method self . _UNK with 0 arguments : key , _UNK and key .
BLEU = 29.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 68.8 
  2-gram: 33.3 
  3-gram:21.4 
  4-gram: 15.4 

Code line 489:  return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 490:   return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 491:     def get ( self , key , default = None , version = None ) :
Original:  define the method get with 4 arguments , self class instance , key , default set to None and version set to None . 
Translation: define the method get with 0 arguments : self , key , default set to None and default set to None .
BLEU = 55.18 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 86.4 
  2-gram: 66.7 
  3-gram:55.0 
  4-gram: 42.1 

Code line 492:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 493:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 494:  pickled = None
Original:  substitute None for pickled . 
Translation: _UNK is None .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 495:  with self . _lock . reader ( ) :
Original:  call the self . _lock . reader method , with the result perform the following , 
Translation: call the method self . _UNK . _UNK with an argument ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 66.7 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 496:               if not self . _has_expired ( key ) :
Original:  evaluate the method self . _has_expired with argument key , if it as False , 
Translation: if key . _UNK is false ,
BLEU = 0.00 (Bravity Penalty=0.319, Length ratio=0.467, Translated length=7, Reference length=15)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 497:                   pickled = self . _cache [ key ]
Original:  substitute value under the key key of self . _cache dictionary for pickled . 
Translation: substitute value under the key key of self . _UNK dictionary .
BLEU = 63.22 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 91.7 
  2-gram: 72.7 
  3-gram:70.0 
  4-gram: 66.7 

Code line 498:    if pickled is not None :
Original:  if pickled is not None . 
Translation: if _UNK is not None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 499:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 500:                   return pickle . loads ( pickled )
Original:  evaluate pickle . loads with argument pickled , return the result . 
Translation: call the method _UNK . _UNK with an argument _UNK , return the result .
BLEU = 27.67 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 53.3 
  2-gram: 28.6 
  3-gram:23.1 
  4-gram: 16.7 

Code line 501:   except pickle . PickleError :
Original:  if pickle . PickleError exception is caught , 
Translation: if _UNK . _UNK exception is caught ,
BLEU = 38.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 502:                   return default
Original:  return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 503:     with self . _lock . writer ( ) :
Original:  call the self . _lock . writer method , with the result perform the following , 
Translation: call the method self . _archive . read , with the result as argument ,
BLEU = 22.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 504:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 505:                   del self . _cache [ key ]
Original:  delete the value under key key of self . _cache dictionary . 
Translation: delete entry under the key key of self . dictionary dictionary .
BLEU = 39.86 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 22.2 

Code line 506:  del self . _expire_info [ key ]
Original:  delete the value under key key of self . _expire_info . 
Translation: delete entry under the key key of self . dictionary dictionary .
BLEU = 36.72 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:30.0 
  4-gram: 22.2 

Code line 507:   except KeyError :
Original:  if KeyError exception is caught , 
Translation: if KeyError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 508:                   pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 509:   return default
Original:  return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 510:     def _set ( self , key , value , timeout = DEFAULT_TIMEOUT ) :
Original:  define the method _set with 4 arguments , self class instance , key , value and timeout set to DEFAULT_TIMEOUT . 
Translation: define the method _UNK with 0 arguments : self , key , value and key as arguments .
BLEU = 25.19 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 66.7 
  2-gram: 35.3 
  3-gram:25.0 
  4-gram: 13.3 

Code line 511:           if len ( self . _cache ) >= self . _max_entries :
Original:  if length of self . _cache is greater or equal to self . _max_entries , 
Translation: if length of self . _UNK is grater or length of self . _UNK is grater ,
BLEU = 26.92 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 58.8 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 14.3 

Code line 512:               self . _cull ( )
Original:  call the self . _cull method . 
Translation: call the method self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 513:   self . _cache [ key ] = value
Original:  substitute value for the value under the key key of self . _cache dictionary . 
Translation: substitute value for self . _UNK dictionary with value under the key key .
BLEU = 38.08 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 85.7 
  2-gram: 53.8 
  3-gram:33.3 
  4-gram: 18.2 

Code line 514:  self . _expire_info [ key ] = self . get_backend_timeout ( timeout )
Original:  call the self . get_backend_timeout with argument timeout , substitute it for the value under the key key of self . _expire_info dictionary . 
Translation: call the method self . _UNK with an argument key , substitute the result for self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24)
  1-gram: 73.7 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 515:    def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method get with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , _UNK set to None , as the default exception .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26)
  1-gram: 59.1 
  2-gram: 19.0 
  3-gram:10.0 
  4-gram: 0.0 

Code line 516:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 517:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 518:  pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
Original:  call the function pickle . dumps with value and pickle . HIGHEST_PROTOCOL as the arguments , substitute the result for pickled . 
Translation: call the function _UNK . _UNK with arguments _UNK and _UNK . _UNK , substitute the result for _UNK .
BLEU = 24.95 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 70.0 
  2-gram: 31.6 
  3-gram:22.2 
  4-gram: 11.8 

Code line 519:  with self . _lock . writer ( ) :
Original:  call the self . _lock . writer method , with the result perform the following , 
Translation: call the method self . _archive . read , with the result as argument ,
BLEU = 22.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 520:               self . _set ( key , pickled , timeout )
Original:  call the method self . _set with key , pickled and timeout as arguments . 
Translation: call the method self . _UNK with 0 arguments : key , _UNK and key .
BLEU = 29.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 68.8 
  2-gram: 33.3 
  3-gram:21.4 
  4-gram: 15.4 

Code line 521:     def incr ( self , key , delta = 1 , version = None ) :
Original:  define the method incr with self class instance , key , delta set to integer 1 and version set to None , as arguments . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 25.50 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=22, Reference length=25)
  1-gram: 72.7 
  2-gram: 38.1 
  3-gram:25.0 
  4-gram: 10.5 

Code line 522:           value = self . get ( key , version = version )
Original:  call the self . get method with key and version set to version as arguments , substitute the result for value . 
Translation: call the method self . _UNK with arguments key and value , substitute the result for _UNK .
BLEU = 24.77 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=18, Reference length=22)
  1-gram: 88.9 
  2-gram: 41.2 
  3-gram:18.8 
  4-gram: 13.3 

Code line 523:  if value is None :
Original:  if value is None , 
Translation: if value is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 524:               raise ValueError ( "Key '%s' not found" % key )
Original:  raise an ValueError exception with string " Key ' %s ' not found " as argument , substitute ' %s ' with key converted into a string . 
Translation: raise an ValueError with an argument string " _UNK ' %s ' does ' formated with name .
BLEU = 0.00 (Bravity Penalty=0.574, Length ratio=0.643, Translated length=18, Reference length=28)
  1-gram: 72.2 
  2-gram: 29.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 525:   new_value = value + delta
Original:  new_value is a sum of value and delta . 
Translation: sum sum and is_relation , substitute the result for result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9)
  1-gram: 27.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 526:  key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 527:  pickled = pickle . dumps ( new_value , pickle . HIGHEST_PROTOCOL )
Original:  call the function pickle . dumps with value and pickle . HIGHEST_PROTOCOL as the arguments , substitute the result for pickled . 
Translation: call the method _UNK . _UNK with arguments _UNK and _UNK . _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=16, Reference length=22)
  1-gram: 50.0 
  2-gram: 6.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 528:  with self . _lock . writer ( ) :
Original:  call the self . _lock . writer method , with the result perform the following , 
Translation: call the method self . _archive . read , with the result as argument ,
BLEU = 22.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 529:               self . _cache [ key ] = pickled
Original:  substitute pickled for value under the key key of self . _cache dictionary . 
Translation: substitute _UNK for self . _UNK dictionary with the key key .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 75.0 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 530:   return new_value
Original:  return new_value . 
Translation: return empty .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 531:    def has_key ( self , key , version = None ) :
Original:  define the method has_key with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and default set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 532:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 533:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 534:  with self . _lock . reader ( ) :
Original:  call the self . _lock . reader method , with the result perform the following , 
Translation: call the method self . _UNK . _UNK with an argument ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 66.7 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 535:               if not self . _has_expired ( key ) :
Original:  if call to the _has_expired method with argument key evaluates to boolean False , 
Translation: if key . _UNK is false ,
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=7, Reference length=14)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 536:                   return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 537:     with self . _lock . writer ( ) :
Original:  call the self . _lock . writer method , with the result perform the following , 
Translation: call the method self . _archive . read , with the result as argument ,
BLEU = 22.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 538:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 539:                   del self . _cache [ key ]
Original:  delete the value under the key key of self . _cache dictionary . 
Translation: delete entry under the key key of self . dictionary dictionary .
BLEU = 53.91 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 44.4 

Code line 540:  del self . _expire_info [ key ]
Original:  delete the value under the key key of self . _expire_info dictionary . 
Translation: delete entry under the key key of self . dictionary dictionary .
BLEU = 53.91 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 44.4 

Code line 541:   except KeyError :
Original:  if KeyError exception is caught , 
Translation: if KeyError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 542:                   pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 543:   return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 544:     def _has_expired ( self , key ) :
Original:  define the method _has_expired with self and key as arguments . 
Translation: define the method _UNK with 0 arguments : self and key .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 545:           exp = self . _expire_info . get ( key , - 1 )
Original:  call the method self . _expire_info . get with key and integer -1 as arguments , substitute the result for exp . 
Translation: get the value under the key key of the self . _UNK dictionary , if the key key exists ,
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 35.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 546:  if exp is None or exp > time . time ( ) :
Original:  if exp is None or exp is greater than the return value of the call to the function time . time , 
Translation: if None is None , or its length of the call function time ,
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=14, Reference length=22)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:8.3 
  4-gram: 0.0 

Code line 547:               return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 548:   return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 549:    def _cull ( self ) :
Original:  define the method _cull with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 550:           if self . _cull_frequency == 0 :
Original:  if self . _cull_frequency equals to integer 0 . 
Translation: if self . _UNK equals integer 0 ,
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 551:               self . clear ( )
Original:  call self . clear method . 
Translation: call the method self . clear .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 552:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 553:               doomed = [ k for ( i , k ) in enumerate ( self . _cache ) if i % self . _cull_frequency == 0 ]
Original:  for every i and k in enumerated values of self . _cache , if i is divisible by self . _cull_frequency , append k to doomed list . 
Translation: for every i in i of the method _UNK with 0 arguments : _UNK and _UNK of the function self . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.805, Length ratio=0.821, Translated length=23, Reference length=28)
  1-gram: 43.5 
  2-gram: 13.6 
  3-gram:4.8 
  4-gram: 0.0 

Code line 554:  for k in doomed :
Original:  for every k in doomed , 
Translation: for every f in _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 555:                   self . _delete ( k )
Original:  call the method self . _delete with argument k . 
Translation: call the method self . _UNK with argument number as an argument .
BLEU = 34.39 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 61.5 
  2-gram: 41.7 
  3-gram:27.3 
  4-gram: 20.0 

Code line 556:      def _delete ( self , key ) :
Original:  define the method _delete with arguments self and key . 
Translation: define the method _UNK with 0 arguments : self and key .
BLEU = 32.65 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 75.0 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 557:           try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 558:               del self . _cache [ key ]
Original:  delete the value under the key key of self . _cache dictionary . 
Translation: delete entry under the key key of self . dictionary dictionary .
BLEU = 53.91 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 44.4 

Code line 559:   except KeyError :
Original:  if KeyError exception is caught , 
Translation: if KeyError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 560:               pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 561:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 562:               del self . _expire_info [ key ]
Original:  delete the value under the key key of the self . _expire_info dictionary . 
Translation: delete entry under the key key of self . dictionary dictionary .
BLEU = 35.32 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 83.3 
  2-gram: 54.5 
  3-gram:30.0 
  4-gram: 22.2 

Code line 563:   except KeyError :
Original:  if KeyError exception is caught , 
Translation: if KeyError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 564:               pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 565:     def delete ( self , key , version = None ) :
Original:  define the method delete with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and mimetype set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 566:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 567:  self . validate_key ( key )
Original:  call the method self . validate_key with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 568:  with self . _lock . writer ( ) :
Original:  call the self . _lock . writer method , with the result perform the following , 
Translation: call the method self . _archive . read , with the result as argument ,
BLEU = 22.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 569:               self . _delete ( key )
Original:  call the method self . _delete with argument key . 
Translation: call the method self . _UNK with the key as the argument .
BLEU = 33.50 (Bravity Penalty=1.000, Length ratio=1.300, Translated length=13, Reference length=10)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 570:     def clear ( self ) :
Original:  define the method clear with argument self . 
Translation: define the method clear with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 571:           self . _cache . clear ( )
Original:  call the method self . _cache . clear . 
Translation: call the method self . _UNK . _UNK .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 572:  self . _expire_info . clear ( )
Original:  call the method self . _expire_info . clear . 
Translation: call the method self . _UNK . _UNK .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 573:       class CacheClass ( LocMemCache ) :
Original:  derive the class CacheClass from the base class LocMemCache . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 574:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 575:   import time
Original:  import module time . 
Translation: import module time .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 576:  import pickle
Original:  import module pickle . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 577:   from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
Original:  from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space . 
Translation: from django . core . serializers . base . _UNK import _UNK and WSGIHandler into default name space .
BLEU = 43.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 578:  from django . utils import six
Original:  from django . utils import six into default name space . 
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 579:  from django . utils . deprecation import RenameMethodsBase , RemovedInDjango19Warning
Original:  from django . utils . deprecation import RenameMethodsBase and RemovedInDjango19Warning into default name space . 
Translation: from django . utils . deprecation import RemovedInDjango00Warning and RemovedInDjango00Warning into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 580:  from django . utils . encoding import force_str
Original:  from django . utils . encoding import force_str into default name space . 
Translation: from django . utils . encoding import force_str into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 581:  from django . utils . functional import cached_property
Original:  from django . utils . functional import cached_property into default name space . 
Translation: from django . utils . functional import cached_property into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 582:    class BaseMemcachedCacheMethods ( RenameMethodsBase ) :
Original:  derive the class BaseMemcachedCacheMethods from RenameMethodsBase the base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 0.0 

Code line 583:       renamed_methods = (  ( '_get_memcache_timeout' , 'get_backend_timeout' , RemovedInDjango19Warning ) ,  )
Original:  renamed methods is a tuple containing 3 elements: ' _get_memcache_timeout ' , ' get_backend_timeout ' and RemovedInDjango19Warning . 
Translation: _UNK is a tuple with 0 elements : string ' _UNK ' , _UNK ' _UNK ' and RemovedInDjango00Warning .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 50.0 
  2-gram: 21.1 
  3-gram:5.6 
  4-gram: 0.0 

Code line 584:     class BaseMemcachedCache ( six . with_metaclass ( BaseMemcachedCacheMethods , BaseCache ) ) :
Original:  derive the class BaseMemcachedCache from base class BaseMemcachedCacheMethods and BaseCache . 
Translation: derive the class _UNK from the base class _UNK and _UNK base _UNK of _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.455, Translated length=16, Reference length=11)
  1-gram: 50.0 
  2-gram: 20.0 
  3-gram:7.1 
  4-gram: 0.0 

Code line 585:       def __init__ ( self , server , params , library , value_not_found_exception ) :
Original:  define the method __init__ with , self , server , params , library , value_not_found_exception as arguments . 
Translation: define the method __init__ with 0 arguments : self , _UNK , _UNK , _UNK and _UNK .
BLEU = 25.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 61.1 
  2-gram: 29.4 
  3-gram:18.8 
  4-gram: 13.3 

Code line 586:           super ( BaseMemcachedCache , self ) . __init__ ( params )
Original:  call the initialization method with argument params for the base class of the BaseMemcachedCache class . 
Translation: call the method __init__ from the base class of the class _UNK , with _UNK and list .
BLEU = 25.89 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=18, Reference length=16)
  1-gram: 61.1 
  2-gram: 29.4 
  3-gram:18.8 
  4-gram: 13.3 

Code line 587:  if isinstance ( server , six . string_types ) :
Original:  if server is an instance of six . string_types , 
Translation: if regex is an instance of six . string_types type ,
BLEU = 60.77 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:55.6 
  4-gram: 50.0 

Code line 588:               self . _servers = server . split ( ';' )
Original:  split server with ' ; ' as delimiter , substitute the result for self . _servers . 
Translation: split string by string ' _UNK ' , substitute the result for self . _UNK .
BLEU = 39.17 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 68.8 
  2-gram: 40.0 
  3-gram:35.7 
  4-gram: 30.8 

Code line 589:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 590:               self . _servers = server
Original:  substitute server for self . _servers . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 591:        self . LibraryValueNotFoundException = value_not_found_exception
Original:  substitute value_not_found_exception for self . LibraryValueNotFoundException . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 592:   self . _lib = library
Original:  substitute library for self . _lib . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 593:  self . _options = params . get ( 'OPTIONS' , None )
Original:  call the params . get function with string ' OPTIONS ' and None as arguments , substitute the result for self . _options . 
Translation: get the value under the ' _UNK ' key of the options dictionary , if the key exists substitute it for self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24)
  1-gram: 40.0 
  2-gram: 8.3 
  3-gram:4.3 
  4-gram: 0.0 

Code line 594:    @ property
Original:  property decorator , 
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 595:  def _cache ( self ) :
Original:  define the method _cache with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 596:  if getattr ( self , '_client' , None ) is None :
Original:  if self object has an attribute ' _client ' , 
Translation: get ' _UNK ' attribute of the options object ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 597:               self . _client = self . _lib . Client ( self . _servers )
Original:  call the self . _lib . Client with argument self . _servers , substitute the result for self . _client . 
Translation: call the method self . _UNK with an argument self . _UNK , substitute the result for self . _UNK .
BLEU = 40.44 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 76.2 
  2-gram: 50.0 
  3-gram:31.6 
  4-gram: 22.2 

Code line 598:    return self . _client
Original:  return self . _client . 
Translation: return self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 599:    def get_backend_timeout ( self , timeout = DEFAULT_TIMEOUT ) :
Original:  define the method get_backend_timeout with self and timeout set to DEFAULT_TIMEOUT as arguments . 
Translation: define the method _UNK with 0 arguments : self and _UNK set to None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 66.7 
  2-gram: 28.6 
  3-gram:7.7 
  4-gram: 0.0 

Code line 600:  if timeout == DEFAULT_TIMEOUT :
Original:  if timeout equals to DEFAULT_TIMEOUT , 
Translation: if _UNK equals _UNK ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 601:               timeout = self . default_timeout
Original:  substitute self . default_timeout for timeout . 
Translation: substitute self . _UNK for self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 602:    if timeout is None :
Original:  if timeout is None , 
Translation: if exclude is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 603:                return 0
Original:  return integer 0 . 
Translation: return integer 0 .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 604:   elif int ( timeout ) == 0 :
Original:  else if timeout converted into an integer equals to integer 0 , 
Translation: otherwise if length of hextet is not integer 0 ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 40.0 
  2-gram: 22.2 
  3-gram:12.5 
  4-gram: 0.0 

Code line 605:                 timeout = - 1
Original:  timeout is a integer -1 . 
Translation: doublecolon_start is an integer -0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 606:    if timeout > 2592000 :
Original:  if timeout is greater than integer 2592000 , 
Translation: if _UNK is _UNK or _UNK ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 607:                     timeout += int ( time . time ( ) )
Original:  convert return value of the function time . time to an integer , increment timeout by it . 
Translation: call the function time . text_type , convert the result to args .
BLEU = 15.65 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=13, Reference length=18)
  1-gram: 61.5 
  2-gram: 25.0 
  3-gram:18.2 
  4-gram: 10.0 

Code line 608:   return int ( timeout )
Original:  convert timeout into an integer , return it . 
Translation: convert to to an integer .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=6, Reference length=9)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 609:    def make_key ( self , key , version = None ) :
Original:  define the method make_key with self class instance , key and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and version set to None .
BLEU = 23.85 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 76.5 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 7.1 

Code line 610:            return force_str ( super ( BaseMemcachedCache , self ) . make_key ( key , version ) )
Original:  call the method make_key with arguments key and version from the base class of the class BaseMemcachedCache , use it as an argument for the call to the function force_str , return the result . 
Translation: call the function _UNK with 0 arguments : _UNK and _UNK of the base class of the class MultiValueDict ,
BLEU = 14.70 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=20, Reference length=35)
  1-gram: 65.0 
  2-gram: 36.8 
  3-gram:22.2 
  4-gram: 17.6 

Code line 611:    def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , length set to None ,
BLEU = 0.00 (Bravity Penalty=0.589, Length ratio=0.654, Translated length=17, Reference length=26)
  1-gram: 70.6 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 0.0 

Code line 612:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 613:  return self . _cache . add ( key , value , self . get_backend_timeout ( timeout ) )
Original:  call the method self . _cache . add with key , value , self . get_backend_timeout ( timeout ) as arguments . 
Translation: call the method self . _UNK with 0 arguments : _UNK , return value of the method self . _UNK ,
BLEU = 21.33 (Bravity Penalty=0.953, Length ratio=0.955, Translated length=21, Reference length=22)
  1-gram: 57.1 
  2-gram: 25.0 
  3-gram:15.8 
  4-gram: 11.1 

Code line 614:    def get ( self , key , default = None , version = None ) :
Original:  define the method get with 5 arguments , self class instance , key , default set to None and version set to None . 
Translation: define the method get with 0 arguments : self , key , default set to None and default set to None .
BLEU = 55.18 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 86.4 
  2-gram: 66.7 
  3-gram:55.0 
  4-gram: 42.1 

Code line 615:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 616:  val = self . _cache . get ( key )
Original:  call the self . _cache . get method with argument key , substitute the result for val . 
Translation: get the value under the key key of the self . _UNK dictionary , substitute the result for key .
BLEU = 25.96 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 55.0 
  2-gram: 31.6 
  3-gram:22.2 
  4-gram: 11.8 

Code line 617:  if val is None :
Original:  if val is None , 
Translation: if val is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 618:               return default
Original:  return default . 
Translation: return default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 619:   return val
Original:  return val . 
Translation: return val .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 620:    def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None . 
Translation: define the method _UNK with 0 arguments : self , _UNK , _UNK set to None , as the default exception .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26)
  1-gram: 59.1 
  2-gram: 19.0 
  3-gram:10.0 
  4-gram: 0.0 

Code line 621:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 622:  self . _cache . set ( key , value , self . get_backend_timeout ( timeout ) )
Original:  call the method self . _cache . set with key , value , self . get_backend_timeout ( timeout ) as arguments . 
Translation: call the method self . _UNK with 0 arguments : value , _UNK , key and self .
BLEU = 22.62 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=18, Reference length=22)
  1-gram: 72.2 
  2-gram: 35.3 
  3-gram:18.8 
  4-gram: 13.3 

Code line 623:    def delete ( self , key , version = None ) :
Original:  define the method delete with self , key and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key and mimetype set to None .
BLEU = 28.25 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 76.5 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 624:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 625:  self . _cache . delete ( key )
Original:  call the method self . _cache . delete with argument key . 
Translation: call the method self . _UNK .
BLEU = 31.50 (Bravity Penalty=0.490, Length ratio=0.583, Translated length=7, Reference length=12)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 626:    def get_many ( self , keys , version = None ) :
Original:  define the method get_many with self class instance , keys and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , _UNK and dklen set to None .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 64.7 
  2-gram: 18.8 
  3-gram:6.7 
  4-gram: 0.0 

Code line 627:           new_keys = [ self . make_key ( x , version = version ) for x in keys ]
Original:  define the method get_many with 3 arguments , self class instance , keys and version set to None . 
Translation: call the function self . _UNK with 0 arguments : x and x as a x for _UNK , as a _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.211, Translated length=23, Reference length=19)
  1-gram: 34.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 628:  ret = self . _cache . get_multi ( new_keys )
Original:  call the method self . _cache . get_multi with argument new_keys , substitute the result for ret . 
Translation: call the method self . _UNK with argument _UNK , substitute the result for _UNK .
BLEU = 44.44 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18)
  1-gram: 81.2 
  2-gram: 60.0 
  3-gram:42.9 
  4-gram: 30.8 

Code line 629:  if ret :
Original:  if ret is true . 
Translation: if _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 630:               _ = { }
Original:  _ is an empty dictionary . 
Translation: pending_references is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 631:  m = dict ( zip ( new_keys , keys ) )
Original:  zip together new_keys and keys , convert it to dictionary , assign it to m . 
Translation: d is a list of _UNK class _UNK _UNK _UNK d and substitute the result for chunk .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=18, Reference length=16)
  1-gram: 11.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 632:  for k , v in ret . items ( ) :
Original:  for every k and v in return value of the ret . items function , 
Translation: for every k and v in return value of the function items . items ,
BLEU = 69.94 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 58.3 

Code line 633:                   _ [ m [ k ] ] = v
Original:  substitute v for value under the k-th element of m key of _ dictionary . 
Translation: substitute v for value under the k key of the item dictionary key of item
BLEU = 38.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:30.8 
  4-gram: 25.0 

Code line 634:   ret = _
Original:  substitute _ for ret . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 635:   return ret
Original:  return ret . 
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 636:    def close ( self , ** kwargs ) :
Original:  define the method close with self and dictionary pairs of elements kwargs . 
Translation: define the method read with arguments self and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:10.0 
  4-gram: 0.0 

Code line 637:           self . _cache . disconnect_all ( )
Original:  call the method self . _cache . disconnect_all . 
Translation: call the method self . _UNK . _UNK .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 638:    def incr ( self , key , delta = 1 , version = None ) :
Original:  define the method incr with self , key , delta defaulting to integer 1 and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 19.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22)
  1-gram: 63.6 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 5.3 

Code line 639:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 640:   if delta < 0 :
Original:  if delta is smaller than integer 0 , 
Translation: if exit_code is smaller than integer 0 ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 641:               return self . _cache . decr ( key , - delta )
Original:  evaluate the method self . _cache . decr with key and negative delta as arguments , return the result . 
Translation: call the method self . _UNK with 0 arguments : _UNK and _UNK , return the result .
BLEU = 32.39 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=18, Reference length=20)
  1-gram: 66.7 
  2-gram: 41.2 
  3-gram:31.2 
  4-gram: 20.0 

Code line 642:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 643:               val = self . _cache . incr ( key , delta )
Original:  call the method self . _cache . incr with key and delta as arguments , substitute the result for val . 
Translation: call the method self . _UNK with 0 arguments : key and _UNK , substitute the result for _UNK .
BLEU = 38.86 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 75.0 
  2-gram: 47.4 
  3-gram:33.3 
  4-gram: 23.5 

Code line 644:        except self . LibraryValueNotFoundException :
Original:  if self . LibraryValueNotFoundException exception is caught , 
Translation: if self . _UNK exception is caught ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 645:               val = None
Original:  val is None . 
Translation: val is None .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 646:   if val is None :
Original:  if val is None , 
Translation: if val is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 647:               raise ValueError ( "Key '%s' not found" % key )
Original:  raise an ValueError exception with string " Key ' %s ' not found " as argument , substitute ' %s ' for key . 
Translation: raise an ValueError with an argument string " _UNK ' %s ' does ' formated with name .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=18, Reference length=24)
  1-gram: 66.7 
  2-gram: 29.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 648:   return val
Original:  return val . 
Translation: return val .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 649:    def decr ( self , key , delta = 1 , version = None ) :
Original:  define the method decr with self , key , delta defaulting to integer 1 and version defaulting to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , key , length set to None , as an integer False .
BLEU = 19.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22)
  1-gram: 63.6 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 5.3 

Code line 650:           key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 651:   if delta < 0 :
Original:  if delta is smaller than integer 0 . 
Translation: if exit_code is smaller than integer 0 ,
BLEU = 54.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 652:               return self . _cache . incr ( key , - delta )
Original:  evaluate the method self . _cache . incr with key and negative delta as arguments , return the result . 
Translation: call the method self . _UNK with 0 arguments : _UNK and _UNK , return the result .
BLEU = 32.39 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=18, Reference length=20)
  1-gram: 66.7 
  2-gram: 41.2 
  3-gram:31.2 
  4-gram: 20.0 

Code line 653:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 654:               val = self . _cache . decr ( key , delta )
Original:  call the method self . _cache . decr with key and delta as arguments , substitute the result for val . 
Translation: call the method self . _UNK with 0 arguments : key and _UNK , substitute the result for _UNK .
BLEU = 38.86 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 75.0 
  2-gram: 47.4 
  3-gram:33.3 
  4-gram: 23.5 

Code line 655:        except self . LibraryValueNotFoundException :
Original:  if self . LibraryValueNotFoundException exception is caught , 
Translation: if self . _UNK exception is caught ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 656:               val = None
Original:  val is None . 
Translation: val is None .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 657:   if val is None :
Original:  if val is None , 
Translation: if val is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 658:               raise ValueError ( "Key '%s' not found" % key )
Original:  raise an ValueError exception with string " Key ' %s ' not found " as argument , substitute ' %s ' for key . 
Translation: raise an ValueError with an argument string " _UNK ' %s ' does ' formated with name .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=18, Reference length=24)
  1-gram: 66.7 
  2-gram: 29.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 659:   return val
Original:  return val . 
Translation: return val .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 660:    def set_many ( self , data , timeout = DEFAULT_TIMEOUT , version = None ) :
Original:  define the method set_many with self , data , timeout set to DEFAULT_TIMEOUT and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , _UNK set to None , _UNK set to None .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 70.0 
  2-gram: 31.6 
  3-gram:11.1 
  4-gram: 0.0 

Code line 661:           safe_data = { }
Original:  safe_data is an empty dictionary . 
Translation: _UNK is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 662:  for key , value in data . items ( ) :
Original:  for every key and value in data . items function return value , 
Translation: for every key and value in value of dictionary keys .
BLEU = 41.37 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:44.4 
  4-gram: 37.5 

Code line 663:               key = self . make_key ( key , version = version )
Original:  call the method self . make_key with key and version set to version as arguments , substitute the result for key . 
Translation: call the method self . _UNK with 0 arguments key and default_list , substitute the result for _UNK .
BLEU = 36.89 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 78.9 
  2-gram: 50.0 
  3-gram:35.3 
  4-gram: 25.0 

Code line 664:  safe_data [ key ] = value
Original:  substitute value for value under the key key of safe_data dictionary . 
Translation: substitute value for key under the key key of dictionary .
BLEU = 47.09 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 90.9 
  2-gram: 70.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 665:   self . _cache . set_multi ( safe_data , self . get_backend_timeout ( timeout ) )
Original:  call the method self . _cache . set_multi with safe_data , self . get_backend_timeout ( timeout ) as arguments . 
Translation: call the method self . _UNK with 0 arguments : _UNK , _UNK and self .
BLEU = 22.42 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=16, Reference length=20)
  1-gram: 62.5 
  2-gram: 33.3 
  3-gram:21.4 
  4-gram: 15.4 

Code line 666:    def delete_many ( self , keys , version = None ) :
Original:  define the function delete_many with self , keys and version set to None as arguments . 
Translation: define the method _UNK with 0 arguments : self , _UNK and dklen set to None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 64.7 
  2-gram: 25.0 
  3-gram:6.7 
  4-gram: 0.0 

Code line 667:           l = lambda x : self . make_key ( x , version = version )
Original:  l is lambda function with argument x , that calls the method self . make_key with x and version set to version as arguments . 
Translation: _UNK is a function with 0 arguments x , t for self . t . define method replace without the result of the result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 44.0 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 668:  self . _cache . delete_multi ( map ( l , keys ) )
Original:  call the method self_cache . delete_multi with argument list containing keys mapped through function l . 
Translation: call the method self . _UNK with 0 arguments : _UNK and _UNK ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 35.7 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 669:    def clear ( self ) :
Original:  define the method clear with argument self . 
Translation: define the method clear with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 670:           self . _cache . flush_all ( )
Original:  call the method self . _cache_flush_all . 
Translation: call the method self . _UNK . _UNK .
BLEU = 46.71 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 671:      class MemcachedCache ( BaseMemcachedCache ) :
Original:  derive the class MemcachedCache from the BaseMemcachedCache base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 672:  def __init__ ( self , server , params ) :
Original:  define the method __init__ with argument self , server and params . 
Translation: define the method __init__ with 0 arguments : self , filter_expr and parse_until .
BLEU = 32.56 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 64.3 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 18.2 

Code line 673:           import memcache
Original:  import memcache . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 674:  super ( MemcachedCache , self ) . __init__ ( server , params ,  library = memcache ,  value_not_found_exception = ValueError )
Original:  call method __init__ from the base class of the class MemcachedCache with arguments: server , params , 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : _UNK , _UNK , _UNK , _UNK ,
BLEU = 34.63 (Bravity Penalty=1.000, Length ratio=1.471, Translated length=25, Reference length=17)
  1-gram: 52.0 
  2-gram: 33.3 
  3-gram:30.4 
  4-gram: 27.3 

Code line 675:    @ property
Original:  library set to memcache and value_not_found_exception set to ValueError . property decorator , 
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=0.036, Length ratio=0.231, Translated length=3, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 676:  def _cache ( self ) :
Original:  define the method _cache with self class instance as an argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 677:           if getattr ( self , '_client' , None ) is None :
Original:  if attribute ' _client ' of the self object is None , 
Translation: get ' _UNK ' attribute of the options object ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 70.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 678:               self . _client = self . _lib . Client ( self . _servers , pickleProtocol = pickle . HIGHEST_PROTOCOL )
Original:  call the method self . _lib . Client with self . _servers and pickleProtocol set to pickle . HIGHEST_PROTOCOL as arguments , substitute the result for self . _client . 
Translation: call the method self . _UNK with 0 arguments : _UNK , _UNK and _UNK . _UNK , substitute the result for self . _UNK .
BLEU = 33.30 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=26, Reference length=30)
  1-gram: 65.4 
  2-gram: 40.0 
  3-gram:33.3 
  4-gram: 26.1 

Code line 679:   return self . _client
Original:  return self . _client . 
Translation: return self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 680:      class PyLibMCCache ( BaseMemcachedCache ) :
Original:  derive the class PyLibMCCache from BaseMemcachedCache base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 0.0 

Code line 681:  def __init__ ( self , server , params ) :
Original:  define the method __init__ with self , server and params as arguments . 
Translation: define the method __init__ with 0 arguments : self , filter_expr and parse_until .
BLEU = 33.43 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 18.2 

Code line 682:           import pylibmc
Original:  import pylibmc . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 683:  super ( PyLibMCCache , self ) . __init__ ( server , params ,  library = pylibmc ,  value_not_found_exception = pylibmc . NotFound )
Original:  call method __init__ from the base class of the class PyLibMCCache with arguments: server , params , 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : _UNK , _UNK , _UNK , _UNK set to _UNK ,
BLEU = 30.71 (Bravity Penalty=1.000, Length ratio=1.647, Translated length=28, Reference length=17)
  1-gram: 46.4 
  2-gram: 29.6 
  3-gram:26.9 
  4-gram: 24.0 

Code line 684:    @ cached_property
Original:  library set to pylibmc and value_not_found_exception set to pylibmc . NotFound . decorator cached_property , 
Translation: decorator decorator ,
BLEU = 0.00 (Bravity Penalty=0.018, Length ratio=0.200, Translated length=3, Reference length=15)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 685:  def _cache ( self ) :
Original:  define the method _cache with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 686:           client = self . _lib . Client ( self . _servers )
Original:  call the method self . _lib . Client with argument self . _servers . 
Translation: call the method self . _UNK . _UNK with the argument _UNK , substitute the result for _UNK .
BLEU = 21.95 (Bravity Penalty=1.000, Length ratio=1.357, Translated length=19, Reference length=14)
  1-gram: 47.4 
  2-gram: 22.2 
  3-gram:17.6 
  4-gram: 12.5 

Code line 687:  if self . _options :
Original:  if self . _options exists , 
Translation: if self . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 57.1 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 688:               client . behaviors = self . _options
Original:  substitute self . _options for client . behaviors . 
Translation: substitute self . _UNK for _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 689:    return client
Original:  return client . 
Translation: return doy .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 690: from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 691:   import hashlib
Original:  import module hashlib . 
Translation: import module hashlib .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 692:  from django . utils . encoding import force_bytes
Original:  from django . utils . encoding import force_bytes into default name space . 
Translation: from django . utils . encoding import force_bytes into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 693:  from django . utils . http import urlquote
Original:  from django . utils . http import urlquote into default name space . 
Translation: from django . utils . http import urlquote into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 694:   TEMPLATE_FRAGMENT_KEY_TEMPLATE = 'template.cache.%s.%s'
Original:  TEMPLATE_FRAGMENT_KEY_TEMPLATE is a string ' template . cache . %s . %s ' . 
Translation: if is an string ' django . django . _UNK ' , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=18, Reference length=14)
  1-gram: 38.9 
  2-gram: 5.9 
  3-gram:0.0 
  4-gram: 0.0 

Code line 695:    def make_template_fragment_key ( fragment_name , vary_on = None ) :
Original:  define the function make_template_fragment_key with fragment_name and vary_on defaulting to None as arguments . 
Translation: define the function _UNK with 0 arguments _UNK and _UNK set to _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 57.1 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 696:       if vary_on is None :
Original:  if vary_on is None , 
Translation: if _UNK is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 697:           vary_on = ( )
Original:  vary_on is an empty tuple . 
Translation: _UNK is an tuple .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 698:   key = ':' . join ( urlquote ( var ) for var in vary_on )
Original:  call the function urlquote with argument var for every var in vary_on , join the results into a string separated by ' : ' , substitute it for key . 
Translation: for every c in self . join if c in a string , join the return string ,
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=18, Reference length=30)
  1-gram: 55.6 
  2-gram: 23.5 
  3-gram:6.2 
  4-gram: 0.0 

Code line 699:  args = hashlib . md5 ( force_bytes ( key ) )
Original:  call the hashlib . md5 fuction with force_bytes ( key ) as argument . 
Translation: call the function pformat with argument as argument , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 40.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 700:  return TEMPLATE_FRAGMENT_KEY_TEMPLATE % ( fragment_name , args . hexdigest ( ) )
Original:  substitute ' %s ' in TEMPLATE_FRAGMENT_KEY_TEMPLATE string with fragment_name and args . hexdigest ( ) , respectively , return the result . 
Translation: return the result of the _UNK function , called with 0 arguments : _UNK and args ,
BLEU = 0.00 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=17, Reference length=22)
  1-gram: 47.1 
  2-gram: 18.8 
  3-gram:6.7 
  4-gram: 0.0 

Code line 701:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 702:   from . messages import ( CheckMessage ,  Debug , Info , Warning , Error , Critical ,  DEBUG , INFO , WARNING , ERROR , CRITICAL )
Original:  from . messages import CheckMessage , Debug , Info , Warning , Error , Critical , DEBUG , INFO , WARNING , ERROR and CRITICAL into default name space . 
Translation: from list . _UNK import _UNK , _UNK , _UNK , _UNK , _UNK , _UNK , _UNK , _UNK , _UNK ,
BLEU = 0.00 (Bravity Penalty=0.738, Length ratio=0.767, Translated length=23, Reference length=30)
  1-gram: 52.2 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 703:  from . registry import register , run_checks , tag_exists , Tags
Original:  from . registry import register , run_checks , tag_exists and Tags into default name space . 
Translation: from decimal . _UNK import _UNK , _UNK and _UNK into default name space .
BLEU = 27.37 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 66.7 
  2-gram: 28.6 
  3-gram:23.1 
  4-gram: 16.7 

Code line 704:    import django . core . checks . compatibility . django_1_6_0
Original:  import module django . core . checks . compatibility . django_1_6_0 . 
Translation: from django . core . _UNK . _UNK import module into default name .
BLEU = 22.72 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 57.1 
  2-gram: 30.8 
  3-gram:16.7 
  4-gram: 9.1 

Code line 705:  import django . core . checks . compatibility . django_1_7_0
Original:  import module django . core . checks . compatibility . django_1_7_0 . 
Translation: from django . core . _UNK . _UNK import module into default name .
BLEU = 22.72 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 57.1 
  2-gram: 30.8 
  3-gram:16.7 
  4-gram: 9.1 

Code line 706:  import django . core . checks . model_checks
Original:  import module django . core . checks . model_checks . 
Translation: from django . core . core import _UNK .
BLEU = 29.56 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 707:   __all__ = [  'CheckMessage' ,  'Debug' , 'Info' , 'Warning' , 'Error' , 'Critical' ,  'DEBUG' , 'INFO' , 'WARNING' , 'ERROR' , 'CRITICAL' ,  'register' , 'run_checks' , 'tag_exists' , 'Tags' ,  ]
Original:  __all__ is a list containing next strings , ' CheckMessage ' , ' Debug ' , ' Info ' , ' Warning ' , ' Error ' , ' Critical ' , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.031, Translated length=1, Reference length=32)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 708:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 709:   from django . apps import apps
Original:  from django . apps import apps into default name space . 
Translation: from django . apps import apps into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 710:   from . . import Warning , register , Tags
Original:  from . . import Warning , register and Tags into default name space . 
Translation: from django . _UNK import _UNK and _UNK into default name space .
BLEU = 31.02 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 711:    @ register ( Tags . compatibility )
Original:  decorator register with argument Tags . compatibility . 
Translation: decorator function register with an argument _UNK . _UNK _UNK _UNK " .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.625, Translated length=13, Reference length=8)
  1-gram: 46.2 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 712:  def check_1_6_compatibility ( ** kwargs ) :
Original:  define the function check_1_6_compatibility with argument kwargs dictionary . 
Translation: define the function _UNK with an argument unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9)
  1-gram: 72.7 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 713:       errors = [ ]
Original:  errors is an empty list 
Translation: errors is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 714:  errors . extend ( _check_test_runner ( ** kwargs ) )
Original:  call the function _check_test_runner with dictionary kwargs as argument , use the result as an argument for the call to the function errors . extend . 
Translation: call the function _UNK with unpacked list _UNK with unpacked dictionary errors as an argument ,
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=16, Reference length=26)
  1-gram: 62.5 
  2-gram: 33.3 
  3-gram:14.3 
  4-gram: 0.0 

Code line 715:  errors . extend ( _check_boolean_field_default_value ( ** kwargs ) )
Original:  call the function _check_boolean_field_default_value with dictionary kwargs as argument , use the result as an argument for the call to the function errors . extend . 
Translation: call the function _UNK with unpacked list _UNK with unpacked dictionary errors as an argument ,
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=16, Reference length=26)
  1-gram: 62.5 
  2-gram: 33.3 
  3-gram:14.3 
  4-gram: 0.0 

Code line 716:  return errors
Original:  return errors . 
Translation: return errors .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 717:     def _check_test_runner ( app_configs = None , ** kwargs ) :
Original:  define the function _check_test_runner with app_config set to None and kwargs dictionary as arguments . 
Translation: define the function _UNK with 0 arguments : key and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 718:  from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 719:             weight = 0
Original:  weight is an integer 0 . 
Translation: _UNK is integer 0 .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 720:      if not settings . is_overridden ( 'TEST_RUNNER' ) :
Original:  if call to the settings . is_overridden with string ' TEST_RUNNER ' evaluates to boolean False . 
Translation: if settings . _UNK is not string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.580, Length ratio=0.647, Translated length=11, Reference length=17)
  1-gram: 54.5 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 721:             try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 722:               settings . SITE_ID
Original:  settings . SITE_ID . 
Translation: settings settings . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 723:  weight += 2
Original:  increment weight by integer 2 . 
Translation: increment _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 724:   except AttributeError :
Original:  if AttributeError exception is caught , 
Translation: if AttributeError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 725:               pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 726:     try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 727:               settings . BASE_DIR
Original:  settings . BASE_DIR . 
Translation: settings settings . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 728:   except AttributeError :
Original:  if AttributeError exception is caught , 
Translation: if AttributeError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 729:               weight += 2
Original:  increment weight by integer 2 . 
Translation: increment _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 730:     if settings . is_overridden ( 'TEMPLATE_LOADERS' ) :
Original:  call the function settings . is_overridden with argument string ' TEMPLATE_LOADERS ' , if it evaluates to boolean True , 
Translation: if settings . _UNK is string ' , with the result ' evaluates to boolean True ,
BLEU = 26.70 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:20.0 
  4-gram: 14.3 

Code line 731:               weight += 2
Original:  increment weight by integer 2 . 
Translation: increment _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 732:     if settings . is_overridden ( 'MANAGERS' ) :
Original:  call the function settings . is_overridden with argument string ' MANAGERS ' , if it evaluates to boolean True , 
Translation: if settings . _UNK is string ' , with string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=14, Reference length=20)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 733:               weight += 2
Original:  increment weight by integer 2 . 
Translation: increment _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 734:      if settings . is_overridden ( 'ADMINS' ) :
Original:  call the function settings . is_overridden with argument string ' ADMINS ' , if it evaluates to boolean True , 
Translation: if settings . _UNK is string ' , with string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=14, Reference length=20)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 735:               weight += 1
Original:  increment weight by integer 2 . 
Translation: increment _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 736:     if 'django.middleware.clickjacking.XFrameOptionsMiddleware' not in set ( settings . MIDDLEWARE_CLASSES ) :
Original:  if string ' django . middleware . clickjacking . XFrameOptionsMiddleware ' is not contained in settings . MIDDLEWARE_CLASSES set , 
Translation: if string . _UNK . _UNK . _UNK is not contained in _UNK ' _UNK ' _UNK ' ,
BLEU = 17.00 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 63.2 
  2-gram: 22.2 
  3-gram:11.8 
  4-gram: 6.2 

Code line 737:               weight += 1
Original:  increment weight by integer 2 . 
Translation: increment _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 738:     if weight >= 6 :
Original:  if weight is greater or equal to integer 6 , 
Translation: if _UNK is greater or equal to integer 0 ,
BLEU = 55.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:50.0 
  4-gram: 42.9 

Code line 739:           return [  Warning (  "Some project unittests may not execute as expected." ,  hint = ( "Django 1.6 introduced a new default test runner. It looks like "  "this project was generated using Django 1.5 or earlier. You should "  "ensure your tests are all running & behaving as expected. See "  "https://docs.djangoproject.com/en/dev/releases/1.6/#new-test-runner "  "for more information." ) ,  obj = None ,  id = '1_6.W001' ,  )  ]
Original:  call the Warning function with 3 arguments: hint tuple containing one string , Django 1 . 6 introduced a new default test runner . 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.042, Translated length=1, Reference length=24)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 740:   else :
Original:  It looks like this project was generated using Django 1 . 5 or earlier . You should ensure your tests are all running & behaving as expected . See https://docs . djangoproject . com/en/dev/releases/1 . 6/#new-test-runner for more information . " , obj set to None and id set to a string ' 1_6 . W001 ' , put the result into a list and return it . if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.042, Translated length=3, Reference length=71)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 741:           return [ ]
Original:  return an empty list . 
Translation: return an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 742:      def _check_boolean_field_default_value ( app_configs = None , ** kwargs ) :
Original:  define the function _check_boolean_field_default_value with app_config set to None and kwargs dictionary as arguments . 
Translation: define the function _UNK with 0 arguments : key and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 743:  from django . db import models
Original:  from django . db import models into default name space . 
Translation: from django . db import models into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 744:   problem_fields = [  field  for model in apps . get_models ( ** kwargs )  if app_configs is None or model . _meta . app_config in app_configs  for field in model . _meta . local_fields  if isinstance ( field , models . BooleanField ) and not field . has_default ( )  ]
Original:  append field to problem_fields list for every model in apps . get_models with argument kwargs dictionary , only if app_configs is None , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.043, Translated length=1, Reference length=23)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 745:   return [  Warning (  "BooleanField does not have a default value." ,  hint = ( "Django 1.6 changed the default value of BooleanField from False to None. "  "See https://docs.djangoproject.com/en/1.6/ref/models/fields/#booleanfield "  "for more information." ) ,  obj = field ,  id = '1_6.W002' ,  )  for field in problem_fields  ]
Original:  or model . _meta . app_config is contained in app_configs , for every field in model . _meta . local_fields , #ANNOTATION only if field is an instance of models . BooleanField and field . has_default ( ) evaluates to False . call the Warning function with 4 arguments: string " BooleanField does not have a default value . " , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.016, Translated length=1, Reference length=61)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 746: from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 747:   from . . import Warning , register , Tags
Original:  from . . import Warning , register and Tags into default name space . 
Translation: from django . _UNK import _UNK and _UNK into default name space .
BLEU = 31.02 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 748:    @ register ( Tags . compatibility )
Original:  decorator register with argument Tags . compatibility . 
Translation: decorator function register with an argument _UNK . _UNK _UNK _UNK " .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.625, Translated length=13, Reference length=8)
  1-gram: 46.2 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 749:  def check_1_7_compatibility ( ** kwargs ) :
Original:  define the function check_1_7_compatibility with argument kwargs dictionary . 
Translation: define the function _UNK with an argument unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9)
  1-gram: 72.7 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 750:       errors = [ ]
Original:  errors is an empty list . 
Translation: errors is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 751:  errors . extend ( _check_middleware_classes ( ** kwargs ) )
Original:  call the function _check_middleware_classes with dictionary kwargs as argument , use the result as an argument for the call to the function errors . extend . 
Translation: call the function _UNK with unpacked list _UNK with unpacked dictionary errors as an argument ,
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=16, Reference length=26)
  1-gram: 62.5 
  2-gram: 33.3 
  3-gram:14.3 
  4-gram: 0.0 

Code line 752:  return errors
Original:  return errors . 
Translation: return errors .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 753:     def _check_middleware_classes ( app_configs = None , ** kwargs ) :
Original:  define the function _check_middleware_classes with app_config set to None and kwargs dictionary as arguments . 
Translation: define the function _UNK with 0 arguments : key and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 754:  from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 755:     if not settings . is_overridden ( 'MIDDLEWARE_CLASSES' ) :
Original:  call the function settings . is_overridden with argument string ' MIDDLEWARE_CLASSES ' , if the result is boolean False , 
Translation: if settings . _UNK is not string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.441, Length ratio=0.550, Translated length=11, Reference length=20)
  1-gram: 72.7 
  2-gram: 30.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 756:           return [  Warning (  "MIDDLEWARE_CLASSES is not set." ,  hint = ( "Django 1.7 changed the global defaults for the MIDDLEWARE_CLASSES. "  "django.contrib.sessions.middleware.SessionMiddleware, "  "django.contrib.auth.middleware.AuthenticationMiddleware, and "  "django.contrib.messages.middleware.MessageMiddleware were removed from the defaults. "  "If your project needs these middleware then you should configure this setting." ) ,  obj = None ,  id = '1_7.W001' ,  )  ]
Original:  call the Warning function with 4 arguments: string " MIDDLEWARE_CLASSES is not set . " , hint tuple containing one string , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.045, Translated length=1, Reference length=22)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 757:   else :
Original:  " Django 1 . 7 changed the global defaults for the MIDDLEWARE_CLASSES . django . contrib . sessions . middleware . SessionMiddleware , django . contrib . auth . middleware . AuthenticationMiddleware , and django . contrib . messages . middleware . MessageMiddleware were removed from the defaults . If your project needs these middleware then you should configure this setting . " , obj set to None , and id set to a string ' 1_7 . W001 ' , put the result into a list and return it . if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.032, Translated length=3, Reference length=94)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 758:           return [ ]
Original:  return an empty list . 
Translation: return an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 759:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 760:   from django . utils . encoding import python_2_unicode_compatible , force_str
Original:  from django . utils . encoding import python_2_unicode_compatible and force_st into default name space . 
Translation: from django . utils . encoding import force_str and python_0_unicode_compatible into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 761:     DEBUG = 10
Original:  DEBUG is integer 10 . 
Translation: substitute offset for integer .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 762:  INFO = 20
Original:  INFO is integer 20 . 
Translation: substitute week_number for 00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 763:  WARNING = 30
Original:  WARNING is integer 30 . 
Translation: substitute integer integer 00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 764:  ERROR = 40
Original:  ERROR is integer 40 . 
Translation: substitute integer integer 00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 765:  CRITICAL = 50
Original:  CRITICAL is integer 50 . 
Translation: _UNK is integer 00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 766:    @ python_2_unicode_compatible
Original:  decorator python_2_unicode_compatible . 
Translation: python_0_unicode_compatible decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 767:  class CheckMessage ( object ) :
Original:  derive class CheckMessage from object base class . 
Translation: derive the class _UNK from object base class .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 768:        def __init__ ( self , level , msg , hint = None , obj = None , id = None ) :
Original:  define initialization method __init__ with self class instance , level , msg , hint defaulting to None , obj defaulting to None and if defaulting to None as arguments . 
Translation: define the method __init__ with 0 arguments : self , msg , _UNK set to None , _UNK set to None and namespace set to None .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=27, Reference length=30)
  1-gram: 66.7 
  2-gram: 34.6 
  3-gram:16.0 
  4-gram: 0.0 

Code line 769:           assert isinstance ( level , int ) , "The first argument should be level."
Original:  if level is not an integer raise an error with message string " The first argument should be level . " . 
Translation: if level is an empty six . level or level type or an list . " or type type .
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 45.0 
  2-gram: 15.8 
  3-gram:5.6 
  4-gram: 0.0 

Code line 770:  self . level = level
Original:  substitute level for self . level . 
Translation: substitute level for self . level .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 771:  self . msg = msg
Original:  substitute msg for self . msg . 
Translation: substitute msg for self . msg .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 772:  self . hint = hint
Original:  substitute hint for self . hint . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 773:  self . obj = obj
Original:  substitute obj for self . obj . 
Translation: obj obj to the obj of self class instance of this class instance .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.000, Translated length=14, Reference length=7)
  1-gram: 28.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 774:  self . id = id
Original:  substitute id for self . id . 
Translation: substitute id for self . id .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 775:    def __eq__ ( self , other ) :
Original:  define private method __eq__ with self class instance and other as arguments . 
Translation: define the method __eq__ with an argument self .
BLEU = 0.00 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 776:           return all ( getattr ( self , attr ) == getattr ( other , attr )  for attr in [ 'level' , 'msg' , 'hint' , 'obj' , 'id' ] )
Original:  if for all attr in list of attributes ' level ' , ' msg ' , ' hint ' , ' obj ' and ' id ' , self and other have the same attribute attr , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.027, Translated length=1, Reference length=37)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 777:    def __ne__ ( self , other ) :
Original:  return boolean True , otherwise return boolean False . define private method __ne__ with self class instance and other as arguments . 
Translation: define the method __ne__ with an argument self .
BLEU = 0.00 (Bravity Penalty=0.236, Length ratio=0.409, Translated length=9, Reference length=22)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 778:           return not ( self == other )
Original:  if self equals to other return boolean False , otherwise return True . 
Translation: if other equals other other other return boolean True ,
BLEU = 0.00 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13)
  1-gram: 70.0 
  2-gram: 22.2 
  3-gram:12.5 
  4-gram: 0.0 

Code line 779:    def __str__ ( self ) :
Original:  define private method __str__ with argument self . 
Translation: define the method __str__ with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 780:           from django . db import models
Original:  from django . db import models into default name space . 
Translation: from django . db import models into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 781:   if self . obj is None :
Original:  if self . obj is None , 
Translation: if self . instance is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 782:               obj = "?"
Original:  obj is a string " ? " . 
Translation: obj is a string " " .
BLEU = 61.30 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 100.0 
  2-gram: 83.3 
  3-gram:60.0 
  4-gram: 50.0 

Code line 783:   elif isinstance ( self . obj , models . base . ModelBase ) :
Original:  otherwise if self . object is an instance of the models . base . ModelBase class , 
Translation: otherwise self . obj is an instance of models . type type and obj object type ,
BLEU = 20.95 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 64.7 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 7.1 

Code line 784:                 model = self . obj
Original:  substitute self . obj for model . 
Translation: substitute self . model for model .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 785:  app = model . _meta . app_label
Original:  substitute model . _meta . app_label for app . 
Translation: substitute model . model . model for model .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 786:  obj = '%s.%s' % ( app , model . _meta . object_name )
Original:  convert app and model . _meta . object_name to strings , join them with separating ' . ' character , substitute it for obj . 
Translation: model is a string ' %s ' . model with model . model . model . _meta . _meta . _meta . _meta .
BLEU = 12.43 (Bravity Penalty=0.959, Length ratio=0.960, Translated length=24, Reference length=25)
  1-gram: 37.5 
  2-gram: 17.4 
  3-gram:9.1 
  4-gram: 4.8 

Code line 787:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 788:               obj = force_str ( self . obj )
Original:  call the function force_str with argument self . obj , substitute the result for obj . 
Translation: call the function obj with obj and obj as obj , substitute the result for
BLEU = 40.54 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 50.0 
  3-gram:38.5 
  4-gram: 25.0 

Code line 789:   id = "(%s) " % self . id if self . id else ""
Original:  if self . id exists , convert self . id to a string , surround it with round brackets , substitute id for it , otherwise id is an empty string . 
Translation: convert character " id " character " d " d " d " d " , respectively . if d is replaced , otherwise d
BLEU = 0.00 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32)
  1-gram: 32.0 
  2-gram: 4.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 790:  hint = "\n\tHINT: %s" % self . hint if self . hint else ''
Original:  if self . hint exists , replace ' %s ' in a string " \n\tHINT: %s " with value of self . hint , substitute it for hint , otherwise hint is an empty string . 
Translation: _UNK is a string " _UNK _UNK : _UNK " _UNK " , substitute ' %s ' with self . __name__ .
BLEU = 0.00 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=22, Reference length=36)
  1-gram: 63.6 
  2-gram: 28.6 
  3-gram:10.0 
  4-gram: 0.0 

Code line 791:  return "%s: %s%s%s" % ( obj , id , self . msg , hint )
Original:  replace all ' %s ' from string " %s: %s%s%s " with values of obj , id , self . msg and hint , respectively , return the result . 
Translation: return a string " %s : %s " , where the results are _UNK the self . name and output .
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=21, Reference length=30)
  1-gram: 52.4 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 792:    def __repr__ ( self ) :
Original:  define private method __repr__ with argument self . 
Translation: define the method __repr__ with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 793:           return "<%s: level=%r, msg=%r, hint=%r, obj=%r, id=%r>" % ( self . __class__ . __name__ , self . level , self . msg , self . hint , self . obj , self . id )
Original:  in the string " <%s: level=%r , msg=%r , hint=%r , obj=%r , id=%r> " , replace ' %s ' with the name of the type of this class instance , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.032, Translated length=1, Reference length=31)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 794:    def is_serious ( self ) :
Original:  replace all the ' %r ' with self . level , self . msg , self . hint . self . obj and self . id , respectively , return the result . define the method is_serious with argument self . 
Translation: define the method reload with an argument self .
BLEU = 0.00 (Bravity Penalty=0.029, Length ratio=0.220, Translated length=9, Reference length=41)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 795:           return self . level >= ERROR
Original:  return boolean True if self . level is greater than or equals to ERROR , otherwise return boolean False . 
Translation: if self . max_length is not of list is None .
BLEU = 0.00 (Bravity Penalty=0.441, Length ratio=0.550, Translated length=11, Reference length=20)
  1-gram: 45.5 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 796:    def is_silenced ( self ) :
Original:  define the method is_silence with argument self . 
Translation: define the method is_valid with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 797:           from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 798:  return self . id in settings . SILENCED_SYSTEM_CHECKS
Original:  if self . id is contained in settings . SILENCED_SYSTEM_CHECKS return boolean True , False otherwise . 
Translation: if format is contained in self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.411, Length ratio=0.529, Translated length=9, Reference length=17)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 799:      class Debug ( CheckMessage ) :
Original:  derive the class Debug from base class CheckMessage . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 800:       def __init__ ( self , * args , ** kwargs ) :
Original:  define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments . 
Translation: define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 25.59 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 801:           return super ( Debug , self ) . __init__ ( DEBUG , * args , ** kwargs )
Original:  call the __init__ method with 3 arguments: DEBUG , unpacked list args and unpacked dictionary kwargs from the base class of Debug . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : unpacked list args ,
BLEU = 24.71 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 802:      class Info ( CheckMessage ) :
Original:  derive the class Info from base class CheckMessage . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 803:       def __init__ ( self , * args , ** kwargs ) :
Original:  define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments . 
Translation: define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 25.59 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 804:           return super ( Info , self ) . __init__ ( INFO , * args , ** kwargs )
Original:  call the __init__ method with 3 arguments: INFO , unpacked list args and unpacked dictionary kwargs from the base class of Info . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : unpacked list args ,
BLEU = 24.71 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 805:      class Warning ( CheckMessage ) :
Original:  derive the class Warning from base class CheckMessage . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 806:       def __init__ ( self , * args , ** kwargs ) :
Original:  define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments . 
Translation: define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 25.59 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 807:           return super ( Warning , self ) . __init__ ( WARNING , * args , ** kwargs )
Original:  call the __init__ method with 3 arguments: WARNING , unpacked list args and unpacked dictionary kwargs from the base class of Warning . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : unpacked list args ,
BLEU = 24.71 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 808:      class Error ( CheckMessage ) :
Original:  derive the class Error from base class CheckMessage . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 809:       def __init__ ( self , * args , ** kwargs ) :
Original:  define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments . 
Translation: define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 25.59 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 810:           return super ( Error , self ) . __init__ ( ERROR , * args , ** kwargs )
Original:  call the __init__ method with 3 arguments: ERROR , unpacked list args and unpacked dictionary kwargs from the base class of Error . 
Translation: call the method __init__ from the base class of the class SortedDict , with 0 arguments : unpacked list args ,
BLEU = 24.71 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 811:      class Critical ( CheckMessage ) :
Original:  derive the class Critical from base class CheckMessage . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 812:       def __init__ ( self , * args , ** kwargs ) :
Original:  define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments . 
Translation: define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 25.59 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 813:           return super ( Critical , self ) . __init__ ( CRITICAL , * args , ** kwargs )
Original:  call the __init__ method with 3 arguments: CRITICAL , unpacked list args and unpacked dictionary kwargs from the base class of Critical . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : unpacked list args ,
BLEU = 24.71 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 814:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 815:   from itertools import chain
Original:  from itertools import chain into default name space . 
Translation: from itertools import chain into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 816:  import types
Original:  import module types . 
Translation: import module types .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 817:   from django . apps import apps
Original:  from django . apps import apps into default name space . 
Translation: from django . apps import apps into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 818:   from . import Error , Tags , register
Original:  from . import Error , Tags and register into default name space . 
Translation: from lib0to0 . AutoField import and _UNK into default name space .
BLEU = 33.78 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:30.0 
  4-gram: 22.2 

Code line 819:    @ register ( Tags . models )
Original:  decorator register with Tags . models as an argument . 
Translation: decorator function register . filter with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 70.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 820:  def check_all_models ( app_configs = None , ** kwargs ) :
Original:  define the function check_all_models with app_configs defaulting to None and unpacked dictionary kwargs as arguments . 
Translation: define the function _UNK with 0 arguments : key and unpacked dictionary kwargs .
BLEU = 24.37 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 9.1 

Code line 821:       errors = [ model . check ( ** kwargs )  for model in apps . get_models ( )  if app_configs is None or model . _meta . app_config in app_configs ]
Original:  call the model . check method with unpacked dictionary kwargs for every model in return value of function apps . get_models , 
Translation: for every in in value call the function fp . read with an argument : perform return value of the function get_by_natural_key ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.045, Translated length=23, Reference length=22)
  1-gram: 52.2 
  2-gram: 18.2 
  3-gram:4.8 
  4-gram: 0.0 

Code line 822:  return list ( chain ( * errors ) )
Original:  only if app_configs is None ot model . _meta . app_config is contained in app_configs , error is a list containing all the previous elements . chain all errors elements into a list , return it . 
Translation: convert list converted into a list , return _UNK list .
BLEU = 3.59 (Bravity Penalty=0.094, Length ratio=0.297, Translated length=11, Reference length=37)
  1-gram: 63.6 
  2-gram: 40.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 823:     @ register ( Tags . models , Tags . signals )
Original:  decorator register with Tags . models and Tags . signals as arguments . 
Translation: decorator function register . _UNK with 0 arguments : _UNK , _UNK . _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.308, Translated length=17, Reference length=13)
  1-gram: 47.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 824:  def check_model_signals ( app_configs = None , ** kwargs ) :
Original:  define the function check_model_signals with app_config defaulting to None and unpacked dictionary kwargs as arguments , 
Translation: define the function _UNK with 0 arguments : key and unpacked dictionary kwargs .
BLEU = 23.73 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 64.3 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 9.1 

Code line 825:  from django . db import models
Original:  from django . db import models into default name space . 
Translation: from django . db import models into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 826:  errors = [ ]
Original:  errors is an empty list . 
Translation: errors is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 827:   for name in dir ( models . signals ) :
Original:  for name in attributes of models_signals object , 
Translation: for every name in existing . _UNK _UNK , append the result to the result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.000, Translated length=16, Reference length=8)
  1-gram: 25.0 
  2-gram: 6.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 828:           obj = getattr ( models . signals , name )
Original:  get models . signals name attribute , store it in obj . 
Translation: get attribute . name attribute of the obj object , substitute it for obj .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 53.3 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 829:  if isinstance ( obj , models . signals . ModelSignal ) :
Original:  if obj is instance of models . signals . ModelSignal class , 
Translation: if obj is an instance of models . models class ,
BLEU = 34.53 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:33.3 
  4-gram: 12.5 

Code line 830:               for reference , receivers in obj . unresolved_references . items ( ) :
Original:  for every reference and receivers in return value of the call of obj . unresolved_references . items method , 
Translation: for every _UNK and _UNK in return value of the method _UNK . _UNK .
BLEU = 24.27 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 16.7 

Code line 831:                   for receiver , _ , _ in receivers :
Original:  for every receiver , _ and _ in receivers , 
Translation: for every _UNK and _UNK in _UNK ,
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 62.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 832:                         if isinstance ( receiver , types . FunctionType ) :
Original:  if receiver is an instance of types . FunctionType type , 
Translation: if an class instance of Node class or type type .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 54.5 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 833:                           description = "The '%s' function" % receiver . __name__
Original:  description is a string " The ' %s ' function " replaced by value of receiver . __name__ . 
Translation: missing_args_message is a string ' _UNK ' %s ' , where ' %s ' is replaced with name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 42.1 
  2-gram: 22.2 
  3-gram:11.8 
  4-gram: 0.0 

Code line 834:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 835:                           description = "An instance of the '%s' class" % receiver . __class__ . __name__
Original:  description is a string " An instance of the ' %s ' class " with ' %s ' replaced by value of receiver . __class__ . __name__ . 
Translation: help is a string " _UNK _UNK the _UNK " _UNK ' %s ' . " ,
BLEU = 11.85 (Bravity Penalty=0.524, Length ratio=0.607, Translated length=17, Reference length=28)
  1-gram: 58.8 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 7.1 

Code line 836:   errors . append (  Error (  "%s was connected to the '%s' signal "  "with a lazy reference to the '%s' sender, "  "which has not been installed." % (  description , name , '.' . join ( reference )  ) ,  obj = receiver . __module__ ,  hint = None ,  id = 'signals.E001'  )  )
Original:  call the Error function with 4 arguments , string " %s was connected to the ' %s ' signal with a lazy reference to the ' %s ' sender , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.033, Translated length=1, Reference length=30)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 837:      return errors
Original:  which has not been installed . " with all the ' %s ' replaced by values of description , name and reference joined into a string delimited by ' . ' , respectively , obj set to receiver . __module__ , hint set to None and id set to string ' signals . E001 ' , append the result to errors . return errors . 
Translation: return errors .
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.046, Translated length=3, Reference length=65)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 838:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 839:   from itertools import chain
Original:  from itertools import chain into default name space . 
Translation: from itertools import chain into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 840:   from django . utils . itercompat import is_iterable
Original:  from django . utils . itercompat import is_iterable into default name space . 
Translation: from django . utils . _UNK import _UNK into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 841:    class Tags ( object ) :
Original:  derive the class Tags with base class object . 
Translation: derive the class _UNK from object base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 842:  admin = 'admin'
Original:  admin is a string ' admin ' 
Translation: _UNK is a string ' _UNK ' .
BLEU = 36.56 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 843:  compatibility = 'compatibility'
Original:  compatibility is a string ' compatibility ' . 
Translation: _UNK is a string ' _UNK ' .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 844:  models = 'models'
Original:  models is a string ' models ' 
Translation: MAX_NUM_FORM_COUNT is a string ' models ' .
BLEU = 68.04 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 75.0 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 845:  signals = 'signals'
Original:  signal is a string ' signals ' 
Translation: substitute every string ' state ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 42.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 846:     class CheckRegistry ( object ) :
Original:  derive the class CheckRegistry with object as base class . 
Translation: derive the class _UNK from object base class .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 847:        def __init__ ( self ) :
Original:  define initialization method __init__ with argument self . 
Translation: define the method __init__ with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 848:           self . registered_checks = [ ]
Original:  self . registered_checks is an empty list . 
Translation: self . _UNK is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 849:    def register ( self , * tags ) :
Original:  define the method register with self ans unpacked list tags as arguments . 
Translation: define the method unclosed_block_tag with 0 arguments : self and unpacked list .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 69.2 
  2-gram: 25.0 
  3-gram:9.1 
  4-gram: 0.0 

Code line 850:   def inner ( check ) :
Original:  define the method inner with argument check . 
Translation: define the method exhaust with an argument list .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 851:               check . tags = tags
Original:  replace tags for check . tags . 
Translation: substitute messages for boundary . source .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 852:  if check not in self . registered_checks :
Original:  if check is not contained in self . registered_checks . 
Translation: if _UNK is not contained in self . _UNK ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 70.0 
  2-gram: 55.6 
  3-gram:50.0 
  4-gram: 42.9 

Code line 853:                   self . registered_checks . append ( check )
Original:  call the method self . registered_checks . append with argument check . 
Translation: append _UNK to self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.490, Length ratio=0.583, Translated length=7, Reference length=12)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 854:   return check
Original:  return check . 
Translation: return total_forms .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 855:    return inner
Original:  return inner . 
Translation: self . _wrapped .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 856:    def run_checks ( self , app_configs = None , tags = None ) :
Original:  define the method run_checks with self class instance , app_configs defaulting to None , tags defaulting to None as argument . 
Translation: define the method _UNK with 0 arguments : self , app_configs set to None and dirs set to None .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 60.0 
  2-gram: 26.3 
  3-gram:5.6 
  4-gram: 0.0 

Code line 857:  errors = [ ]
Original:  errors is an empty list . 
Translation: errors is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 858:  if tags is not None :
Original:  if tags is not None . 
Translation: if only_initial is not None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 859:               checks = [ check for check in self . registered_checks  if hasattr ( check , 'tags' ) and set ( check . tags ) & set ( tags ) ]
Original:  append check to checks list , for every check in self . register_checks , if check has an attribute ' tags ' and check . tags and tags set intersection is a non empty set . 
Translation: for every self . _UNK in a list containing 0 elements : _UNK of the method _UNK . _UNK with an argument _UNK ,
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=24, Reference length=36)
  1-gram: 41.7 
  2-gram: 8.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 860:   else :
Original:  if not . 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 861:               checks = self . registered_checks
Original:  substitute self . registered_checks for checks . 
Translation: substitute self . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 862:    for check in checks :
Original:  for every check in checks , 
Translation: for every _UNK in iterator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 863:               new_errors = check ( app_configs = app_configs )
Original:  call the check function with argument app_config set to app_config , substitute the result for new_errors . 
Translation: call the method _UNK with an argument app_configs set to app_configs , substitute the result
BLEU = 20.57 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 66.7 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 864:  assert is_iterable ( new_errors ) , (  "The function %r did not return a list. All functions registered "  "with the checks registry must return a list." % check )
Original:  if new_errors is not an iterable object raise an error with error message " The function %r did not return a list . All functions registered with the checks registry must return a list . " , with ' %s ' replaced by value of check . 
Translation: return an instance of the function _UNK with an argument _UNK , _UNK _UNK with an string " _UNK ( _UNK _UNK _UNK . _UNK be _UNK . " ,
BLEU = 0.00 (Bravity Penalty=0.567, Length ratio=0.638, Translated length=30, Reference length=47)
  1-gram: 43.3 
  2-gram: 6.9 
  3-gram:3.6 
  4-gram: 0.0 

Code line 865:  errors . extend ( new_errors )
Original:  call the method errors . extend with argument new_errors . 
Translation: extend list with out .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=5, Reference length=10)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 866:   return errors
Original:  return errors . 
Translation: return errors .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 867:    def tag_exists ( self , tag ) :
Original:  define the method tag_exists with self class instance and tag as arguments . 
Translation: define the method tag with 0 arguments : self and unique_check .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 868:           return tag in self . tags_available ( )
Original:  return boolean True if tag is contained in self . tags_available method return value , return False otherwise . 
Translation: for every _UNK in return value of the method self . _UNK , return the
BLEU = 0.00 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 53.3 
  2-gram: 21.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 869:    def tags_available ( self ) :
Original:  define the method tags_available with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 870:           return set ( chain ( * [ check . tags for check in self . registered_checks if hasattr ( check , 'tags' ) ] ) )
Original:  append check . tags into a list for every check in self . registered_checks if check has ' tags ' attribute , put the elements into a set and return it . 
Translation: yield a tuple with 0 elements : self . _UNK , unpacked list containing a list with an argument tuple containing an argument :
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=24, Reference length=32)
  1-gram: 29.2 
  2-gram: 8.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 871:      registry = CheckRegistry ( )
Original:  call the function CheckRegistry , substitute the result for registry . 
Translation: _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 872:  register = registry . register
Original:  substitute registry . register for register . 
Translation: substitute register . lineno for upto .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 873:  run_checks = registry . run_checks
Original:  substitute registry . run_checks for run_checks . 
Translation: substitute mtime . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 874:  tag_exists = registry . tag_exists
Original:  substitute registry . tag_exists for tag_exists . 
Translation: substitute record . propagate for package_path .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 875:  from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 876:   from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 877:  from django . middleware . csrf import get_token
Original:  from django . middleware . csrf import get_token into default name space . 
Translation: from django . core . _UNK import _UNK into default name space .
BLEU = 40.90 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:36.4 
  4-gram: 20.0 

Code line 878:  from django . utils import six
Original:  from django . utils import six into default name space . 
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 879:  from django . utils . encoding import smart_text
Original:  from django . utils . encoding import smart_text into default name space . 
Translation: from django . utils . encoding import smart_text into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 880:  from django . utils . functional import lazy
Original:  from django . utils . functional import lazy into default name space . 
Translation: from django . utils . functional import lazy into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 881:    def csrf ( request ) :
Original:  define the function csrf with an argument request . 
Translation: define the function _UNK with an argument request .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 882:  def _get_val ( ) :
Original:  define the function _get_val . 
Translation: define the function _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 883:           token = get_token ( request )
Original:  call the function get_token with an argument request , substitute the result for token . 
Translation: call the function _UNK with an argument request , substitute the result for request .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 884:  if token is None :
Original:  if token is None , 
Translation: if token is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 885:                  return 'NOTPROVIDED'
Original:  return string ' NOTPROVIDED ' . 
Translation: return string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 886:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 887:               return smart_text ( token )
Original:  call the smart_text function with an argument token , return the result . 
Translation: call the function mark_safe with an argument token , return the result .
BLEU = 71.70 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 75.0 
  3-gram:63.6 
  4-gram: 60.0 

Code line 888:    _get_val = lazy ( _get_val , six . text_type )
Original:  call the function lazy with arguments _get_val and six . text_type , substitute the result for _get_val . 
Translation: call the function _UNK with 0 arguments : _UNK and six . text_type , substitute the result for _UNK .
BLEU = 49.88 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 75.0 
  2-gram: 52.6 
  3-gram:44.4 
  4-gram: 35.3 

Code line 889:   return { 'csrf_token' : _get_val ( ) }
Original:  return an dictionary containing 1 entry: return value of the function _get_val for ' csrf_token ' . 
Translation: return the result with an entry : if the result for ' _ ' is a string ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17)
  1-gram: 36.8 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 890:     def debug ( request ) :
Original:  define the function debug with an argument request . 
Translation: define the function get_language_from_path with an argument request .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 891:  context_extras = { }
Original:  context_extras is an empty dictionary . 
Translation: _UNK is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 892:  if settings . DEBUG and request . META . get ( 'REMOTE_ADDR' ) in settings . INTERNAL_IPS :
Original:  if settings . DEBUG is true and value of the request . META dictionary under the ' REMOTE_ADDR ' key is contained in settings . INTERNAL_IPS , 
Translation: if settings . settings . is true , substitute it if string ' _UNK ' is contained in opts . rel . if value ,
BLEU = 0.00 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:8.7 
  4-gram: 0.0 

Code line 893:           context_extras [ 'debug' ] = True
Original:  value under the ' debug ' key of the context_extras dictionary is boolean True . 
Translation: _UNK is a string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.417, Length ratio=0.533, Translated length=8, Reference length=15)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 894:  from django . db import connection
Original:  from django . db import connection into default name space . 
Translation: from django . db import connection into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 895:  context_extras [ 'sql_queries' ] = connection . queries
Original:  substitute connection . queries for value under the ' debug ' key of the context_extras dictionary . 
Translation: substitute value under the ' _UNK ' key of the connection . _UNK dictionary .
BLEU = 34.94 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 86.7 
  2-gram: 57.1 
  3-gram:30.8 
  4-gram: 16.7 

Code line 896:   return context_extras
Original:  return context_extras . 
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 897:     def i18n ( request ) :
Original:  define the function i18n with an argument request . 
Translation: define the function _UNK with an argument request .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 898:       from django . utils import translation
Original:  from django . utils import translation into default name space . 
Translation: django . utils import translation into default namespace .
BLEU = 60.11 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 899:   context_extras = { }
Original:  context_extras is an empty dictionary . 
Translation: _UNK is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 900:  context_extras [ 'LANGUAGES' ] = settings . LANGUAGES
Original:  substitute settings . LANGUAGES for the value under the ' LANGUAGES ' key of the context_extras dictionary . 
Translation: substitute _UNK ' for ' is of the settings . _UNK dictionary .
BLEU = 0.00 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=13, Reference length=18)
  1-gram: 76.9 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 901:  context_extras [ 'LANGUAGE_CODE' ] = translation . get_language ( )
Original:  call the translation . get_language function , substitute the result for the value under the ' LANGUAGE_CODE ' key of the context_extras dictionary . 
Translation: call the function _UNK . _UNK with an argument , substitute the result for value under the ' _UNK ' key of the options dictionary
BLEU = 36.76 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24)
  1-gram: 72.0 
  2-gram: 45.8 
  3-gram:30.4 
  4-gram: 18.2 

Code line 902:  context_extras [ 'LANGUAGE_BIDI' ] = translation . get_language_bidi ( )
Original:  call the translation . get_language_bidi function , substitute the result for the value under the ' LANGUAGE_BIDI ' key of the context_extras dictionary . 
Translation: call the function _UNK . _UNK with an argument string ' _UNK ' , substitute the result for value .
BLEU = 19.70 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=20, Reference length=24)
  1-gram: 65.0 
  2-gram: 26.3 
  3-gram:16.7 
  4-gram: 11.8 

Code line 903:   return context_extras
Original:  return context_extras . 
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 904:     def tz ( request ) :
Original:  define the function tz with an argument request . 
Translation: define the function _UNK with an argument request .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 905:       from django . utils import timezone
Original:  from django . utils import timezone into default name space . 
Translation: from django . utils import timezone into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 906:   return { 'TIME_ZONE' : timezone . get_current_timezone_name ( ) }
Original:  return an dictionary containing 1 entry: return value of the function timezone . get_current_timezone_name for ' TIME_ZONE ' . 
Translation: return a result with an boolean True for ' content ' . define the function _UNK with an argument _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.105, Translated length=21, Reference length=19)
  1-gram: 38.1 
  2-gram: 15.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 907:     def static ( request ) :
Original:  define the function static with an argument request . 
Translation: define the function _UNK with an argument request .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 908:  return { 'STATIC_URL' : settings . STATIC_URL }
Original:  return an dictionary containing 1 entry: settings . STATIC_URL for ' STATIC_URL ' . 
Translation: return a dictionary with an entry : _UNK . _UNK . ' for ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.214, Translated length=17, Reference length=14)
  1-gram: 47.1 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 909:     def media ( request ) :
Original:  define the function media with an argument request . 
Translation: define the function get_default_timezone with request as an argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 80.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 910:  return { 'MEDIA_URL' : settings . MEDIA_URL }
Original:  return an dictionary containing 1 entry: settings . MEDIA_URL for ' MEDIA_URL ' . 
Translation: return a dictionary with an entry : _UNK . _UNK . ' for ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.214, Translated length=17, Reference length=14)
  1-gram: 47.1 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 911:     def request ( request ) :
Original:  define the function request with an argument request . 
Translation: define the function get_language_from_path with request as an argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 80.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 912:       return { 'request' : request }
Original:  return an dictionary containing 1 entry: request for ' request ' . 
Translation: return a dictionary with an entry : request ' request ' .
BLEU = 25.21 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:20.0 
  4-gram: 11.1 

Code line 913:  from functools import reduce
Original:  from functools import reduce into default name space . 
Translation: from functools import total_ordering .
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 914:  import operator
Original:  import module operator . 
Translation: import module operator .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 915:   from django . utils import six
Original:  from django . utils import six into default name space . 
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 916:  from django . utils . encoding import force_text
Original:  from django . utils . encoding import force_text into default name space . 
Translation: from django . utils . encoding import force_text into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 917:    class DjangoRuntimeWarning ( RuntimeWarning ) :
Original:  derive the class DjangoRuntimeWarning from the RuntimeWarning base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 918:       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 919:     class AppRegistryNotReady ( Exception ) :
Original:  derive the class AppRegistryNotReady from the Exception base class . 
Translation: derive the class DeserializationError from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 920:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 921:     class ObjectDoesNotExist ( Exception ) :
Original:  derive the class ObjectDoesNotExist from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 922:  silent_variable_failure = True
Original:  silent_variable_failure is an boolean True . 
Translation: _UNK is boolean True .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 923:     class MultipleObjectsReturned ( Exception ) :
Original:  derive the class MultipleObjectsReturned from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 924:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 925:     class SuspiciousOperation ( Exception ) :
Original:  derive the class SuspiciousOperation from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 926:     class SuspiciousMultipartForm ( SuspiciousOperation ) :
Original:  derive the class SuspiciousMultipartForm from the SuspiciousOperation base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 927:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 928:     class SuspiciousFileOperation ( SuspiciousOperation ) :
Original:  derive the class SuspiciousFileOperation from the SuspiciousOperation base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 929:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 930:     class DisallowedHost ( SuspiciousOperation ) :
Original:  derive the class DisallowedHost from the SuspiciousOperation base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 931:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 932:     class DisallowedRedirect ( SuspiciousOperation ) :
Original:  derive the class DisallowedRedirect from the SuspiciousOperation base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 933:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 934:     class PermissionDenied ( Exception ) :
Original:  derive the class PermissionDenied from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 935:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 936:     class ViewDoesNotExist ( Exception ) :
Original:  derive the class ViewDoesNotExist from the Exception base class . 
Translation: derive the class BadSignature from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 937:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 938:     class MiddlewareNotUsed ( Exception ) :
Original:  derive the class MiddlewareNotUsed from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 939:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 940:     class ImproperlyConfigured ( Exception ) :
Original:  derive the class ImproperlyConfigured from the Exception base class . 
Translation: derive the class DeserializationError from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 941:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 942:     class FieldError ( Exception ) :
Original:  derive the class FieldError from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 943:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 944:     NON_FIELD_ERRORS = '__all__'
Original:  NON_FIELD_ERRORS is an string ' __all__ ' . 
Translation: DARK_PALETTE is a string ' <could ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 945:    class ValidationError ( Exception ) :
Original:  derive the class ValidationError from the Exception base class . 
Translation: derive the class MultiPartParserError from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 946:  def __init__ ( self , message , code = None , params = None ) :
Original:  define the method __init__ with 4 arguments: self , message , code set to None and params set to None . 
Translation: define the method __init__ with 0 arguments : self , message set to None , code set to None and code set to None .
BLEU = 47.24 (Bravity Penalty=1.000, Length ratio=1.190, Translated length=25, Reference length=21)
  1-gram: 72.0 
  2-gram: 58.3 
  3-gram:43.5 
  4-gram: 27.3 

Code line 947:    super ( ValidationError , self ) . __init__ ( message , code , params )
Original:  call the __init__ method from the base class of the class ValidationError with arguments message , code and params . 
Translation: call the method __init__ with 0 arguments : self , instance , unpacked list args and unpacked dictionary kwargs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 45.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 948:   if isinstance ( message , ValidationError ) :
Original:  if message is an instance of ValidationError class , 
Translation: if message is an instance of tuple ,
BLEU = 62.40 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 949:               if hasattr ( message , 'error_dict' ) :
Original:  if message has an ' error_dict ' attribute , 
Translation: if message has an ' natural_key ' attribute ,
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 950:                   message = message . error_dict
Original:  substitute message . error_dict for message . 
Translation: substitute message . message for message .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 951:      elif not hasattr ( message , 'message' if six . PY3 else 'code' ) :
Original:  alternatively , if six . PY3 is true check if message does not have an attribute ' message ' , if six . PY3 is false , check if message doesnt have an attribute ' code ' , perform the following , 
Translation: otherwise for message has an ' message ' has ' and ' has ' attribute ' ,
BLEU = 0.00 (Bravity Penalty=0.230, Length ratio=0.405, Translated length=17, Reference length=42)
  1-gram: 52.9 
  2-gram: 25.0 
  3-gram:6.7 
  4-gram: 0.0 

Code line 952:                   message = message . error_list
Original:  substitute message . error_list for message . 
Translation: substitute message . message for message .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 953:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 954:                   message , code , params = message . message , message . code , message . params
Original:  substitute message . message , message . code , message . params for message , code and params , respectively . 
Translation: substitute message , message , message , message , message , message and message . message . message , message set to message , message
BLEU = 21.29 (Bravity Penalty=1.000, Length ratio=1.190, Translated length=25, Reference length=21)
  1-gram: 52.0 
  2-gram: 33.3 
  3-gram:13.0 
  4-gram: 9.1 

Code line 955:     if isinstance ( message , dict ) :
Original:  if message is an instance of dict type , 
Translation: if message is an instance of dict type ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 956:               self . error_dict = { }
Original:  self . error_dict is an empty dictionary . 
Translation: self . tokens is an empty dictionary .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 957:  for field , messages in message . items ( ) :
Original:  for every field , messages in return value of the message . items method , 
Translation: for every message in return value of the function messages . items ,
BLEU = 34.15 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 92.3 
  2-gram: 50.0 
  3-gram:27.3 
  4-gram: 20.0 

Code line 958:                   if not isinstance ( messages , ValidationError ) :
Original:  if messages is not an instance of the ValidationError class , 
Translation: if boundary is not an instance of CommandError ,
BLEU = 38.88 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 959:                       messages = ValidationError ( messages )
Original:  messages is an instance of the ValidationError class created with an argument messages . 
Translation: messages is an instance of Template class created with messages as an argument .
BLEU = 40.90 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 85.7 
  2-gram: 53.8 
  3-gram:33.3 
  4-gram: 18.2 

Code line 960:   self . error_dict [ field ] = messages . error_list
Original:  substitute messages . error_list for the value under the field key of the self . error_dict dictionary . 
Translation: substitute the result for the value . attname key of the self . ns dictionary .
BLEU = 31.71 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18)
  1-gram: 81.2 
  2-gram: 46.7 
  3-gram:28.6 
  4-gram: 15.4 

Code line 961:     elif isinstance ( message , list ) :
Original:  otherwise if message is an instance of the list type . 
Translation: otherwise if message is an instance of list ,
BLEU = 60.11 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 962:               self . error_list = [ ]
Original:  self . error_list is an empty list . 
Translation: self . keyOrder is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 963:  for message in message :
Original:  for every message is message , 
Translation: for every message in message ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 964:                    if not isinstance ( message , ValidationError ) :
Original:  if message is not an instance of the ValidationError class , 
Translation: if message is not an instance of tuple ValidationError ,
BLEU = 61.56 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 66.7 
  3-gram:62.5 
  4-gram: 57.1 

Code line 965:                       message = ValidationError ( message )
Original:  message is an instance of the ValidationError class created with an argument message . 
Translation: message is an instance and message created with message .
BLEU = 23.79 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=10, Reference length=14)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 14.3 

Code line 966:   self . error_list . extend ( message . error_list )
Original:  extend the self . error_list list with message . error_list . 
Translation: call the method self . error with an argument self . error_list .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 53.8 
  2-gram: 25.0 
  3-gram:18.2 
  4-gram: 0.0 

Code line 967:     else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 968:               self . message = message
Original:  substitute message for self . message . 
Translation: substitute message for self . message .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 969:  self . code = code
Original:  substitute code for self . code . 
Translation: substitute code for self . code .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 970:  self . params = params
Original:  substitute params for self . params . 
Translation: substitute params for self . params .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 971:  self . error_list = [ self ]
Original:  substitute list containing element self for self . error_list . 
Translation: self . keyOrder is an empty list .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 50.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 972:     @ property
Original:  property getter decorator , 
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 973:  def message_dict ( self ) :
Original:  define the method message_dict with an argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 974:             getattr ( self , 'error_dict' )
Original:  get attribute ' error_dict ' from the self object . 
Translation: get ' self ' attribute of the object object .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 975:   return dict ( self )
Original:  convert object self to a dictionary , return it . 
Translation: return dict dictionary created with self into a dictionary .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 976:    @ property
Original:  property getter decorator , 
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 977:  def messages ( self ) :
Original:  define the messages with an argument self . 
Translation: define the method M with an argument self .
BLEU = 51.33 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 978:           if hasattr ( self , 'error_dict' ) :
Original:  if self has an ' error_dict ' attribute , 
Translation: if self has an ' _files ' attribute ,
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 979:               return reduce ( operator . add , dict ( self ) . values ( ) )
Original:  call the operator . add on the values of the self object converted into a dictionary , until it is reduced to a single value , return it . 
Translation: call the method _UNK with 0 arguments : _UNK and value of the function copy . copy ,
BLEU = 0.00 (Bravity Penalty=0.543, Length ratio=0.621, Translated length=18, Reference length=29)
  1-gram: 38.9 
  2-gram: 11.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 980:   return list ( self )
Original:  convert self to a list and return it . 
Translation: return list of the list self .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 981:    def update_error_dict ( self , error_dict ) :
Original:  define the method update_error_dict with arguments self and error_dict . 
Translation: define the method _UNK with 0 arguments : self and msg .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 982:           if hasattr ( self , 'error_dict' ) :
Original:  if self has an ' error_dict ' attribute , 
Translation: if self has an ' _files ' attribute ,
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 983:               for field , error_list in self . error_dict . items ( ) :
Original:  for every field , error_list in self . error_dict . items method return value , 
Translation: call the method self . fields . items , for every field and field in the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=18, Reference length=15)
  1-gram: 55.6 
  2-gram: 23.5 
  3-gram:6.2 
  4-gram: 0.0 

Code line 984:                   error_dict . setdefault ( field , [ ] ) . extend ( error_list )
Original:  call the method extend with an argument error_list on the return value of the method error_dict . setdefault called with 2 arguments: field and an empty list . 
Translation: call the method dict_ . setdefault with 0 arguments : app_name and an empty list ,
BLEU = 11.97 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=16, Reference length=28)
  1-gram: 62.5 
  2-gram: 40.0 
  3-gram:21.4 
  4-gram: 7.7 

Code line 985:    else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 986:               error_dict . setdefault ( NON_FIELD_ERRORS , [ ] ) . extend ( self . error_list )
Original:  call the method extend with an argument error_list on the return value of the method error_dict . setdefault called with 2 arguments: NON_FIELD_ERRORS and an empty list . 
Translation: call the method setdefault . setdefault with arguments : dict_ and unpacked list containing element .
BLEU = 0.00 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=16, Reference length=28)
  1-gram: 56.2 
  2-gram: 20.0 
  3-gram:7.1 
  4-gram: 0.0 

Code line 987:   return error_dict
Original:  return error_dict . 
Translation: return replacement .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 988:    def __iter__ ( self ) :
Original:  define the method __iter__ with an argument self . 
Translation: define the method __iter__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 989:           if hasattr ( self , 'error_dict' ) :
Original:  if self has an ' error_dict ' attribute , 
Translation: if self has an ' _files ' attribute ,
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 990:               for field , errors in self . error_dict . items ( ) :
Original:  for every field , errors in self . error_dict . items method return value , 
Translation: call the method self . errors . items , for every field and errors in the result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=18, Reference length=15)
  1-gram: 66.7 
  2-gram: 29.4 
  3-gram:6.2 
  4-gram: 0.0 

Code line 991:                   yield field , list ( ValidationError ( errors ) )
Original:  yield field and ValidationError object converted to an list , created with an argument errors . 
Translation: unpacked a list with list with list of list out and unpacked list out ,
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 26.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 992:    else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 993:               for error in self . error_list :
Original:  for every error in self . error_list , 
Translation: for every error in self . error_list ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 994:                   message = error . message
Original:  substitute error . message for message . 
Translation: substitute message . message for message . message .
BLEU = 46.71 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 995:  if error . params :
Original:  if error . params is true , 
Translation: if error . filepath is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 996:                       message %= error . params
Original:  divide message by error . params , substitute the residue of the division for message . 
Translation: write the error . message . items .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=8, Reference length=16)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 997:   yield force_text ( message )
Original:  call the force_text with an argument message , yield the result . 
Translation: call the function force_text with an argument message , yield the result .
BLEU = 79.11 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 70.0 

Code line 998:      def __str__ ( self ) :
Original:  define the method __str__ with an argument self . 
Translation: define the method __str__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 999:           if hasattr ( self , 'error_dict' ) :
Original:  if self has an attribute ' error_dict ' , 
Translation: if self has an ' _files ' attribute ,
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1000:               return repr ( dict ( self ) )
Original:  return the printable representation of the self object converted to a dictionary . 
Translation: get printable type of self into class , return the result into a string .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 46.7 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1001:   return repr ( list ( self ) )
Original:  return the printable representation of the self object converted to a list . 
Translation: convert printable of self into a list , return the result .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 66.7 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1002:    def __repr__ ( self ) :
Original:  define the method __repr__ with an argument self . 
Translation: define the method __repr__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1003:           return 'ValidationError(%s)' % self
Original:  return the string ' ValidationError ( %s ) ' , replace ' %s ' with self . 
Translation: return a string ' ( ) ' formated with nodelist ) %s ' with an
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1004: from django . core . files . base import File
Original:  from django . core . files . base import File into default name space . 
Translation: from django . core . base . base import BaseEmailBackend into default name space .
BLEU = 57.74 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 33.3 

Code line 1005:   __all__ = [ 'File' ]
Original:  __all__ is an list containing a string ' File ' . 
Translation: __all__ is list containing list containing ' _UNK ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 58.3 
  2-gram: 27.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1006: from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1007:   import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1008:  from io import BytesIO , StringIO , UnsupportedOperation
Original:  from io import BytesIO , StringIO and UnsupportedOperation into default name space . 
Translation: from import import import type and default into default name space .
BLEU = 32.80 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 66.7 
  2-gram: 36.4 
  3-gram:30.0 
  4-gram: 22.2 

Code line 1009:   from django . utils . encoding import smart_text
Original:  from django . utils . encoding import smart_text into default name space . 
Translation: from django . utils . encoding import smart_text into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1010:  from django . core . files . utils import FileProxyMixin
Original:  from django . core . files . utils import FileProxyMixin into default name space . 
Translation: from django . core . forms . files import _UNK into default name space .
BLEU = 54.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 64.3 
  3-gram:46.2 
  4-gram: 33.3 

Code line 1011:  from django . utils import six
Original:  from django . utils import six into default name space . 
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1012:  from django . utils . encoding import force_bytes , python_2_unicode_compatible
Original:  from django . utils . encoding import force_bytes and python_2_unicode_compatible into default name space . 
Translation: from django . utils . encoding import smart_text and python_0_unicode_compatible into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1013:    @ python_2_unicode_compatible
Original:  decorator python_2_unicode_compatible , 
Translation: python_0_unicode_compatible decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1014:  class File ( FileProxyMixin ) :
Original:  derive the class File from the FileProxyMixin base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1015:       DEFAULT_CHUNK_SIZE = 64 * 2 ** 10
Original:  bring integer 2 to the power of 10 , multiply it by 64 , substitute the result for DEFAULT_CHUNK_SIZE . 
Translation: subtract 00 00 00 00 00 by integer 0 00 00 00 00 , substitute
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=15, Reference length=20)
  1-gram: 26.7 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1016:   def __init__ ( self , file , name = None ) :
Original:  define the method __init__ with self class instance , file , and name defaulting to None as arguments . 
Translation: define the method __init__ with 0 arguments : self , name and name set to None .
BLEU = 26.75 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 76.5 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 14.3 

Code line 1017:           self . file = file
Original:  substitute file for self . file . 
Translation: substitute file for self . file .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1018:  if name is None :
Original:  if name is None , 
Translation: if name is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1019:               name = getattr ( file , 'name' , None )
Original:  get ' name ' attribute from the file object , if it doesnt exists use None , substitute it for name . 
Translation: get ' name ' from the name object , substitute it for filter_func , if not ,
BLEU = 27.16 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=17, Reference length=22)
  1-gram: 82.4 
  2-gram: 56.2 
  3-gram:26.7 
  4-gram: 14.3 

Code line 1020:   self . name = name
Original:  substitute name for self . name . 
Translation: substitute name for self . name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1021:  if hasattr ( file , 'mode' ) :
Original:  if file object has an attribute ' mode ' , 
Translation: if file has an attribute ' file ' ,
BLEU = 36.09 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1022:               self . mode = file . mode
Original:  substitute file . mode for self . mode . 
Translation: substitute callback . file for self . file .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1023:     def __str__ ( self ) :
Original:  define the method __str__ with argument self . 
Translation: define the method __str__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1024:           return smart_text ( self . name or '' )
Original:  evaluate the function smart_text with argument self . name , if exists , or an empty string , if not , return the result . 
Translation: call the method self . open with an argument string ' name ' and name into a name , return the result .
BLEU = 19.86 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 56.5 
  2-gram: 27.3 
  3-gram:14.3 
  4-gram: 10.0 

Code line 1025:    def __repr__ ( self ) :
Original:  define the method __repr__ with argument self . 
Translation: define the method __repr__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1026:           return "<%s: %s>" % ( self . __class__ . __name__ , self or "None" )
Original:  substitute ' %s ' in string ' <%s: %s> ' with self . __class__ . __name__ and self , if exists , or string ' None ' if it doesnt , return it . 
Translation: return string " <%s : %s> " , where " %s ' is replaced with self . __name__ and self . __name__ , self . __name__ , respectively .
BLEU = 12.62 (Bravity Penalty=0.842, Length ratio=0.853, Translated length=29, Reference length=34)
  1-gram: 55.2 
  2-gram: 21.4 
  3-gram:11.1 
  4-gram: 3.8 

Code line 1027:    def __bool__ ( self ) :
Original:  define the method __bool__ with argument self . 
Translation: define the method __bool__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1028:           return bool ( self . name )
Original:  convert self . name into an boolean , return it . 
Translation: convert self . name into name , return the result .
BLEU = 41.72 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 1029:    def __nonzero__ ( self ) :
Original:  define the method __nonzero__ with argument self . 
Translation: define the method __nonzero__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1030:           return type ( self ) . __bool__ ( self )
Original:  call the __bool__ method with argument self , on the return value of the type function with argument self , return the result . 
Translation: get the type of self object , call the method __bool__ with an argument self , return the result .
BLEU = 32.02 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=20, Reference length=24)
  1-gram: 85.0 
  2-gram: 42.1 
  3-gram:27.8 
  4-gram: 23.5 

Code line 1031:    def __len__ ( self ) :
Original:  define the method __len__ with argument self . 
Translation: define the method __len__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1032:           return self . size
Original:  return self . size . 
Translation: return self . position .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1033:    def _get_size_from_underlying_file ( self ) :
Original:  define the method _get_size_from_underlying_file with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1034:           if hasattr ( self . file , 'size' ) :
Original:  if self . file has an attribute ' size ' , 
Translation: if self . __name__ has an ' file ' attribute ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 30.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1035:               return self . file . size
Original:  return self . file . size . 
Translation: return self . callback . _callback .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1036:   if hasattr ( self . file , 'name' ) :
Original:  if self . file has an attribute ' name ' , 
Translation: if self . __name__ has an ' __name__ ' attribute ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 30.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1037:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1038:                   return os . path . getsize ( self . file . name )
Original:  call the os . path . getsize function with argument self . file . name , return the result . 
Translation: return self . _UNK . path . _UNK with an argument path , return the result .
BLEU = 27.61 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 70.6 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 14.3 

Code line 1039:   except ( OSError , TypeError ) :
Original:  if OSError or TypeError errors occurred . 
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 37.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1040:                   pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1041:    if hasattr ( self . file , 'tell' ) and hasattr ( self . file , 'seek' ) :
Original:  if self . file has an attribute ' tell ' and an attribute ' seek ' , 
Translation: self self . __class__ has an attribute ' __class__ ' attribute and self . file has a ' __class__ ' attribute ,
BLEU = 24.42 (Bravity Penalty=1.000, Length ratio=1.294, Translated length=22, Reference length=17)
  1-gram: 59.1 
  2-gram: 28.6 
  3-gram:20.0 
  4-gram: 10.5 

Code line 1042:               pos = self . file . tell ( )
Original:  get the position of the self . file file pointer , substitute it for pos . 
Translation: substitute self . dirpath . for the method thefile ,
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=10, Reference length=16)
  1-gram: 70.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1043:  self . file . seek ( 0 , os . SEEK_END )
Original:  position the file self . file pointer at the end . 
Translation: call the method core . process with 0 arguments : self . program and integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.545, Translated length=17, Reference length=11)
  1-gram: 23.5 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1044:  size = self . file . tell ( )
Original:  get the position of the file self . file pointer , substitute it for size . 
Translation: call the method self . buffer . remove , substitute the result for size .
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1045:  self . file . seek ( pos )
Original:  position file self . file pointer at the pos position . 
Translation: call the method self . _archive . file with an argument file .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 46.2 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1046:  return size
Original:  return size . 
Translation: return size .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1047:   raise AttributeError ( "Unable to determine the file's size." )
Original:  raise an AttributeError exception with string " Unable to determine the file ' s size . " as argument . 
Translation: raise an TypeError with an argument string " You " %s ' _UNK _UNK . " .
BLEU = 0.00 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 58.8 
  2-gram: 18.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1048:    def _get_size ( self ) :
Original:  define the method _get_size with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1049:           if hasattr ( self , '_size' ) :
Original:  if self has an attribute ' _size ' . 
Translation: if self has an ' _UNK ' attribute ,
BLEU = 34.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1050:               return self . _size
Original:  return self . _size . 
Translation: return self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1051:   self . _size = self . _get_size_from_underlying_file ( )
Original:  call the method self . _get_size_from_underlying_file , substitute the result for self . _size . 
Translation: call the method self . _UNK , substitute the result for self . _UNK .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1052:  return self . _size
Original:  return self . _size . 
Translation: return self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1053:    def _set_size ( self , size ) :
Original:  define the method _set_size with arguments self and size . 
Translation: define the method _UNK with arguments self and instance .
BLEU = 39.28 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 14.3 

Code line 1054:           self . _size = size
Original:  substitute size for self . _size . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1055:    size = property ( _get_size , _set_size )
Original:  size is a property object with _get_size as getter method and _set_size as setter method . 
Translation: _UNK is a property function with _UNK and _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 50.0 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1056:   def _get_closed ( self ) :
Original:  define the method _get_closed with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1057:           return not self . file or self . file . closed
Original:  if self . file is false or self . file . closed is true , return boolean true , otherwise return boolean false . 
Translation: if self . file_path . DEFAULT_CHARSET is false , return self . DEFAULT_CHARSET , return the result .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=18, Reference length=24)
  1-gram: 72.2 
  2-gram: 29.4 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1058:   closed = property ( _get_closed )
Original:  closed is a property object with _get_closed as a getter method . 
Translation: _UNK is a property object with _UNK as a getter method .
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 72.7 
  3-gram:60.0 
  4-gram: 44.4 

Code line 1059:   def chunks ( self , chunk_size = None ) :
Original:  define the method chunks with arguments self and chunk_size defaulting to None . 
Translation: define the method __getattr__ with arguments self and instance and mimetype set to arguments .
BLEU = 25.34 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 60.0 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 8.3 

Code line 1060:  if not chunk_size :
Original:  if chunk_size is false , 
Translation: if there is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1061:               chunk_size = self . DEFAULT_CHUNK_SIZE
Original:  substitute the self . DEFAULT_CHUNK_SIZE for chunk_size . 
Translation: substitute self . _UNK for self .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1062:    try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1063:               self . seek ( 0 )
Original:  position the file pointer at the beginning of self file . 
Translation: call the method self . total_form_count with argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 27.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1064:   except ( AttributeError , UnsupportedOperation ) :
Original:  if AttributeError or UnsupportedOperation exception occurred . 
Translation: if AttributeError or AttributeError and AttributeError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=10, Reference length=7)
  1-gram: 40.0 
  2-gram: 22.2 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1065:               pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1066:    while True :
Original:  endless loop , 
Translation: endless loop ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1067:               data = self . read ( chunk_size )
Original:  call the self . read method with argument chunk_size , substitute the result for data . 
Translation: call the method self . read with an argument data , substitute the result for
BLEU = 36.80 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 93.3 
  2-gram: 50.0 
  3-gram:30.8 
  4-gram: 16.7 

Code line 1068:  if not data :
Original:  if data is false , 
Translation: if data is false ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1069:                   break
Original:  break from the smallest enclosing loop . 
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 83.3 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1070:   yield data
Original:  yield one element of data iterable . 
Translation: yield data .
BLEU = 0.00 (Bravity Penalty=0.264, Length ratio=0.429, Translated length=3, Reference length=7)
  1-gram: 100.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1071:     def multiple_chunks ( self , chunk_size = None ) :
Original:  define the method __multiple_chunks__ with arguments self and chunk_size defaulting to None . 
Translation: define the method _UNK with arguments self and instance and connection set to arguments .
BLEU = 25.34 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 60.0 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 8.3 

Code line 1072:  if not chunk_size :
Original:  if chunk_size is false , 
Translation: if there is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1073:               chunk_size = self . DEFAULT_CHUNK_SIZE
Original:  substitute self . DEFAULT_CHUNK_SIZE for chunk_size . 
Translation: substitute self . _UNK for self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1074:   return self . size > chunk_size
Original:  if self . size is greater than chunk_size , return boolean True , otherwise return boolean False . 
Translation: if self . size is size , return the result .
BLEU = 22.08 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=11, Reference length=18)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 1075:    def __iter__ ( self ) :
Original:  define the method __iter__ with argument self . 
Translation: define the method __iter__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1076:            buffer_ = None
Original:  buffer_ is None . 
Translation: _UNK is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 1077:  for chunk in self . chunks ( ) :
Original:  for every chunk in return value of the method self . chunks , 
Translation: for every c in reversed list , for every line in the result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 35.7 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1078:               chunk_buffer = BytesIO ( chunk )
Original:  evaluate the function BytesIO with argument chunk , substitute it for chunk_buffer . 
Translation: _UNK is an instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1079:   for line in chunk_buffer :
Original:  for every line in chunk_buffer , 
Translation: for every line in _UNK ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1080:                   if buffer_ :
Original:  if buffer_ is true , 
Translation: if _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1081:                       line = buffer_ + line
Original:  increment line by buffer_ . 
Translation: sum _UNK and _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.200, Translated length=11, Reference length=5)
  1-gram: 9.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1082:  buffer_ = None
Original:  buffer_ is None . 
Translation: _UNK is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 1083:      if line [ - 1 : ] in ( b'\n' , b'\r' ) :
Original:  if last element of line is newline or carriage return character , 
Translation: if last element from line , and last element of last to string ' 0 ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.417, Translated length=17, Reference length=12)
  1-gram: 35.3 
  2-gram: 18.8 
  3-gram:13.3 
  4-gram: 0.0 

Code line 1084:                       yield line
Original:  yield one element of line iterable . 
Translation: yield line .
BLEU = 0.00 (Bravity Penalty=0.264, Length ratio=0.429, Translated length=3, Reference length=7)
  1-gram: 100.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1085:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1086:                       buffer_ = line
Original:  substitute line for buffer_ . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1087:      if buffer_ is not None :
Original:  if buffer_ is not None , 
Translation: if _UNK is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1088:               yield buffer_
Original:  yield one element from the buffer_ iterable . 
Translation: yield _UNK as the result .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1089:     def __enter__ ( self ) :
Original:  define the method __enter__ with argument self . 
Translation: define the method __enter__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1090:           return self
Original:  return self . 
Translation: return self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1091:    def __exit__ ( self , exc_type , exc_value , tb ) :
Original:  define the method __exit__ with self , exc_type , exc_value and tb as arguments . 
Translation: define the method __exit__ with arguments self , exc_type , exc_value and tp .
BLEU = 59.82 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 92.9 
  2-gram: 69.2 
  3-gram:58.3 
  4-gram: 45.5 

Code line 1092:           self . close ( )
Original:  close the file self . 
Translation: call the method self . close .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1093:    def open ( self , mode = None ) :
Original:  define the method open with arguments self and mode defaulting to None . 
Translation: define the method open with arguments self and stream as arguments .
BLEU = 58.11 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:60.0 
  4-gram: 55.6 

Code line 1094:           if not self . closed :
Original:  if file self is not closed , 
Translation: if self . _UNK is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1095:               self . seek ( 0 )
Original:  position the file pointer at the beginning of self file . 
Translation: call the method self . total_form_count with argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 27.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1096:   elif self . name and os . path . exists ( self . name ) :
Original:  otherwise if self . name exists and self . name file path exists , 
Translation: otherwise if self . name is true and f . name is an file file
BLEU = 30.13 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 60.0 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 16.7 

Code line 1097:               self . file = open ( self . name , mode or self . mode )
Original:  open the file self . name in mode or self . mode mode , whichever exists , assign the file handler to self . file . 
Translation: open file with self . name and self . file_path , substitute the result for self . stderr ,
BLEU = 0.00 (Bravity Penalty=0.692, Length ratio=0.731, Translated length=19, Reference length=26)
  1-gram: 63.2 
  2-gram: 22.2 
  3-gram:5.9 
  4-gram: 0.0 

Code line 1098:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1099:               raise ValueError ( "The file cannot be reopened." )
Original:  raise an ValueError exception with string " The file cannot be reopened . " as an argument . 
Translation: raise an ValueError exception with an argument string " The can can before before . " .
BLEU = 32.76 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 76.5 
  2-gram: 50.0 
  3-gram:26.7 
  4-gram: 14.3 

Code line 1100:     def close ( self ) :
Original:  define the method close with argument self . 
Translation: define the method close with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1101:           self . file . close ( )
Original:  call the method self . file . close . 
Translation: call the method self . file file .
BLEU = 65.31 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 87.5 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 60.0 

Code line 1102:      @ python_2_unicode_compatible
Original:  decorator python_2_unicode_compatible , 
Translation: python_0_unicode_compatible decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1103:  class ContentFile ( File ) :
Original:  derive the class ContentFile from File base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1104:  def __init__ ( self , content , name = None ) :
Original:  define the method __init__ with arguments self , content and name defaulting to None . 
Translation: define the method __init__ with 0 arguments : self , name and mimetype set to None .
BLEU = 33.60 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 76.5 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 14.3 

Code line 1105:           if six . PY3 :
Original:  if six . PY3 is boolean True , 
Translation: if six . PY0 is true ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1106:               stream_class = StringIO if isinstance ( content , six . text_type ) else BytesIO
Original:  substitute StringIO for stream_class if content is an instance of six . text_type , otherwise substitute BytesIO for stream_class . 
Translation: if _UNK is an instance of _UNK class , or types . text_type is a tuple ,
BLEU = 15.34 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 47.1 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 7.1 

Code line 1107:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1108:               stream_class = BytesIO
Original:  substitute BytesIO for stream_class . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1109:  content = force_bytes ( content )
Original:  call the function force_bytes with argument content , substitute it for content . 
Translation: evaluate the function content , substitute the result for content .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 1110:   super ( ContentFile , self ) . __init__ ( stream_class ( content ) , name = name )
Original:  call the __init__ method with stream_class ( content ) and name set to name arguments , from the base class of the ContentFile class . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : _UNK , _UNK and list .
BLEU = 24.87 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 69.6 
  2-gram: 27.3 
  3-gram:19.0 
  4-gram: 15.0 

Code line 1111:  self . size = len ( content )
Original:  substitute length of content for self . size . 
Translation: substitute length of self . _UNK for length .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1112:    def __str__ ( self ) :
Original:  define the method __str__ with argument self . 
Translation: define the method __str__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1113:           return 'Raw content'
Original:  return a string ' Raw content ' . 
Translation: return string ' _UNK ' and return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1114:    def __bool__ ( self ) :
Original:  define the method __bool__ with argument self . 
Translation: define the method __bool__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1115:           return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1116:    def __nonzero__ ( self ) :
Original:  define the method __nonzero__ with argument self . 
Translation: define the method __nonzero__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1117:           return type ( self ) . __bool__ ( self )
Original:  evaluate the method type ( self ) . __bool__ with argument self , return the result . 
Translation: get the type of self object , call the method __bool__ with an argument self , return the result .
BLEU = 36.57 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17)
  1-gram: 65.0 
  2-gram: 42.1 
  3-gram:27.8 
  4-gram: 23.5 

Code line 1118:    def open ( self , mode = None ) :
Original:  define the method open with arguments self and mode set to None . 
Translation: define the method open with arguments self and stream as arguments .
BLEU = 58.11 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:60.0 
  4-gram: 55.6 

Code line 1119:           self . seek ( 0 )
Original:  call the self . seek method with argument integer 0 . 
Translation: call the method self . total_form_count with argument integer 0 .
BLEU = 46.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 60.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 1120:    def close ( self ) :
Original:  define the method close with argument self . 
Translation: define the method close with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1121:           pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1122:  import zlib
Original:  import module zlib . 
Translation: import module zlib .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1123:   from django . core . files import File
Original:  from django . core . files import File into default name space . 
Translation: from django . core . files import _UNK into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1124:    class ImageFile ( File ) :
Original:  derive class ImageFile from the base class File . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1125:  def _get_width ( self ) :
Original:  define method _get_width with self class instance as the argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 77.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1126:           return self . _get_image_dimensions ( ) [ 0 ]
Original:  return the first element of the return value of the call to the self . _det_image_dimensions method . 
Translation: call the method self . _UNK with an argument _UNK ,
BLEU = 0.00 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=11, Reference length=18)
  1-gram: 45.5 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1127:   width = property ( _get_width )
Original:  get property attribute _get_width , and substitute it for width . 
Translation: DNS_NAME is a property object with _UNK as a this function .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 16.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1128:   def _get_height ( self ) :
Original:  define method _get_height with self class instance as the argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 77.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1129:           return self . _get_image_dimensions ( ) [ 1 ]
Original:  return the second element of the return value of the call to the self . _det_image_dimensions method . 
Translation: call the method self . _UNK with an argument _UNK ,
BLEU = 0.00 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=11, Reference length=18)
  1-gram: 45.5 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1130:   height = property ( _get_height )
Original:  get property attribute _get_height , and substitute it for width . 
Translation: _UNK is a property object with _UNK as a getter method .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 16.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1131:   def _get_image_dimensions ( self ) :
Original:  define the method _get_image_dimensions with self class instance as the argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 77.8 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1132:           if not hasattr ( self , '_dimensions_cache' ) :
Original:  if self does not have an attribute named ' _dimensions_cache ' . 
Translation: if self doesnt have ' _UNK ' attribute ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 66.7 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1133:               close = self . closed
Original:  substitute self . closed for close . 
Translation: substitute self . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1134:  self . open ( )
Original:  call the method self . open ( ) 
Translation: call the method self . open .
BLEU = 70.14 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 85.7 
  2-gram: 83.3 
  3-gram:80.0 
  4-gram: 75.0 

Code line 1135:  self . _dimensions_cache = get_image_dimensions ( self , close = close )
Original:  evaluate the method get_image_dimensions with self class instance and close set to close as the arguments , substitute the result for self . _dimensions_cache . 
Translation: call the function _UNK with 0 arguments : _UNK and _UNK as the arguments , substitute the result for self . _UNK .
BLEU = 39.13 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 60.9 
  2-gram: 40.9 
  3-gram:38.1 
  4-gram: 35.0 

Code line 1136:   return self . _dimensions_cache
Original:  return self . _dimensions_cache . 
Translation: return self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1137:      def get_image_dimensions ( file_or_path , close = False ) :
Original:  define the function get_image_dimension with file_or_path and close set to boolean False as the arguments . 
Translation: define the function _UNK with 0 arguments _UNK and _UNK set to boolean False .
BLEU = 24.92 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 8.3 

Code line 1138:  from PIL import ImageFile as PillowImageFile
Original:  from PIL module import ImageFile as PillowImageFile . 
Translation: from _UNK import _UNK as the default into default name space .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=12, Reference length=8)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1139:   p = PillowImageFile . Parser ( )
Original:  p is image parser object , set by calling the PillowImageFile . Parser method . 
Translation: call the function _UNK . _UNK with an argument _UNK ,
BLEU = 0.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 27.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1140:  if hasattr ( file_or_path , 'read' ) :
Original:  if file_or_path has an attribute ' read ' , 
Translation: if _UNK has an ' _UNK ' attribute ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1141:           file = file_or_path
Original:  substitute file_or_path for file . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1142:  file_pos = file . tell ( )
Original:  get the position in bytes from the start of the file , store it in file_pos . 
Translation: call the method _UNK . _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17)
  1-gram: 30.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1143:  file . seek ( 0 )
Original:  set the file position pointer at the beginning . 
Translation: call the method mail . add_argument with an argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=12, Reference length=9)
  1-gram: 16.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1144:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1145:           file = open ( file_or_path , 'rb' )
Original:  open file named file_or_path for reading , store the file object handle in file . 
Translation: open file _UNK in mode and _UNK the file _UNK the _UNK _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=20, Reference length=15)
  1-gram: 40.0 
  2-gram: 10.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1146:  close = True
Original:  close is boolean True . 
Translation: forms_valid is boolean True .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1147:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1148:              chunk_size = 1024
Original:  chunk_size is an integer 1024 . 
Translation: substitute unicode for total_forms .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1149:  while 1 :
Original:  endless while loop , 
Translation: endless loop ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1150:               data = file . read ( chunk_size )
Original:  read chunk_size bytes from file and store it in data . 
Translation: read the file file file , substitute the result for data .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 33.3 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1151:  if not data :
Original:  if data is empty . 
Translation: if data is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1152:                   break
Original:  break from the endless loop . 
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1153:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1154:                   p . feed ( data )
Original:  feed data to the parser p . 
Translation: call the function data . update with an argument language .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.571, Translated length=11, Reference length=7)
  1-gram: 27.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1155:   except zlib . error as e :
Original:  if zlib . error as e exception is raised , 
Translation: if error . error , renamed to e , is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 50.0 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1156:                     if e . args [ 0 ] . startswith ( "Error -5" ) :
Original:  if e . args list first element starts with string " Error -5 " , 
Translation: if second element of sys . args . or a string ' are ' or e ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 41.2 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1157:                       pass
Original:  do nothig . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1158:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1159:                       raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1160:    if p . image :
Original:  if p . image is not empty , 
Translation: if filepath . finally is true ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1161:                   return p . image . size
Original:  return size of the image that was fed to the parser p . 
Translation: return callback . callback . tokens .
BLEU = 0.00 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=7, Reference length=13)
  1-gram: 28.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1162:   chunk_size *= 2
Original:  double the chunk size . 
Translation: _UNK _UNK by integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 16.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1163:   return None
Original:  return None . 
Translation: return None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1164:   finally :
Original:  execute regardless of the exception being raised , 
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=0.189, Length ratio=0.375, Translated length=3, Reference length=8)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1165:           if close :
Original:  if close is True , 
Translation: if _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1166:               file . close ( )
Original:  close file file . 
Translation: close file file file .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 0.0 

Code line 1167:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1168:               file . seek ( file_pos )
Original:  set the file position pointer at file_pos . 
Translation: call the method models . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=11, Reference length=8)
  1-gram: 18.2 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1169:  import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1170:   __all__ = ( 'LOCK_EX' , 'LOCK_SH' , 'LOCK_NB' , 'lock' , 'unlock' )
Original:  __all__ is a tuple containing strings: ' LOCK_EX ' , ' LOCK_SH ' , ' LOCK_NB ' , ' lock ' and ' unlock ' . 
Translation: __all__ is a tuple with 0 elements : strings ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' .
BLEU = 21.77 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 64.0 
  2-gram: 41.7 
  3-gram:21.7 
  4-gram: 4.5 

Code line 1171:    def _fd ( f ) :
Original:  define the _fd function with argument f . 
Translation: define the function _UNK with an argument f .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1172:  return f . fileno ( ) if hasattr ( f , 'fileno' ) else f
Original:  return result of the f . fileno method if f has an ' fileno ' attribute , otherwise return f . 
Translation: if f . exclude is true or f has an instance of a string ' label ' ,
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 55.6 
  2-gram: 23.5 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1173:     if os . name == 'nt' :
Original:  if os . name equals to ' nt ' , 
Translation: if os . name equals string ' _UNK ' ,
BLEU = 46.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 28.6 

Code line 1174:       import msvcrt
Original:  import msvcrt . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1175:  from ctypes import ( sizeof , c_ulong , c_void_p , c_int64 ,  Structure , Union , POINTER , windll , byref )
Original:  from ctypes import sizeof , c_ulong , c_void_p , c_int64 , Structure , Union , POINTER , windll and byref into default name space . 
Translation: from from the base . _UNK ( _UNK , _UNK , _UNK and _UNK into default tuple space .
BLEU = 0.00 (Bravity Penalty=0.729, Length ratio=0.760, Translated length=19, Reference length=25)
  1-gram: 42.1 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1176:  from ctypes . wintypes import BOOL , DWORD , HANDLE
Original:  from ctypes . wintypes import BOOL , DWORD and HANDLE into default name space . 
Translation: from inspect . _UNK import _UNK and _UNK into default name space .
BLEU = 28.72 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:27.3 
  4-gram: 20.0 

Code line 1177:   LOCK_SH = 0
Original:  LOCK_SH is a integer 0 . 
Translation: _UNK is integer 0 .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1178:  LOCK_NB = 0x1
Original:  LOCK_NB is a hexadecimal 1 . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1179:  LOCK_EX = 0x2
Original:  LOCK_EX is a hexadecimal 2 . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1180:     if sizeof ( c_ulong ) != sizeof ( c_void_p ) :
Original:  if size of c_ulong does not equals to size of c_void_p , 
Translation: call the function _UNK with an argument _UNK equals to _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 25.0 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1181:           ULONG_PTR = c_int64
Original:  substitute c_int64 for ULONG_PTR . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1182:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1183:           ULONG_PTR = c_ulong
Original:  substitute c_ulong for ULONG_PTR . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1184:   PVOID = c_void_p
Original:  substitute c_void_p for PVOID . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1185:    class _OFFSET ( Structure ) :
Original:  derive the class _OFFSET from the Structure base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1186:           _fields_ = [  ( 'Offset' , DWORD ) ,  ( 'OffsetHigh' , DWORD ) ]
Original:  _fields_ is a list containing 2 tuples: first tuple contains: string ' Offset ' and DWORD , second contains: string ' OffsetHigh ' and DWORD . 
Translation: _UNK is an list with elements elements of _UNK class , _UNK _UNK _UNK ' _UNK ' , _UNK _UNK _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.878, Length ratio=0.885, Translated length=23, Reference length=26)
  1-gram: 30.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1187:    class _OFFSET_UNION ( Union ) :
Original:  derive the class _OFFSET_UNION from the Union base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1188:           _anonymous_ = [ '_offset' ]
Original:  _anonymous_ is a list containing one string: ' _offset ' . 
Translation: _UNK is list containing string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1189:  _fields_ = [  ( '_offset' , _OFFSET ) ,  ( 'Pointer' , PVOID ) ]
Original:  _fields_ is a list containing 2 tuples: first tuple contains: string ' _offset ' and _OFFSET , second contains: string ' Pointer ' and PVOID . 
Translation: _UNK is an list with elements elements of _UNK class , _UNK _UNK _UNK ' _UNK ' , _UNK _UNK _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.878, Length ratio=0.885, Translated length=23, Reference length=26)
  1-gram: 30.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1190:    class OVERLAPPED ( Structure ) :
Original:  derive the class OVERLAPPED from the Structure base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1191:           _anonymous_ = [ '_offset_union' ]
Original:  _anonymous_ is a list containing one string: ' _offset_union ' . 
Translation: _UNK is list containing string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1192:  _fields_ = [  ( 'Internal' , ULONG_PTR ) ,  ( 'InternalHigh' , ULONG_PTR ) ,  ( '_offset_union' , _OFFSET_UNION ) ,  ( 'hEvent' , HANDLE ) ]
Original:  _fields_ is a list containing 4 tuples: first tuple contains: string ' Internal ' and ULONG_PTR , 
Translation: _UNK is an list containing tuple elements of _UNK class _UNK ' , _UNK _UNK _UNK ' _UNK ' , _UNK _UNK _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.471, Translated length=25, Reference length=17)
  1-gram: 28.0 
  2-gram: 4.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1193:    LPOVERLAPPED = POINTER ( OVERLAPPED )
Original:  second contains: string ' InternalHigh and ULONG_PTR , third: ' _offset_union ' and _OFFSET_UNION , forth ' hEvent ' and HANDLE . call the function POINTER with argument OVERLAPPED , substitute the result for LPOVERLAPPED . 
Translation: _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.030, Length ratio=0.222, Translated length=8, Reference length=36)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1194:    LockFileEx = windll . kernel32 . LockFileEx
Original:  substitute windll . kernel32 . LockFileEx for LockFileEx . 
Translation: substitute _UNK . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1195:  LockFileEx . restype = BOOL
Original:  substitute BOOL for LockFileEx . restype . 
Translation: substitute _UNK for _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1196:  LockFileEx . argtypes = [ HANDLE , DWORD , DWORD , DWORD , DWORD , LPOVERLAPPED ]
Original:  LockFileEx . argtypes is a list containing 6 elements: HANDLE , DWORD , DWORD , DWORD , DWORD and LPOVERLAPPED . 
Translation: _UNK is a list containing list elements of _UNK . _UNK , _UNK list _UNK _UNK and _UNK as arguments .
BLEU = 13.52 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 38.1 
  2-gram: 15.0 
  3-gram:10.5 
  4-gram: 5.6 

Code line 1197:  UnlockFileEx = windll . kernel32 . UnlockFileEx
Original:  substitute windll . kernel32 . UnlockFileEx for UnlockFileEx . 
Translation: substitute _UNK . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1198:  UnlockFileEx . restype = BOOL
Original:  substitute BOOL for UnlockFileEx . restype . 
Translation: substitute _UNK for _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1199:  UnlockFileEx . argtypes = [ HANDLE , DWORD , DWORD , DWORD , LPOVERLAPPED ]
Original:  UnlockFileEx . argtypes is a list containing 5 elements: HANDLE , DWORD , DWORD , DWORD and LPOVERLAPPED . 
Translation: _UNK is a list containing list elements of _UNK . _UNK , _UNK list _UNK _UNK and _UNK .
BLEU = 15.07 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 42.1 
  2-gram: 16.7 
  3-gram:11.8 
  4-gram: 6.2 

Code line 1200:   def lock ( f , flags ) :
Original:  define the function lock with arguments f and flags . 
Translation: define the function get_template_from_string with 0 arguments : f and app_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1201:           hfile = msvcrt . get_osfhandle ( _fd ( f ) )
Original:  call the function msvcrt . get_osfhandle with return value of the _fd ( f ) function as argument , substitute the result for hfile . 
Translation: call the method _UNK . _UNK with an argument _UNK , substitute the result for _UNK .
BLEU = 17.22 (Bravity Penalty=0.625, Length ratio=0.680, Translated length=17, Reference length=25)
  1-gram: 64.7 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 14.3 

Code line 1202:  overlapped = OVERLAPPED ( )
Original:  call the OVERLAPPED function , substitute the result for overlapped . 
Translation: _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1203:  ret = LockFileEx ( hfile , flags , 0 , 0 , 0xFFFF0000 , byref ( overlapped ) )
Original:  call the LockFileEx function with 6 arguments: hfile , flags , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret . 
Translation: _UNK is a tuple with 0 elements : _UNK , _UNK , _UNK , _UNK , _UNK , as a integer 0 .
BLEU = 0.00 (Bravity Penalty=0.521, Length ratio=0.605, Translated length=23, Reference length=38)
  1-gram: 43.5 
  2-gram: 4.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1204:  return bool ( ret )
Original:  convert ret to a boolean , return it . 
Translation: convert the _UNK into _UNK and _UNK it into a _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=12, Reference length=9)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1205:    def unlock ( f ) :
Original:  define the function unlock with argument f . 
Translation: define the function _UNK with an argument f .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1206:           hfile = msvcrt . get_osfhandle ( _fd ( f ) )
Original:  call the function msvcrt . get_osfhandle with return value of the _fd ( f ) function as argument , substitute the result for hfile . 
Translation: call the method _UNK . _UNK with an argument _UNK , substitute the result for _UNK .
BLEU = 17.22 (Bravity Penalty=0.625, Length ratio=0.680, Translated length=17, Reference length=25)
  1-gram: 64.7 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 14.3 

Code line 1207:  overlapped = OVERLAPPED ( )
Original:  call the OVERLAPPED function , substitute the result for overlapped . 
Translation: _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1208:  ret = UnlockFileEx ( hfile , 0 , 0 , 0xFFFF0000 , byref ( overlapped ) )
Original:  call the LockFileEx function with 5 arguments: hfile , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret . 
Translation: _UNK is a tuple with 0 elements : _UNK , _UNK , _UNK , _UNK and integer 0 .
BLEU = 0.00 (Bravity Penalty=0.409, Length ratio=0.528, Translated length=19, Reference length=36)
  1-gram: 42.1 
  2-gram: 5.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1209:  return bool ( ret )
Original:  convert ret to a boolean , return it . 
Translation: convert the _UNK into _UNK and _UNK it into a _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=12, Reference length=9)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1210:    else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1211:       try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1212:           import fcntl
Original:  import fcntl . 
Translation: import module _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1213:  LOCK_SH = fcntl . LOCK_SH
Original:  substitute fcntl . LOCK_SH for LOCK_SH . 
Translation: substitute _UNK for _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1214:  LOCK_NB = fcntl . LOCK_NB
Original:  substitute fcntl . LOCK_NB for LOCK_NB . 
Translation: substitute _UNK for _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1215:  LOCK_EX = fcntl . LOCK_EX
Original:  substitute fcntl . LOCK_EX for LOCK_EX . 
Translation: substitute _UNK for _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1216:   except ( ImportError , AttributeError ) :
Original:  if ImportError or AttributeError exception occurred , 
Translation: if ImportError exception is caught ,
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1217:            LOCK_EX = LOCK_SH = LOCK_NB = 0
Original:  LOCK_EX , LOCK_SH and LOCK_NB are all equal to integer 0 . 
Translation: _UNK is a integer 0 and _UNK is integer 0 .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 36.4 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1218:    def lock ( f , flags ) :
Original:  define the function lock with arguments f and flags . 
Translation: define the function get_template_from_string with 0 arguments : f and app_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1219:                return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1220:    def unlock ( f ) :
Original:  define the function unlock with argument f . 
Translation: define the function _UNK with an argument f .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1221:                return True
Original:  return boolean True . 
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1222:    else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1223:           def lock ( f , flags ) :
Original:  define the function lock with arguments f and flags . 
Translation: define the function get_template_from_string with 0 arguments : f and app_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1224:               ret = fcntl . flock ( _fd ( f ) , flags )
Original:  call the function fcntl . flock with return value of the _fd ( f ) function and flags as arguments , substitute the result for ret . 
Translation: call the method _UNK . _UNK with arguments f and a tuple with arguments every every every f .
BLEU = 0.00 (Bravity Penalty=0.656, Length ratio=0.704, Translated length=19, Reference length=27)
  1-gram: 42.1 
  2-gram: 5.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1225:  return ( ret == 0 )
Original:  if ret equals to integer 0 , return boolean True , otherwise return boolean False . 
Translation: return an _UNK with 0 elements : 0 0 .
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=10, Reference length=16)
  1-gram: 30.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1226:    def unlock ( f ) :
Original:  define the function unlock with argument f . 
Translation: define the function _UNK with an argument f .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1227:               ret = fcntl . flock ( _fd ( f ) , fcntl . LOCK_UN )
Original:  all the function fcntl . flock with return value of the _fd ( f ) function and fcntl . LOCK_UN as arguments , substitute the result for ret . 
Translation: call the method _UNK . _UNK with arguments _UNK and _UNK as the tuple , substitute the result for _UNK .
BLEU = 14.75 (Bravity Penalty=0.683, Length ratio=0.724, Translated length=21, Reference length=29)
  1-gram: 61.9 
  2-gram: 20.0 
  3-gram:15.8 
  4-gram: 11.1 

Code line 1228:  return ( ret == 0 )
Original:  if ret equals to integer 0 , return boolean True , otherwise return boolean False . 
Translation: return an _UNK with 0 elements : 0 0 .
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=10, Reference length=16)
  1-gram: 30.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1229:   import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1230:  from django . core . files import locks
Original:  from django . core . files import locks into default name space . 
Translation: from django . core . files import _UNK into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1231:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1232:       from shutil import copystat
Original:  from shutil import copystat into default name space . 
Translation: from _UNK import _UNK into default name space .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1233:   except ImportError :
Original:  if ImportError exception occurred , 
Translation: if ImportError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1234:       import stat
Original:  import stat . 
Translation: import module stat .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1235:   def copystat ( src , dst ) :
Original:  define the function copystat with arguments src and dst . 
Translation: define the function _UNK with 0 arguments : _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 58.3 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1236:  st = os . stat ( src )
Original:  call the os . stat function with argument src , substitute the result for st . 
Translation: call the function os . expanduser with an argument _UNK , substitute the result for
BLEU = 31.70 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 80.0 
  2-gram: 42.9 
  3-gram:23.1 
  4-gram: 16.7 

Code line 1237:  mode = stat . S_IMODE ( st . st_mode )
Original:  call the function stat . S_IMODE with argument st . st_mode , substitute the result for mode . 
Translation: call the function operator . _UNK with an argument t . _UNK , substitute the result for _UNK .
BLEU = 28.62 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18)
  1-gram: 68.4 
  2-gram: 33.3 
  3-gram:23.5 
  4-gram: 12.5 

Code line 1238:  if hasattr ( os , 'utime' ) :
Original:  if os has an attribute ' utime ' , 
Translation: if test_runner_class has an attribute ' _UNK ' ,
BLEU = 36.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1239:               os . utime ( dst , ( st . st_atime , st . st_mtime ) )
Original:  call the os . utime function with arguments dst and tuple containing 2 elements: st . st_atime and st . st_mtime . 
Translation: instantiate a class _UNK with 0 decimal . _UNK and _UNK . _UNK . _UNK class .
BLEU = 0.00 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=17, Reference length=22)
  1-gram: 35.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1240:   if hasattr ( os , 'chmod' ) :
Original:  if os has an attribute ' chmod ' , 
Translation: if test_runner_class has an attribute ' _UNK ' ,
BLEU = 36.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1241:               os . chmod ( dst , mode )
Original:  call the function os . chmod with arguments dst and mode . 
Translation: _UNK a directory with original_path and _UNK .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=8, Reference length=12)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1242:      __all__ = [ 'file_move_safe' ]
Original:  __all__ is a list containing a string ' file_move_safe ' . 
Translation: __all__ is list containing list containing ' _UNK ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 58.3 
  2-gram: 27.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1243:    def _samefile ( src , dst ) :
Original:  define the function _samefile with arguments src and dst . 
Translation: define the function _UNK with 0 arguments : _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 58.3 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1244:        if hasattr ( os . path , 'samefile' ) :
Original:  if os . path has an attribute ' samefile ' , 
Translation: if os . path is a ' _UNK ' ,
BLEU = 29.38 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 14.3 

Code line 1245:           try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1246:               return os . path . samefile ( src , dst )
Original:  call the os . path . samefile with arguments src and dst , return the result . 
Translation: return a list of _UNK . _UNK with 0 arguments : _UNK and return the result .
BLEU = 17.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 47.1 
  2-gram: 18.8 
  3-gram:13.3 
  4-gram: 7.1 

Code line 1247:   except OSError :
Original:  if exception OSError occurred , 
Translation: if OSError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1248:               return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1249:      return ( os . path . normcase ( os . path . abspath ( src ) ) ==  os . path . normcase ( os . path . abspath ( dst ) ) )
Original:  if file path of src and dst files are the same , return boolean True , otherwise return boolean False . 
Translation: evaluate the os . path , _UNK it it it as a return value of the return value of the os . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=24, Reference length=21)
  1-gram: 29.2 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1250:     def file_move_safe ( old_file_name , new_file_name , chunk_size = 1024 * 64 , allow_overwrite = False ) :
Original:  define the function file_move_safe with 4 arguments: old_file_name , new_file_name , chunk_size set to multiple of integers 1024 and 64 , 
Translation: define the function _UNK with 0 arguments : _UNK , _UNK set to _UNK and _UNK set to 000 .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 40.0 
  2-gram: 15.8 
  3-gram:5.6 
  4-gram: 0.0 

Code line 1251:    if _samefile ( old_file_name , new_file_name ) :
Original:  if call to the function _samefile with old_file_name and new_file_name evaluates to boolean True , 
Translation: if _UNK is _UNK of _UNK _UNK (
BLEU = 0.00 (Bravity Penalty=0.417, Length ratio=0.533, Translated length=8, Reference length=15)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1252:           return
Original:  return nothing . 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1253:    try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1254:            if not allow_overwrite and os . access ( new_file_name , os . F_OK ) :
Original:  if allow_overwrite is boolean False and call to the os . access function with arguments new_file_name and os . F_OK evaluates to boolean True , 
Translation: if _UNK is true and _UNK . _UNK is not equal to _UNK ,
BLEU = 0.00 (Bravity Penalty=0.456, Length ratio=0.560, Translated length=14, Reference length=25)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1255:               raise IOError ( "Destination file %s exists and allow_overwrite is False" % new_file_name )
Original:  raise an IOError exception with string " Destination file %s exists and allow_overwrite is False " as argument , where ' %s ' is replaced by new_file_name . 
Translation: raise an _UNK with an argument string " _UNK _UNK _UNK if _UNK is not a valid file _UNK " .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 47.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1256:    os . rename ( old_file_name , new_file_name )
Original:  call the os . rename function with arguments old_file_name and new_file_name . 
Translation: make a directory _UNK . _UNK _UNK .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=8, Reference length=12)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1257:  return
Original:  return nothing . 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1258:   except OSError :
Original:  if OSError exception is caught , 
Translation: if OSError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1259:             pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1260:     with open ( old_file_name , 'rb' ) as old_file :
Original:  open file old_file_name in read bytes mode , with file descriptor as f , 
Translation: open the file _UNK in mode , with the file _UNK as fh ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1261:            fd = os . open ( new_file_name , ( os . O_WRONLY | os . O_CREAT | getattr ( os , 'O_BINARY' , 0 ) |  ( os . O_EXCL if not allow_overwrite else 0 ) ) )
Original:  evaluate the binary expression with 4 operands: os . O_WRONLY , binary or os . O_CREATE , binary or ' O_BINARY ' attribute of object os , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.037, Translated length=1, Reference length=27)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1262:  try :
Original:  binary or os . O_EXCL if allow_overwrite is boolean False , use the previous as the mode to open new_file_name file , assign the file descriptor to fd . try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.065, Translated length=2, Reference length=31)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1263:               locks . lock ( fd , locks . LOCK_EX )
Original:  call the function locks . lock with arguments fd and locks . LOCK_EX . 
Translation: call the method _UNK with 0 arguments : _UNK . _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 50.0 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1264:  current_chunk = None
Original:  current_chunk is None . 
Translation: _UNK is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 1265:  while current_chunk != b'' :
Original:  as long as current_chunk is not an empty string , 
Translation: while _UNK is not equal to a string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 33.3 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1266:                   current_chunk = old_file . read ( chunk_size )
Original:  read chunk_size bytes from the old_file file , substitute the result for current_chunk . 
Translation: _UNK the _UNK _UNK , substitute the result for _UNK .
BLEU = 29.05 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14)
  1-gram: 63.6 
  2-gram: 40.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 1267:  os . write ( fd , current_chunk )
Original:  write current_chunk to file fd . 
Translation: write a tuple with 0 record and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=9, Reference length=6)
  1-gram: 22.2 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1268:    finally :
Original:  finally perform , 
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1269:               locks . unlock ( fd )
Original:  call the function locks . unlock with fd as argument . 
Translation: call the function _UNK . _UNK with an argument app_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1270:  os . close ( fd )
Original:  close the file fd . 
Translation: close fd file descriptor .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1271:    copystat ( old_file_name , new_file_name )
Original:  call the function copystat with old_file_name and new_file_name as arguments . 
Translation: call the function _UNK with 0 arguments _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1272:   try :
Original:  tr , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1273:           os . remove ( old_file_name )
Original:  remove the old_file_name file . 
Translation: remove a directory ,
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1274:   except OSError as e :
Original:  if OSError , renamed to e , is caught , 
Translation: if OSError renamed to e , is caught ,
BLEU = 71.89 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 100.0 
  2-gram: 87.5 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1275:               if getattr ( e , 'winerror' , 0 ) != 32 and getattr ( e , 'errno' , 0 ) != 13 :
Original:  if attribute ' winerror ' of object e is not equal to integer 32 and if ' errno ' attribute is not equal to integer 13 , 
Translation: get ' _UNK ' attribute ' is lesser than name , or it e is an empty ' or ' attribute ' ,
BLEU = 0.00 (Bravity Penalty=0.840, Length ratio=0.852, Translated length=23, Reference length=27)
  1-gram: 43.5 
  2-gram: 13.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1276:               raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1277: import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1278:  import errno
Original:  import module errno . 
Translation: import module errno .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1279:  import itertools
Original:  import module itertools . 
Translation: import module itertools .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1280:  from datetime import datetime
Original:  from datetime import datetime into default name space . 
Translation: from datetime import datetime into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1281:   from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1282:  from django . core . exceptions import SuspiciousFileOperation
Original:  from django . core . exceptions import SuspiciousFileOperation into default name space . 
Translation: from django . core . exceptions import _UNK into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1283:  from django . core . files import locks , File
Original:  from django . core . files import locks and File into default name space . 
Translation: from django . core . files import _UNK and _UNK into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1284:  from django . core . files . move import file_move_safe
Original:  from django . core . files . move import file_move_safe into default name space . 
Translation: from django . core . files . files import _UNK into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1285:  from django . utils . encoding import force_text , filepath_to_uri
Original:  from django . utils . encoding import force_text and filepath_to_uri into default name space . 
Translation: from django . utils . encoding import force_text and force_text into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1286:  from django . utils . functional import LazyObject
Original:  from django . utils . functional import LazyObject into default name space . 
Translation: from django . utils . functional import cached_property into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1287:  from django . utils . module_loading import import_string
Original:  from django . utils . module_loading import import_string into default name space . 
Translation: from django . utils . module_loading import import_string into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1288:  from django . utils . six . moves . urllib . parse import urljoin
Original:  from django . utils . six . moves . urllib . parse import urljoin into default name space . 
Translation: from django . utils . six . moves . moves . parse import _UNK into default name space .
BLEU = 68.88 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:64.7 
  4-gram: 50.0 

Code line 1289:  from django . utils . text import get_valid_filename
Original:  from django . utils . text import get_valid_filename into default name space . 
Translation: from django . utils . text import timeuntil into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1290:  from django . utils . _os import safe_join , abspathu
Original:  from django . utils . _os import safe_join and abspathu into default name space . 
Translation: from django . utils . _os import safe_join and pgettext_lazy into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1291:  from django . utils . deconstruct import deconstructible
Original:  from django . utils . deconstruct import deconstructible into default name space . 
Translation: from django . utils . deconstruct import deconstructible into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1292:    __all__ = ( 'Storage' , 'FileSystemStorage' , 'DefaultStorage' , 'default_storage' )
Original:  __all__ is a tuple containing strings: ' Storage ' , ' FileSystemStorage ' , ' DefaultStorage ' and ' default_storage ' . 
Translation: __all__ is a tuple with 0 elements : strings ' _UNK ' , ' _UNK ' and ' _UNK ' .
BLEU = 22.12 (Bravity Penalty=0.953, Length ratio=0.955, Translated length=21, Reference length=22)
  1-gram: 61.9 
  2-gram: 40.0 
  3-gram:21.1 
  4-gram: 5.6 

Code line 1293:    class Storage ( object ) :
Original:  derive the class Storage from the object base class . 
Translation: derive the class _UNK from object base class .
BLEU = 39.94 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1294:      def open ( self , name , mode = 'rb' ) :
Original:  define the method open with arguments self , name and mode defaulting to string ' rb ' . 
Translation: define the method open with arguments self , name , fixture_name and fixture_name as an string ' _UNK ' .
BLEU = 47.42 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 70.0 
  2-gram: 52.6 
  3-gram:38.9 
  4-gram: 35.3 

Code line 1295:  return self . _open ( name , mode )
Original:  call the self . _open method with name and mode arguments , return the result . 
Translation: call the method self . _UNK with 0 arguments name and name , return the
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 80.0 
  2-gram: 35.7 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1296:    def save ( self , name , content ) :
Original:  define the method save with arguments self , name and content . 
Translation: define the method self . parent_widget with arguments self and name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1297:   if name is None :
Original:  if name is None , 
Translation: if name is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1298:               name = content . name
Original:  substitute content . name for name . 
Translation: substitute self . name for name .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1299:    if not hasattr ( content , 'chunks' ) :
Original:  if content has an ' chunks ' attribute , 
Translation: if content doesnt have an ' _UNK ' attribute ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1300:               content = File ( content )
Original:  content is a File object instance created with content argument . 
Translation: _UNK is a instance of Command class , substitute the content for content .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.273, Translated length=14, Reference length=11)
  1-gram: 42.9 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1301:    name = self . get_available_name ( name )
Original:  call the method self . get_available_name with argument name , substitute it for name . 
Translation: call the method self . _UNK with name name name name name substitute name name
BLEU = 28.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:23.1 
  4-gram: 16.7 

Code line 1302:  name = self . _save ( name , content )
Original:  call the method self . _save with arguments name and content , substitute it for name . 
Translation: call the method self . _UNK with 0 arguments name name and name , substitute the result for name .
BLEU = 30.51 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17)
  1-gram: 70.0 
  2-gram: 47.4 
  3-gram:22.2 
  4-gram: 11.8 

Code line 1303:    return force_text ( name . replace ( '\\' , '/' ) )
Original:  replace all the strings ' \\ ' with ' / ' in the string name , use it as an argument for the call to the force_text function , return the result . 
Translation: replace every occurrence of the occurrences of the ' _ ' in ' character ' in the name , and return the result .
BLEU = 12.40 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=24, Reference length=33)
  1-gram: 62.5 
  2-gram: 26.1 
  3-gram:13.6 
  4-gram: 4.8 

Code line 1304:      def get_valid_name ( self , name ) :
Original:  define the method det_valid_name with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1305:  return get_valid_filename ( name )
Original:  call the get_valid_filename with argument name , return the result . 
Translation: return name to the name .
BLEU = 0.00 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=6, Reference length=11)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1306:    def get_available_name ( self , name ) :
Original:  define the method get_available_name with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1307:  dir_name , file_name = os . path . split ( name )
Original:  call the os . path . split with argument name , assign the result to the dir_name and file_name respectively . 
Translation: split into two / , substitute the result for _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.540, Length ratio=0.619, Translated length=13, Reference length=21)
  1-gram: 46.2 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1308:  file_root , file_ext = os . path . splitext ( file_name )
Original:  call the os . path . splitext with argument file_name , assign the result to the file_root and file_ext respectively . 
Translation: call the method os . _UNK . _UNK with arguments filename and the function force_bytes , assign the result to _ ,
BLEU = 22.72 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21)
  1-gram: 59.1 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 10.5 

Code line 1309:     count = itertools . count ( 1 )
Original:  call the itertools . count function with argument integer 1 , substitute the result for count . 
Translation: call the method . count with an argument integer 0 , substitute the result for
BLEU = 30.82 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:23.1 
  4-gram: 16.7 

Code line 1310:  while self . exists ( name ) :
Original:  as long as self . exists function with argument name evaluates to boolean True , 
Translation: append self to self . stdout .
BLEU = 0.00 (Bravity Penalty=0.319, Length ratio=0.467, Translated length=7, Reference length=15)
  1-gram: 42.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1311:                name = os . path . join ( dir_name , "%s_%s%s" % ( file_root , next ( count ) , file_ext ) )
Original:  substitute ' %s ' in string " %s_%s%s " with: file_root , next ( count ) and file_ext , join the dir_name and previous string into a valid file path , substitute it for name . 
Translation: join the string and _UNK into a string separated by _UNK , join ' %s ' , where not into a name name by string , separated with name , _UNK ,
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=32, Reference length=36)
  1-gram: 43.8 
  2-gram: 16.1 
  3-gram:3.3 
  4-gram: 0.0 

Code line 1312:    return name
Original:  return name . 
Translation: return name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1313:    def path ( self , name ) :
Original:  define the method path with arguments self and name . 
Translation: define the method path with arguments self and name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1314:  raise NotImplementedError ( "This backend doesn't support absolute paths." )
Original:  raise an NotImplementedError exception with argument string " This backend doesn ' t support absolute paths . " . 
Translation: raise an TypeError with an argument string " _UNK must _UNK ' . ' as a _UNK .
BLEU = 0.00 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 50.0 
  2-gram: 17.6 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1315:       def delete ( self , name ) :
Original:  define the method delete with arguments self and name . 
Translation: define the method __getitem__ with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1316:  raise NotImplementedError ( 'subclasses of Storage must provide a delete() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a delete ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' subclasses of _UNK provide a _UNK ( ) ' .
BLEU = 43.80 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 84.2 
  2-gram: 61.1 
  3-gram:35.3 
  4-gram: 25.0 

Code line 1317:    def exists ( self , name ) :
Original:  define the method exists with arguments self and name . 
Translation: define the method self with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1318:  raise NotImplementedError ( 'subclasses of Storage must provide an exists() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide an exists ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ' .
BLEU = 30.24 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 78.9 
  2-gram: 44.4 
  3-gram:23.5 
  4-gram: 12.5 

Code line 1319:    def listdir ( self , path ) :
Original:  define the method listdir with arguments self and path . 
Translation: define the method _UNK with an argument self and path .
BLEU = 35.08 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 12.5 

Code line 1320:  raise NotImplementedError ( 'subclasses of Storage must provide a listdir() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a listdir ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ) ' .
BLEU = 34.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 80.0 
  2-gram: 52.6 
  3-gram:27.8 
  4-gram: 11.8 

Code line 1321:    def size ( self , name ) :
Original:  define the method size with arguments self and name . 
Translation: define the method __getitem__ with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1322:  raise NotImplementedError ( 'subclasses of Storage must provide a size() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a size ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' subclasses of _UNK must provide a _UNK ( ) ' ' .
BLEU = 44.66 (Bravity Penalty=1.000, Length ratio=1.050, Translated length=21, Reference length=20)
  1-gram: 81.0 
  2-gram: 60.0 
  3-gram:36.8 
  4-gram: 22.2 

Code line 1323:    def url ( self , name ) :
Original:  define the method url with arguments self and name . 
Translation: define the method __getitem__ with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1324:  raise NotImplementedError ( 'subclasses of Storage must provide a url() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a url ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' subclasses of _UNK provide _UNK ( ) method ' .
BLEU = 54.82 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 84.2 
  2-gram: 66.7 
  3-gram:52.9 
  4-gram: 37.5 

Code line 1325:    def accessed_time ( self , name ) :
Original:  define the method accessed_time with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1326:  raise NotImplementedError ( 'subclasses of Storage must provide an accessed_time() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide an accessed_time ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ) ' .
BLEU = 31.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 80.0 
  2-gram: 47.4 
  3-gram:22.2 
  4-gram: 11.8 

Code line 1327:    def created_time ( self , name ) :
Original:  define the method created_time with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1328:  raise NotImplementedError ( 'subclasses of Storage must provide a created_time() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a created_time ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ) ' .
BLEU = 34.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 80.0 
  2-gram: 52.6 
  3-gram:27.8 
  4-gram: 11.8 

Code line 1329:    def modified_time ( self , name ) :
Original:  define the method modified_time with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1330:  raise NotImplementedError ( 'subclasses of Storage must provide a modified_time() method' )
Original:  raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a modified_time ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ) ' .
BLEU = 34.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 80.0 
  2-gram: 52.6 
  3-gram:27.8 
  4-gram: 11.8 

Code line 1331:      @ deconstructible
Original:  decorator deconstructible , 
Translation: decorator deconstructible ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1332:  class FileSystemStorage ( Storage ) :
Original:  derive the class FileSystemStorage from the Storage base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1333:   def __init__ ( self , location = None , base_url = None , file_permissions_mode = None ,  directory_permissions_mode = None ) :
Original:  define the method __init__ with 5 arguments: self , location set to None , base_url set to None , file_permissions_mode set to None , 
Translation: define the method __init__ with 0 arguments : self , stream , _UNK set to None , _UNK set to None ,
BLEU = 37.37 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 72.7 
  2-gram: 52.4 
  3-gram:35.0 
  4-gram: 21.1 

Code line 1334:           if location is None :
Original:  and directory_permissions_mode set to None . if location is None , 
Translation: if location is None ,
BLEU = 30.12 (Bravity Penalty=0.301, Length ratio=0.455, Translated length=5, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1335:               location = settings . MEDIA_ROOT
Original:  substitute the settings . MEDIA_ROOT for location . 
Translation: substitute settings . _UNK for stat .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1336:   self . base_location = location
Original:  substitute the location for self . base_location . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1337:  self . location = abspathu ( self . base_location )
Original:  substitute the return value of the function abspathu with self . base_location as argument for self . location . 
Translation: call the function ugettext with an argument self . _UNK , substitute the result for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 63.2 
  2-gram: 27.8 
  3-gram:5.9 
  4-gram: 0.0 

Code line 1338:  if base_url is None :
Original:  if base_url is None , 
Translation: if _UNK is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1339:               base_url = settings . MEDIA_URL
Original:  substitute settings . MEDIA_URL for base_url . 
Translation: substitute settings . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1340:   elif not base_url . endswith ( '/' ) :
Original:  otherwise if base_url does not ends with ' / ' character , 
Translation: otherwise if ' _UNK ' with character ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 63.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1341:               base_url += '/'
Original:  append character ' / ' to the base_url . 
Translation: append ' _UNK ' to app_or_project .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 71.4 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1342:   self . base_url = base_url
Original:  substitute base_url for self . base_url . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1343:  self . file_permissions_mode = (  file_permissions_mode if file_permissions_mode is not None  else settings . FILE_UPLOAD_PERMISSIONS  )
Original:  self . file_permissions_mode is a tuple containing: file_permissions_mode if file_permissions_mode is not None , 
Translation: if _UNK is an instance of _UNK class _UNK , with _UNK as the settings to self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=20, Reference length=14)
  1-gram: 25.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1344:  self . directory_permissions_mode = (  directory_permissions_mode if directory_permissions_mode is not None  else settings . FILE_UPLOAD_DIRECTORY_PERMISSIONS  )
Original:  or settings . FILE_UPLOAD_PERMISSIONS if it is . self . directory_permissions_mode is a tuple containing: directory_permissions_mode if directory_permissions_mode is not None , 
Translation: if _UNK is an instance of _UNK class _UNK , with _UNK as the settings to self . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 30.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1345:    def _open ( self , name , mode = 'rb' ) :
Original:  or settings . FILE_UPLOAD_DIRECTORY_PERMISSIONS if it is . define the method _open with arguments self , name and mode defaulting to string ' rb ' . 
Translation: define the method _UNK with 0 arguments : self , name , default the default name string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=21, Reference length=26)
  1-gram: 57.1 
  2-gram: 30.0 
  3-gram:10.5 
  4-gram: 0.0 

Code line 1346:           return File ( open ( self . path ( name ) , mode ) )
Original:  call the function self . path with argument name , use it and mode as arguments for the call to the function open , use it as an argument for creatinon of a File object instance , return it . 
Translation: format an instance of _UNK class with name name and name with name , name in the self .
BLEU = 0.00 (Bravity Penalty=0.331, Length ratio=0.475, Translated length=19, Reference length=40)
  1-gram: 52.6 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1347:    def _save ( self , name , content ) :
Original:  define the method _save with arguments self , name and content . 
Translation: define the method _UNK with arguments self , name and name .
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1348:           full_path = self . path ( name )
Original:  substitute result of the self . path function with argument name for full_path . 
Translation: call the method self . _UNK with an argument name , substitute the result for
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 60.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1349:       directory = os . path . dirname ( full_path )
Original:  call the function os . path . dirname with argument full_path , substitute the result for directory . 
Translation: call the method os . _UNK , substitute the result for the result for dirs .
BLEU = 26.59 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18)
  1-gram: 62.5 
  2-gram: 40.0 
  3-gram:21.4 
  4-gram: 15.4 

Code line 1350:  if not os . path . exists ( directory ) :
Original:  if call to the function os . path . exists with argument directory evaluates to boolean False , 
Translation: if potfile doesnt doesnt exists ,
BLEU = 0.00 (Bravity Penalty=0.135, Length ratio=0.333, Translated length=6, Reference length=18)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1351:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1352:                   if self . directory_permissions_mode is not None :
Original:  if self . directory_permissions_mode is not None , 
Translation: if self . _UNK is not None ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 1353:                         old_umask = os . umask ( 0 )
Original:  call the os . umask function with argument integer 0 , substitute the result for old_umask . 
Translation: call the function os . _UNK with an argument integer 0 , substitute the result
BLEU = 43.93 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 86.7 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 33.3 

Code line 1354:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1355:                           os . makedirs ( directory , self . directory_permissions_mode )
Original:  call the os . makedirs function with directory and self . directory_permissions_mode as arguments . 
Translation: call the tuple with 0 arguments : self . _UNK and r .
BLEU = 0.00 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 61.5 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1356:   finally :
Original:  finally perform , 
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1357:                           os . umask ( old_umask )
Original:  call the os . umask function with argument old_umask . 
Translation: call the method os . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1358:    else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1359:                       os . makedirs ( directory )
Original:  call the function os . makedirs with argument directory . 
Translation: call the function os . expanduser with argument filename .
BLEU = 46.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 28.6 

Code line 1360:    except OSError as e :
Original:  if exception OSError , renamed to e , occurred , 
Translation: if OSError renamed to e , is caught ,
BLEU = 30.72 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1361:                   if e . errno != errno . EEXIST :
Original:  if e . errno is not equal to errno . EEXIST , 
Translation: if e is to e . _UNK . or e to e . TemplateSyntaxError ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1362:                       raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1363:     if not os . path . isdir ( directory ) :
Original:  if directory is not an directory , 
Translation: if potfile is not a directory ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1364:               raise IOError ( "%s exists and is not a directory." % directory )
Original:  raise an IOError exception with argument string " %s exists and is not a directory . " , where ' %s ' is replaced by directory . 
Translation: raise an CommandError exception with an argument " %s ' %s is not a valid file %s " .
BLEU = 0.00 (Bravity Penalty=0.656, Length ratio=0.704, Translated length=19, Reference length=27)
  1-gram: 73.7 
  2-gram: 38.9 
  3-gram:5.9 
  4-gram: 0.0 

Code line 1365:          while True :
Original:  endless loop , 
Translation: endless loop ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1366:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1367:                    if hasattr ( content , 'temporary_file_path' ) :
Original:  if content has an attribute ' temporary_file_path ' , 
Translation: if content has an ' process_response ' attribute ,
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1368:                       file_move_safe ( content . temporary_file_path ( ) , full_path )
Original:  call the function file_move_safe with content . temporary_file_path function result and full_path . 
Translation: call the class _UNK . _UNK with 0 arguments : _UNK and no_style and return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.385, Translated length=18, Reference length=13)
  1-gram: 38.9 
  2-gram: 5.9 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1369:     else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1370:                         flags = ( os . O_WRONLY | os . O_CREAT | os . O_EXCL |  getattr ( os , 'O_BINARY' , 0 ) )
Original:  evaluate binary expression with 4 operands: os . O_WRONLY , binary or os . O_CREAT , binary or os . O_EXCL , 
Translation: get the ' _UNK ' _UNK ' _UNK it by it , if it , if it , substitute it for sys .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.045, Translated length=23, Reference length=22)
  1-gram: 17.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1371:   fd = os . open ( full_path , flags , 0o666 )
Original:  binary or ' O_BINARY ' attribute of the os object , or integer 0 if it doesnt exists . call the os . open function with full_path , flags and octal number 0o666 as arguments , substitute the result for fd . 
Translation: substitute the function _UNK with 0 arguments _UNK , _UNK , _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.165, Length ratio=0.357, Translated length=15, Reference length=42)
  1-gram: 66.7 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1372:  _file = None
Original:  _file is None . 
Translation: _UNK is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 1373:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1374:                           locks . lock ( fd , locks . LOCK_EX )
Original:  call the function locks . lock with fd and locks . LOCK_EX as arguments . 
Translation: call the method _UNK with 0 arguments : _UNK . _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 50.0 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1375:  for chunk in content . chunks ( ) :
Original:  for every chunk in content . chunks function return value , 
Translation: for every _UNK in reversed list , for every _UNK in the result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.273, Translated length=14, Reference length=11)
  1-gram: 28.6 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1376:                               if _file is None :
Original:  if _file is None , 
Translation: if _UNK is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1377:                                   mode = 'wb' if isinstance ( chunk , bytes ) else 'wt'
Original:  mode is a string ' wb ' is chunk is instance of the type bytes , otherwise mode is a string ' wt ' . 
Translation: if is an string ' _UNK ' , or every _UNK is _UNK , otherwise ? ' .
BLEU = 0.00 (Bravity Penalty=0.678, Length ratio=0.720, Translated length=18, Reference length=25)
  1-gram: 50.0 
  2-gram: 17.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1378:  _file = os . fdopen ( fd , mode )
Original:  call the function os . fdopen with arguments fd and mode , substitute it for _file . 
Translation: _UNK is a tuple with 0 elements : _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.659, Length ratio=0.706, Translated length=12, Reference length=17)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1379:   _file . write ( chunk )
Original:  write the chunk to the file _file . 
Translation: write _UNK to _UNK .
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1380:    finally :
Original:  finally perform , 
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1381:                           locks . unlock ( fd )
Original:  call the function locks . unlock with argument fd . 
Translation: call the function _UNK . _UNK with an argument app_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1382:  if _file is not None :
Original:  if _file is not None , 
Translation: if _UNK is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1383:                               _file . close ( )
Original:  close the _file file . 
Translation: call the method _UNK . close .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1384:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1385:                               os . close ( fd )
Original:  close fd file . 
Translation: close fd file descriptor .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1386:      except OSError as e :
Original:  if OSError , renamed to e , is caught , 
Translation: if OSError renamed to e , is caught ,
BLEU = 71.89 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 100.0 
  2-gram: 87.5 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1387:                   if e . errno == errno . EEXIST :
Original:  if e . errno equals to errno . EEXIST , 
Translation: if e . errno equals CommandError . _UNK ,
BLEU = 43.44 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1388:                        name = self . get_available_name ( name )
Original:  call the method self . get_available_name with argument name , substitute the result for name . 
Translation: call the method self . _UNK with name name name name name substitute name name
BLEU = 26.66 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:23.1 
  4-gram: 16.7 

Code line 1389:  full_path = self . path ( name )
Original:  call the method self . path with argument name , substitute the result for full_path . 
Translation: call the method self . _UNK with an argument name , substitute the result for
BLEU = 61.80 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1390:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1391:                       raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1392:    else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1393:                    break
Original:  break from the smallest enclosing loop . 
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 83.3 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1394:     if self . file_permissions_mode is not None :
Original:  if self . file_permissions_mode is not None , 
Translation: if self . _UNK is not None ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 1395:               os . chmod ( full_path , self . file_permissions_mode )
Original:  call the function os . chmod with arguments full_path and self . file_permissions_mode . 
Translation: substitute the result for _UNK . _UNK and _UNK of the self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 40.0 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1396:    return name
Original:  return name . 
Translation: return name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1397:    def delete ( self , name ) :
Original:  define the method delete with arguments self and name . 
Translation: define the method __getitem__ with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1398:           assert name , "The name argument is not allowed to be empty."
Original:  if name is boolean False raise an assert error with message string " The name argument is not allowed to be empty . " . 
Translation: name is an string " _UNK name , raise the " _UNK " with name . " and RemovedInDjango00Warning .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=20, Reference length=25)
  1-gram: 55.0 
  2-gram: 15.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1399:  name = self . path ( name )
Original:  call the self . path with argument name , substitute it for name . 
Translation: call the method self . name with an argument name , substitute the result for
BLEU = 24.07 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 8.3 

Code line 1400:      if os . path . exists ( name ) :
Original:  if os . path . exists function with argument name , evaluates to boolean True , 
Translation: if f file path ,
BLEU = 0.00 (Bravity Penalty=0.111, Length ratio=0.312, Translated length=5, Reference length=16)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1401:               try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1402:                   os . remove ( name )
Original:  call the os . remove function with argument name . 
Translation: remove name from space .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=5, Reference length=10)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1403:   except OSError as e :
Original:  if OSError , renamed to e , is caught , 
Translation: if OSError renamed to e , is caught ,
BLEU = 71.89 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 100.0 
  2-gram: 87.5 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1404:                   if e . errno != errno . ENOENT :
Original:  if e . errno equals to errno . EEXIST , 
Translation: if e is to e . _UNK . or e to e . TemplateSyntaxError ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=15, Reference length=10)
  1-gram: 40.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1405:                       raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1406:       def exists ( self , name ) :
Original:  define the method exists with arguments self and name . 
Translation: define the method self with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1407:           return os . path . exists ( self . path ( name ) )
Original:  call the self . path function with argument name , use the result as the argument for the call to the os . path . exists function , return the result . 
Translation: return f . path path of the method path into a path , append the result .
BLEU = 0.00 (Bravity Penalty=0.414, Length ratio=0.531, Translated length=17, Reference length=32)
  1-gram: 52.9 
  2-gram: 18.8 
  3-gram:6.7 
  4-gram: 0.0 

Code line 1408:    def listdir ( self , path ) :
Original:  define the method listdir with arguments self and path . 
Translation: define the method _UNK with an argument self and path .
BLEU = 35.08 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 12.5 

Code line 1409:           path = self . path ( path )
Original:  call the self . path function with argument path , substitute it for path . 
Translation: call the self . path path path path path path to path , substitute the
BLEU = 33.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 60.0 
  2-gram: 42.9 
  3-gram:30.8 
  4-gram: 16.7 

Code line 1410:  directories , files = [ ] , [ ]
Original:  directories , files are empty lists . 
Translation: _UNK is a list containing list elements , for list _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.714, Translated length=12, Reference length=7)
  1-gram: 16.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1411:  for entry in os . listdir ( path ) :
Original:  for every entry in os . listdir function return value called with the argument path , 
Translation: for every path in return value of the function _UNK . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16)
  1-gram: 76.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1412:               if os . path . isdir ( os . path . join ( path , entry ) ) :
Original:  join path and entry into a file path , if it exists , 
Translation: join os . path and path into a string ,
BLEU = 0.00 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13)
  1-gram: 70.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1413:                   directories . append ( entry )
Original:  append entry to the directories list . 
Translation: append entry to _UNK .
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1414:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1415:                   files . append ( entry )
Original:  append entry to files list . 
Translation: append entry to obj_dict .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1416:    return directories , files
Original:  return directories and files . 
Translation: return _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1417:    def path ( self , name ) :
Original:  define the method path with arguments self and name . 
Translation: define the method path with arguments self and name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1418:           try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1419:               path = safe_join ( self . location , name )
Original:  call the safe_join function with arguments self . location and name , substitute it for path . 
Translation: call the function path with arguments self . path and path , substitute the result for path .
BLEU = 24.69 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 72.2 
  2-gram: 41.2 
  3-gram:18.8 
  4-gram: 6.7 

Code line 1420:   except ValueError :
Original:  if ValueError exception is caught , 
Translation: if ValueError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1421:               raise SuspiciousFileOperation ( "Attempted access to '%s' denied." % name )
Original:  raise an SuspiciousFileOperation exception with string " Attempted access to ' %s ' denied . " as argument , replace ' %s ' with name . 
Translation: raise an string " _UNK with an argument string " _UNK ' %s ' %s ' with name with name ,
BLEU = 22.53 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=21, Reference length=26)
  1-gram: 71.4 
  2-gram: 40.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 1422:   return os . path . normpath ( path )
Original:  call the os . path . normpath with argument path , return the result . 
Translation: call os . path . path with path as path , return the result .
BLEU = 51.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:46.2 
  4-gram: 33.3 

Code line 1423:    def size ( self , name ) :
Original:  define the method size with arguments self and name . 
Translation: define the method __getitem__ with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1424:           return os . path . getsize ( self . path ( name ) )
Original:  call the self . path with argument name , use the result as an argument for the call to the os . path . getsize function , return the result . 
Translation: return app_config . _UNK . _UNK method with the name path of the name ,
BLEU = 0.00 (Bravity Penalty=0.344, Length ratio=0.484, Translated length=15, Reference length=31)
  1-gram: 60.0 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1425:    def url ( self , name ) :
Original:  define the method url with arguments self and name . 
Translation: define the method __getitem__ with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1426:           if self . base_url is None :
Original:  if self . base_url is None , 
Translation: if self . _UNK is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1427:               raise ValueError ( "This file is not accessible via a URL." )
Original:  raise an ValueError with string " This file is not accessible via a URL . " as argument . 
Translation: raise an ValueError with an argument string " _UNK is _UNK . __name__ be _UNK . " .
BLEU = 18.61 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 61.1 
  2-gram: 29.4 
  3-gram:12.5 
  4-gram: 6.7 

Code line 1428:   return urljoin ( self . base_url , filepath_to_uri ( name ) )
Original:  call the urljoin function with arguments: self . base_url and result of the call to the function filepath_to_uri with argument name , return the result . 
Translation: call the method _UNK with 0 arguments : name and self . name , return the result .
BLEU = 21.95 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=18, Reference length=26)
  1-gram: 66.7 
  2-gram: 41.2 
  3-gram:25.0 
  4-gram: 20.0 

Code line 1429:    def accessed_time ( self , name ) :
Original:  define the method accessed_time with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1430:           return datetime . fromtimestamp ( os . path . getatime ( self . path ( name ) ) )
Original:  call the function self . path with argument name , use the result as an argument for the call to the function os . path . getatime , 
Translation: call the method _UNK . _UNK with an argument name , name with name , name of the method self . name ,
BLEU = 0.00 (Bravity Penalty=0.805, Length ratio=0.821, Translated length=23, Reference length=28)
  1-gram: 52.2 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 1431:    def created_time ( self , name ) :
Original:  use the result as an argument for the call to the function datetime . fromtimestamp , return the result . define the method created_time with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 8.59 (Bravity Penalty=0.178, Length ratio=0.367, Translated length=11, Reference length=30)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1432:           return datetime . fromtimestamp ( os . path . getctime ( self . path ( name ) ) )
Original:  call the function self . path with argument name , use the result as an argument for the call to the function os . path . getctime , 
Translation: call the method _UNK . _UNK with an argument name , name with name , name of the method self . name ,
BLEU = 0.00 (Bravity Penalty=0.805, Length ratio=0.821, Translated length=23, Reference length=28)
  1-gram: 52.2 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 1433:    def modified_time ( self , name ) :
Original:  use the result as an argument for the call to the function datetime . fromtimestamp , return the result . define the method modified_time with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 8.59 (Bravity Penalty=0.178, Length ratio=0.367, Translated length=11, Reference length=30)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1434:           return datetime . fromtimestamp ( os . path . getmtime ( self . path ( name ) ) )
Original:  call the function self . path with argument name , use the result as an argument for the call to the function os . path . getmtime , 
Translation: call the method _UNK . _UNK with an argument name , name with name , name of the method self . name ,
BLEU = 0.00 (Bravity Penalty=0.805, Length ratio=0.821, Translated length=23, Reference length=28)
  1-gram: 52.2 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 1435:      def get_storage_class ( import_path = None ) :
Original:  use the result as an argument for the call to the function datetime . fromtimestamp , return the result . define the function get_storage_class with argument import_path=None defaulting to None . 
Translation: define the function _UNK with _UNK argument _UNK set to None .
BLEU = 0.00 (Bravity Penalty=0.205, Length ratio=0.387, Translated length=12, Reference length=31)
  1-gram: 66.7 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1436:       return import_string ( import_path or settings . DEFAULT_FILE_STORAGE )
Original:  call the import_string with argument: import_path if exists or settings . DEFAULT_FILE_STORAGE , if not , return the result . 
Translation: evaluate the _UNK object with settings . _UNK or _UNK , if not return settings
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=15, Reference length=20)
  1-gram: 60.0 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1437:     class DefaultStorage ( LazyObject ) :
Original:  derive the class DefaultStorage from the LazyObject base class . 
Translation: derive the class _UNK from the _ExpatParser base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1438:       def _setup ( self ) :
Original:  define the _setup method with argument self . 
Translation: define the method _setup with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1439:           self . _wrapped = get_storage_class ( ) ( )
Original:  call the function that is the return value of get_storage_class method , substitute the result for self . _wrapped . 
Translation: call the function _UNK , substitute the result for self . _UNK .
BLEU = 34.57 (Bravity Penalty=0.584, Length ratio=0.650, Translated length=13, Reference length=20)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1440:     default_storage = DefaultStorage ( )
Original:  call the DefaultStorage method , substitute the result for default_storage . 
Translation: _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1441:   import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1442:  import tempfile
Original:  import module tempfile . 
Translation: import module tempfile .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1443:  from django . core . files . utils import FileProxyMixin
Original:  from django . core . files . utils import FileProxyMixin into default name space . 
Translation: from django . core . forms . files import _UNK into default name space .
BLEU = 54.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 64.3 
  3-gram:46.2 
  4-gram: 33.3 

Code line 1444:   __all__ = ( 'NamedTemporaryFile' , 'gettempdir' , )
Original:  __all__ is a tuple , containing strings ' NamedTemporaryFile ' and ' gettempdir ' . 
Translation: __all__ is a tuple with 0 elements : _UNK , string ' _UNK ' and _UNK .
BLEU = 18.84 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 52.9 
  2-gram: 25.0 
  3-gram:13.3 
  4-gram: 7.1 

Code line 1445:    if os . name == 'nt' :
Original:  if module os field name equals to string ' nt ' , 
Translation: if os . name equals string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 80.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1446:       class TemporaryFile ( FileProxyMixin ) :
Original:  derive class TemporaryFile from the base class FileProxyMixin . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1447:  def __init__ ( self , mode = 'w+b' , bufsize = - 1 , suffix = '' , prefix = '' ,  dir = None ) :
Original:  define method __init__ with self class instance , mode string ' w+b ' , bufsize set to integer -1 , suffix and prefix set to empty strig , 
Translation: define the method __init__ with 0 arguments : self , _UNK , _UNK set to string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=20, Reference length=28)
  1-gram: 65.0 
  2-gram: 26.3 
  3-gram:5.6 
  4-gram: 0.0 

Code line 1448:               fd , name = tempfile . mkstemp ( suffix = suffix , prefix = prefix , dir = dir )
Original:  dir set to None as the arguments . call the method tmpfile . mkstemp with suffix set to suffix , prefix set to prefix and dir set to dir , store the result in the fd and name , respective . 
Translation: call the method _UNK . _UNK with arguments name , _UNK set to max_value , assign the result to _UNK , _UNK , respectively .
BLEU = 0.00 (Bravity Penalty=0.527, Length ratio=0.610, Translated length=25, Reference length=41)
  1-gram: 64.0 
  2-gram: 20.8 
  3-gram:4.3 
  4-gram: 0.0 

Code line 1449:  self . name = name
Original:  substitute name for self . name . 
Translation: substitute name for self . name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1450:  self . file = os . fdopen ( fd , mode , bufsize )
Original:  call the os . fdopen function with fd , mode and bufsize as the arguments , assign the file handle object to self . file . 
Translation: call the function os . _UNK with 0 arguments : _UNK , _UNK and _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26)
  1-gram: 54.5 
  2-gram: 9.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1451:  self . close_called = False
Original:  substitute False for self . close_called . 
Translation: self . _UNK is boolean False .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1452:       unlink = os . unlink
Original:  substitute os . unlink for unlink . 
Translation: substitute record . for for wrapper .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1453:   def close ( self ) :
Original:  define the method close with self class instance as the argument . 
Translation: define the method close with an argument self .
BLEU = 35.97 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 88.9 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1454:               if not self . close_called :
Original:  if self . close_called is False , 
Translation: if self . _UNK is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1455:                   self . close_called = True
Original:  substitute True for self . close_called . 
Translation: self . _UNK is boolean True .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1456:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1457:                       self . file . close ( )
Original:  close the file object . 
Translation: call the method self . file file .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.600, Translated length=8, Reference length=5)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1458:   except ( OSError , IOError ) :
Original:  if OSError or IOError exceptions were raised , 
Translation: if OSError or OSError exceptions exceptions caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1459:                       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1460:   try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1461:                       self . unlink ( self . name )
Original:  call the method unlink on self with self . name as the argument . 
Translation: call the method self . tag_function with an argument self . name .
BLEU = 0.00 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14)
  1-gram: 76.9 
  2-gram: 33.3 
  3-gram:18.2 
  4-gram: 0.0 

Code line 1462:   except ( OSError ) :
Original:  if OSError exception was raised , 
Translation: if OSError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1463:                       pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1464:      @ property
Original:  property decorator , to be called by property built-in function . 
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=0.069, Length ratio=0.273, Translated length=3, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1465:  def closed ( self ) :
Original:  define the method closed with self as the argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1466:  return self . file . closed
Original:  return self . file . closed . 
Translation: return self . _callback . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1467:    def __del__ ( self ) :
Original:  define __del__ method with self as the argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1468:               self . close ( )
Original:  call the method close on self . 
Translation: call the method self . close .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 50.0 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1469:    def __enter__ ( self ) :
Original:  define __enter__ method with self as the argument . 
Translation: define the method __enter__ with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1470:               self . file . __enter__ ( )
Original:  call the file . __enter__ method on self . 
Translation: call the method self . stream .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1471:  return self
Original:  return self . 
Translation: return self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1472:    def __exit__ ( self , exc , value , tb ) :
Original:  define method __exit__ with self , exc , value and tb as the arguments . 
Translation: define the method strptime with arguments self , value , value and _UNK .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 78.6 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1473:               self . file . __exit__ ( exc , value , tb )
Original:  call the file . __exit__ method on self with exc , value and tb as the arguments . 
Translation: call the method self . exc_type with arguments , exc_type , exc_value , _UNK and value .
BLEU = 0.00 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 64.7 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1474:     NamedTemporaryFile = TemporaryFile
Original:  substitute TemporaryFile for NamedTemporaryFile . 
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1475:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1476:       NamedTemporaryFile = tempfile . NamedTemporaryFile
Original:  substitute tempfile . NamedTemporaryFile for NamedTemporaryFile . 
Translation: substitute _UNK . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1477:    gettempdir = tempfile . gettempdir
Original:  substitute tempfile . gettempdir for gettempdir . 
Translation: substitute _UNK . _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1478:   import errno
Original:  import module errno . 
Translation: import module errno .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1479:  import os
Original:  import module os . 
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1480:  from io import BytesIO
Original:  from io import BytesIO into default name space . 
Translation: from io import BytesIO into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1481:   from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1482:  from django . core . files . base import File
Original:  from django . core . files . base import File into default name space . 
Translation: from django . core . base . base import BaseEmailBackend into default name space .
BLEU = 57.74 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 33.3 

Code line 1483:  from django . core . files import temp as tempfile
Original:  from django . core . files import temp as tempfile into default name space . 
Translation: from django . core . models import _UNK as InteractiveMigrationQuestioner into default name space .
BLEU = 51.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:46.2 
  4-gram: 33.3 

Code line 1484:  from django . utils . encoding import force_str
Original:  from django . utils . encoding import force_str into default name space . 
Translation: from django . utils . encoding import force_str into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1485:   __all__ = ( 'UploadedFile' , 'TemporaryUploadedFile' , 'InMemoryUploadedFile' ,  'SimpleUploadedFile' )
Original:  __all__ is a tuple containing strings: ' UploadedFile ' , ' TemporaryUploadedFile ' , ' InMemoryUploadedFile ' and ' SimpleUploadedFile ' . 
Translation: __all__ is a tuple with 0 elements : strings ' _UNK ' , ' _UNK ' and ' _UNK ' .
BLEU = 22.12 (Bravity Penalty=0.953, Length ratio=0.955, Translated length=21, Reference length=22)
  1-gram: 61.9 
  2-gram: 40.0 
  3-gram:21.1 
  4-gram: 5.6 

Code line 1486:    class UploadedFile ( File ) :
Original:  derive the UploadedFile class from the File base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1487:  DEFAULT_CHUNK_SIZE = 64 * 2 ** 10
Original:  bring integer 2 to the power of 10 , multiply it by integer 64 , substitute the result for DEFAULT_CHUNK_SIZE . 
Translation: subtract 00 00 00 00 00 by integer 0 00 00 00 00 , substitute
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=15, Reference length=21)
  1-gram: 26.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1488:   def __init__ ( self , file = None , name = None , content_type = None , size = None , charset = None , content_type_extra = None ) :
Original:  define the method __init__ with 7 arguments: self , file set to None , name set to None , content_type set to None , size set to None , charset set to None and content_type_extra set to None . 
Translation: define the method __init__ with 0 arguments : self , name set to None , error_class set to None , content_type set to None , content_type set to None ,
BLEU = 46.35 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=30, Reference length=39)
  1-gram: 83.3 
  2-gram: 72.4 
  3-gram:57.1 
  4-gram: 44.4 

Code line 1489:           super ( UploadedFile , self ) . __init__ ( file , name )
Original:  call the __init__ method with arguments file and name , from the base class of the UploadedFile class . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : name and name .
BLEU = 31.58 (Bravity Penalty=1.000, Length ratio=1.105, Translated length=21, Reference length=19)
  1-gram: 81.0 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 16.7 

Code line 1490:  self . size = size
Original:  substitute size for self . size . 
Translation: substitute size for self . size .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1491:  self . content_type = content_type
Original:  substitute content_type for self . content_type . 
Translation: substitute substitute for self . origin .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1492:  self . charset = charset
Original:  substitute charset for self . charset . 
Translation: substitute charset for self . message .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1493:  self . content_type_extra = content_type_extra
Original:  substitute content_type_extra for self . content_type_extra . 
Translation: substitute unpacked list self . unpack_ipv0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1494:    def __repr__ ( self ) :
Original:  define the method __repr__ with argument self . 
Translation: define the method __repr__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1495:           return force_str ( "<%s: %s (%s)>" % (  self . __class__ . __name__ , self . name , self . content_type ) )
Original:  substitute ' %s ' from string " <%s: %s ( %s ) > " with self . __class__ . __name__ , self . name and self . content_type , respectively , use it as an argument for the call to the function force_str , return the result . 
Translation: return string " <%s ( %s " %s " is replaced with name , if the " %s ' replaced with self . name and name ,
BLEU = 7.84 (Bravity Penalty=0.459, Length ratio=0.562, Translated length=27, Reference length=48)
  1-gram: 63.0 
  2-gram: 26.9 
  3-gram:12.0 
  4-gram: 4.2 

Code line 1496:    def _get_name ( self ) :
Original:  define the method _get_name with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1497:           return self . _name
Original:  return self . _name . 
Translation: return self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1498:    def _set_name ( self , name ) :
Original:  define the method _set_name with arguments self and name . 
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1499:            if name is not None :
Original:  if name is not None , 
Translation: if name is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1500:                name = os . path . basename ( name )
Original:  call the function os . path . basename with argument name , substitute the result for name . 
Translation: call the method os . name with an argument name , substitute the result for name .
BLEU = 53.41 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 82.4 
  2-gram: 62.5 
  3-gram:46.7 
  4-gram: 42.9 

Code line 1501:    if len ( name ) > 255 :
Original:  if length of name is greater than integer 255 , 
Translation: if length of name is greater than integer 0 ,
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:75.0 
  4-gram: 71.4 

Code line 1502:                   name , ext = os . path . splitext ( name )
Original:  call the os . path . splitex with argument name , assign the result to name and ext , respectively . 
Translation: substitute the value . name . name with name name and name , substitute the result for template_dir .
BLEU = 0.00 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 57.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1503:  ext = ext [ : 255 ]
Original:  substitute the first 255 elements of ext for ext . 
Translation: substitute ext for ext . ext for ext in ext .
BLEU = 24.81 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 45.5 
  2-gram: 30.0 
  3-gram:22.2 
  4-gram: 12.5 

Code line 1504:  name = name [ : 255 - len ( ext ) ] + ext
Original:  subtract length of the ext from the integer 255 , take first elements of the name list up to the previous result index , 
Translation: append the length of _UNK incremented to name , append name from the name into name , substitute the result for val0 .
BLEU = 0.00 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 47.8 
  2-gram: 13.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1505:     self . _name = name
Original:  append ext to the end of it , substitute the resulting list for name . substitute name for self . _name . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.117, Length ratio=0.318, Translated length=7, Reference length=22)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1506:    name = property ( _get_name , _set_name )
Original:  name is a property object with _get_name as a getter method and _set_name as a setter method . 
Translation: _UNK is a property _UNK _UNK _UNK _UNK _UNK into a name .
BLEU = 0.00 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=13, Reference length=18)
  1-gram: 46.2 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 1507:     class TemporaryUploadedFile ( UploadedFile ) :
Original:  derive the TemporaryUploadedFile class from the UploadedFile base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1508:  def __init__ ( self , name , content_type , size , charset , content_type_extra = None ) :
Original:  define the __init__ method with 6 arguments: self , name , content_type , size , charset and content_type_extra set to None . 
Translation: define the method __init__ with 0 arguments : self , regex , regex , content_type set to None .
BLEU = 17.60 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 73.7 
  2-gram: 33.3 
  3-gram:11.8 
  4-gram: 6.2 

Code line 1509:           if settings . FILE_UPLOAD_TEMP_DIR :
Original:  if settings . FILE_UPLOAD_TEMP_DIR is true , 
Translation: if settings . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1510:               file = tempfile . NamedTemporaryFile ( suffix = '.upload' ,  dir = settings . FILE_UPLOAD_TEMP_DIR )
Original:  call the method tempfile . NamedTemporaryFile with arguments: suffix set to string ' . upload ' and dir set to settings . FILE_UPLOAD_TEMP_DIR . 
Translation: call the method _UNK . _UNK with 0 arguments : _UNK , _UNK set to string ' _UNK ' , assign the result to _UNK
BLEU = 15.27 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24)
  1-gram: 44.0 
  2-gram: 20.8 
  3-gram:13.0 
  4-gram: 4.5 

Code line 1511:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1512:               file = tempfile . NamedTemporaryFile ( suffix = '.upload' )
Original:  call the method tempfile . NamedTemporaryFile with argument suffix set to string ' . upload ' . 
Translation: call the method _UNK . _UNK with an argument string ' _UNK ' , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17)
  1-gram: 50.0 
  2-gram: 15.8 
  3-gram:5.6 
  4-gram: 0.0 

Code line 1513:   super ( TemporaryUploadedFile , self ) . __init__ ( file , name , content_type , size , charset , content_type_extra )
Original:  call the method __init__ from the base class of the TemporaryUploadedFile class with arguments: file , name , content_type , size , charset and content_type_extra . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : name , files , nodelist_loop , nodelist_loop ,
BLEU = 40.43 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 68.0 
  2-gram: 41.7 
  3-gram:34.8 
  4-gram: 31.8 

Code line 1514:    def temporary_file_path ( self ) :
Original:  define the method temporary_file_path with argument self . 
Translation: define the method S with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1515:  return self . file . name
Original:  return self . file . name . 
Translation: return self . name . name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1516:    def close ( self ) :
Original:  define the method close with argument self . 
Translation: define the method close with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1517:           try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1518:               return self . file . close ( )
Original:  call the self . file . close method , return the result . 
Translation: call the method self . file . file , return the result .
BLEU = 53.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 66.7 
  3-gram:45.5 
  4-gram: 30.0 

Code line 1519:   except OSError as e :
Original:  if OSError , renamed to e , exception is caught , 
Translation: if OSError renamed to e , is caught ,
BLEU = 38.52 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1520:               if e . errno != errno . ENOENT :
Original:  if e . errno is not equal to errno . ENOENT , 
Translation: if e is to e . _UNK . or e to e . TemplateSyntaxError ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1521:                      raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1522:        class InMemoryUploadedFile ( UploadedFile ) :
Original:  derive the InMemoryUploadedFile class from the UploadedFile base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1523:  def __init__ ( self , file , field_name , name , content_type , size , charset , content_type_extra = None ) :
Original:  define the method __init__ with 8 arguments: self , file , field_name , name , content_type , size , charset and content_type_extra set to None . 
Translation: define the method __init__ with 0 arguments : self , regex , regex , regex , prefix , prefix , prefix set to None .
BLEU = 27.09 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 64.0 
  2-gram: 33.3 
  3-gram:21.7 
  4-gram: 13.6 

Code line 1524:           super ( InMemoryUploadedFile , self ) . __init__ ( file , name , content_type , size , charset , content_type_extra )
Original:  call the method __init__ from the base class of the InMemoryUploadedFile base class , with 6 arguments: file , name , content_type , 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : name , files , nodelist_loop , nodelist_loop ,
BLEU = 43.10 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 68.0 
  2-gram: 45.8 
  3-gram:34.8 
  4-gram: 31.8 

Code line 1525:  self . field_name = field_name
Original:  size , charset , content_type_extra . substitute field_name for self . field_name . 
Translation: substitute prefix for self . prefix .
BLEU = 0.00 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=7, Reference length=13)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1526:    def open ( self , mode = None ) :
Original:  define the method open with arguments self and mode set to None . 
Translation: define the method open with arguments self and stream as arguments .
BLEU = 58.11 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:60.0 
  4-gram: 55.6 

Code line 1527:           self . file . seek ( 0 )
Original:  set the file pointer at the beginning of the self . file file . 
Translation: call the method self . translate . write with an argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 28.6 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1528:    def chunks ( self , chunk_size = None ) :
Original:  define the method chunks with arguments self ad chunk_size set to None . 
Translation: define the method __getattr__ with arguments self and instance and mimetype set to arguments .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 60.0 
  2-gram: 35.7 
  3-gram:15.4 
  4-gram: 0.0 

Code line 1529:           self . file . seek ( 0 )
Original:  set the file pointer at the beginning of the self . file file . 
Translation: call the method self . translate . write with an argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 28.6 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1530:  yield self . read ( )
Original:  read the whole self file and yield it as a generator return value . 
Translation: call the method self . read , yield the result .
BLEU = 0.00 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14)
  1-gram: 45.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1531:    def multiple_chunks ( self , chunk_size = None ) :
Original:  define the method multiple_chunks with arguments self and hunk_size set to None . 
Translation: define the method _UNK with arguments self and instance and connection set to arguments .
BLEU = 27.23 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:23.1 
  4-gram: 8.3 

Code line 1532:            return False
Original:  return boolean False . 
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1533:      class SimpleUploadedFile ( InMemoryUploadedFile ) :
Original:  derive the SimpleUploadedFile class from the InMemoryUploadedFile base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1534:  def __init__ ( self , name , content , content_type = 'text/plain' ) :
Original:  define the method __init__ with 4 arguments: self , name , content and content_type defaulting to a string ' text/plain ' . 
Translation: define the method __init__ with 0 arguments : self , name , _UNK , _UNK and msg .
BLEU = 28.36 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=18, Reference length=22)
  1-gram: 61.1 
  2-gram: 41.2 
  3-gram:31.2 
  4-gram: 20.0 

Code line 1535:           content = content or b''
Original:  if content is empty , substitute it for an empty string . 
Translation: substitute content content content for content for content .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 44.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1536:  super ( SimpleUploadedFile , self ) . __init__ ( BytesIO ( content ) , None , name ,  content_type , len ( content ) , None , None )
Original:  call the __init__ method from the base class of the SimpleUploadedFile class with 7 arguments: BytesIO ( content ) , None , name , 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : name ,
BLEU = 26.22 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24)
  1-gram: 78.9 
  2-gram: 38.9 
  3-gram:23.5 
  4-gram: 18.8 

Code line 1537:    @ classmethod
Original:  content_type , length of content , None and None . decorator classmethod . 
Translation: classmethod decorator ,
BLEU = 0.00 (Bravity Penalty=0.036, Length ratio=0.231, Translated length=3, Reference length=13)
  1-gram: 100.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1538:  def from_dict ( cls , file_dict ) :
Original:  define the method from_dict with argument cls and file_dict . 
Translation: define the function _UNK with 0 arguments : cls and _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 50.0 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1539:  return cls ( file_dict [ 'filename' ] ,  file_dict [ 'content' ] ,  file_dict . get ( 'content-type' , 'text/plain' ) )
Original:  call the method cls with 3 arguments: value under the ' filename ' key of file_dict , value under the ' content ' key of file_dict , 
Translation: call the function _UNK with 0 arguments : _UNK under the ' _UNK ' key of the dictionary _UNK with string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 52.0 
  2-gram: 20.8 
  3-gram:8.7 
  4-gram: 0.0 

Code line 1540:   from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1541:   from io import BytesIO
Original:  from io import BytesIO into default name space . 
Translation: from io import BytesIO into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1542:   from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1543:  from django . core . files . uploadedfile import TemporaryUploadedFile , InMemoryUploadedFile
Original:  from django . core . files . uploadedfile import TemporaryUploadedFile and InMemoryUploadedFile into default name space . 
Translation: from django . core . files . _UNK import _UNK and _UNK into default name space .
BLEU = 58.57 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 82.4 
  2-gram: 62.5 
  3-gram:53.3 
  4-gram: 42.9 

Code line 1544:  from django . utils . encoding import python_2_unicode_compatible
Original:  from django . utils . encoding import python_2_unicode_compatible into default name space . 
Translation: from django . utils . encoding import python_0_unicode_compatible into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1545:  from django . utils . module_loading import import_string
Original:  from django . utils . module_loading import import_string into default name space . 
Translation: from django . utils . module_loading import import_string into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1546:   __all__ = [  'UploadFileException' , 'StopUpload' , 'SkipFile' , 'FileUploadHandler' ,  'TemporaryFileUploadHandler' , 'MemoryFileUploadHandler' , 'load_handler' ,  'StopFutureHandlers'  ]
Original:  __all__ is a string containing strings: ' UploadFileException ' , ' StopUpload ' , ' SkipFile ' , ' FileUploadHandler ' , 
Translation: _UNK is list with list elements of ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' , ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.227, Translated length=27, Reference length=22)
  1-gram: 48.1 
  2-gram: 26.9 
  3-gram:12.0 
  4-gram: 0.0 

Code line 1547:    class UploadFileException ( Exception ) :
Original:  ' TemporaryFileUploadHandler ' , ' MemoryFileUploadHandler ' , ' load_handler ' and ' StopFutureHandlers ' . derive the class UploadFileException from the Exception base class . 
Translation: derive the class _UNK from the Exception base class .
BLEU = 13.29 (Bravity Penalty=0.202, Length ratio=0.385, Translated length=10, Reference length=26)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1548:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1549:     @ python_2_unicode_compatible
Original:  decorator python_2_unicode_compatible , 
Translation: python_0_unicode_compatible decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1550:  class StopUpload ( UploadFileException ) :
Original:  derive the class StopUpload from the UploadFileException base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1551:  def __init__ ( self , connection_reset = False ) :
Original:  define the method __init__ with arguments self and connection_reset defaulting to boolean False . 
Translation: define the method __init__ with arguments self and _UNK set to boolean False .
BLEU = 69.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 85.7 
  2-gram: 76.9 
  3-gram:66.7 
  4-gram: 54.5 

Code line 1552:  self . connection_reset = connection_reset
Original:  substitute connection_reset for self . connection_reset . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1553:    def __str__ ( self ) :
Original:  define the method __str__ with argument self . 
Translation: define the method __str__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1554:           if self . connection_reset :
Original:  if self . connection_reset is true , 
Translation: if self . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1555:               return 'StopUpload: Halt current upload.'
Original:  return string ' StopUpload: Halt current upload . ' . 
Translation: return a string ' _UNK ' . ' .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1556:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1557:               return 'StopUpload: Consume request data, then halt.'
Original:  return string ' StopUpload: Consume request data , then halt . ' . 
Translation: return a string ' _UNK ' . _UNK is _UNK , return the result . _UNK for the class _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.615, Translated length=21, Reference length=13)
  1-gram: 33.3 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1558:       class SkipFile ( UploadFileException ) :
Original:  derive the class SkipFile from the UploadFileException base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1559:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1560:     class StopFutureHandlers ( UploadFileException ) :
Original:  derive the class StopFutureHandlers from the UploadFileException base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1561:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1562:     class FileUploadHandler ( object ) :
Original:  derive the class FileUploadHandler from the object base class . 
Translation: derive the class _UNK from object base class .
BLEU = 39.94 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1563:  chunk_size = 64 * 2 ** 10
Original:  bring integer 2 to the power of 10 , multiply it by integer 64 , substitute the result for chunk_size . 
Translation: multiply j by integer 00 .
BLEU = 0.00 (Bravity Penalty=0.082, Length ratio=0.286, Translated length=6, Reference length=21)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1564:   def __init__ ( self , request = None ) :
Original:  define the method __init__ with arguments self and request defaulting to None . 
Translation: define the method __init__ with arguments : self and None set to None .
BLEU = 48.42 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 78.6 
  2-gram: 61.5 
  3-gram:41.7 
  4-gram: 27.3 

Code line 1565:           self . file_name = None
Original:  self . file_name is None . 
Translation: self . error_class is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1566:  self . content_type = None
Original:  self . content_type is None . 
Translation: self . _changed_data is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1567:  self . content_length = None
Original:  self . content_length is None . 
Translation: self . content_length is None .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1568:  self . charset = None
Original:  self . charset is None . 
Translation: self . connection is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1569:  self . content_type_extra = None
Original:  self . content_type_extra is None . 
Translation: self . lookups is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1570:  self . request = request
Original:  self . request is None . 
Translation: substitute request for self . _encoding .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1571:    def handle_raw_input ( self , input_data , META , content_length , boundary , encoding = None ) :
Original:  define the method handle_raw_input with arguments: self , input_data , META , content_length , boundary and encoding set to None . 
Translation: define the method _UNK with arguments self , _UNK , _UNK , prefix , prefix , prefix as arguments .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 50.0 
  2-gram: 15.8 
  3-gram:5.6 
  4-gram: 0.0 

Code line 1572:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1573:    def new_file ( self , field_name , file_name , content_type , content_length , charset = None , content_type_extra = None ) :
Original:  define the method new_file with arguments: self , field_name , file_name , content_type , content_length , charset set to None , 
Translation: define the method render with 0 arguments : self , stream , stream , prefix , prefix set to None ,
BLEU = 20.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 61.9 
  2-gram: 30.0 
  3-gram:15.8 
  4-gram: 5.6 

Code line 1574:  self . field_name = field_name
Original:  substitute field_name for self . field_name . 
Translation: substitute prefix for self . prefix .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1575:  self . file_name = file_name
Original:  substitute file_name for self . file_name . 
Translation: substitute file_name for self . file_name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1576:  self . content_type = content_type
Original:  substitute content_type for self . content_type . 
Translation: substitute substitute for self . origin .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1577:  self . content_length = content_length
Original:  substitute content_length for self . content_length . 
Translation: substitute content_length for self . _stream .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1578:  self . charset = charset
Original:  substitute charset for self . charset . 
Translation: substitute charset for self . message .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1579:  self . content_type_extra = content_type_extra
Original:  substitute content_type_extra for self . content_type_extra . 
Translation: substitute unpacked list self . unpack_ipv0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1580:    def receive_data_chunk ( self , raw_data , start ) :
Original:  define the method receive_data_chunk with arguments: self , raw_data and start . 
Translation: define the method _UNK with 0 arguments : self , filepath and parse_until .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 57.1 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1581:  raise NotImplementedError ( 'subclasses of FileUploadHandler must provide a receive_data_chunk() method' )
Original:  raise an NotImplementedError with argument string ' subclasses of FileUploadHandler must provide a receive_data_chunk ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ) ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 75.0 
  2-gram: 42.1 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1582:    def file_complete ( self , file_size ) :
Original:  define the method file_complete with arguments: self and file_size . 
Translation: define the method _UNK with 0 arguments : self and chunk .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 58.3 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1583:  raise NotImplementedError ( 'subclasses of FileUploadHandler must provide a file_complete() method' )
Original:  raise an NotImplementedError with argument string ' subclasses of FileUploadHandler must provide a file_complete ( ) method ' . 
Translation: raise an NotImplementedError exception with an argument string ' _UNK of _UNK must provide a _UNK ( ) ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 75.0 
  2-gram: 42.1 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1584:    def upload_complete ( self ) :
Original:  define the method upload_complete with argument self . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1585:  pass
Original:  do nothing . 
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1586:      class TemporaryFileUploadHandler ( FileUploadHandler ) :
Original:  derive the class TemporaryFileUploadHandler from the FileUploadHandler base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1587:  def __init__ ( self , * args , ** kwargs ) :
Original:  define the method __init__ with arguments self , argument list args and dictionary of arguments kwargs . 
Translation: define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 42.65 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 82.4 
  2-gram: 56.2 
  3-gram:33.3 
  4-gram: 21.4 

Code line 1588:           super ( TemporaryFileUploadHandler , self ) . __init__ ( * args , ** kwargs )
Original:  call the __init__ method from the base class of the TemporaryFileUploadHandler class with arguments: unpacked list args , 
Translation: call the method __init__ from the base class of the class _UNK , with arguments unpacked list args and unpacked dictionary kwargs .
BLEU = 30.83 (Bravity Penalty=1.000, Length ratio=1.278, Translated length=23, Reference length=18)
  1-gram: 69.6 
  2-gram: 36.4 
  3-gram:23.8 
  4-gram: 15.0 

Code line 1589:    def new_file ( self , file_name , * args , ** kwargs ) :
Original:  and unpacked dictionary kwargs . define the method new_file with arguments: self , file_name , unpacked list args and unpacked dictionary kwargs . 
Translation: define the method __exit__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 42.66 (Bravity Penalty=0.757, Length ratio=0.783, Translated length=18, Reference length=23)
  1-gram: 77.8 
  2-gram: 64.7 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1590:  super ( TemporaryFileUploadHandler , self ) . new_file ( file_name , * args , ** kwargs )
Original:  call the method new_file from the base class of the TemporaryFileUploadHandler class with arguments: file_name , unpacked list args and unpacked dictionary kwargs . 
Translation: call the method __init__ from the base class of the class _UNK , with 0 arguments : unpacked list args ,
BLEU = 31.26 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 71.4 
  2-gram: 45.0 
  3-gram:31.6 
  4-gram: 16.7 

Code line 1591:  self . file = TemporaryUploadedFile ( self . file_name , self . content_type , 0 , self . charset , self . content_type_extra )
Original:  self . file is a instance of a class TemporaryUploadedFile initialized with arguments: self . file_name , self . content_type , integer 0 , 
Translation: call the function _UNK with 0 arguments : self . _UNK , self . cmd , self . cmd , self . contents ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 45.8 
  2-gram: 17.4 
  3-gram:4.5 
  4-gram: 0.0 

Code line 1592:    def receive_data_chunk ( self , raw_data , start ) :
Original:  self . charset and self . content_type_extra . define the method receive_data_chunk with arguments: self , raw_data and start . 
Translation: define the method _UNK with 0 arguments : self , filepath and parse_until .
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=14, Reference length=20)
  1-gram: 57.1 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1593:           self . file . write ( raw_data )
Original:  call the method self . file . write with argument raw_data . 
Translation: write file to self . file stream .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=8, Reference length=12)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1594:    def file_complete ( self , file_size ) :
Original:  define the method file_complete with arguments self and file_size . 
Translation: define the method _UNK with 0 arguments : self and chunk .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1595:           self . file . seek ( 0 )
Original:  position the file pointer at the start of the self . file file . 
Translation: call the method self . translate . write with an argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 28.6 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1596:  self . file . size = file_size
Original:  substitute file_size for self . file . size . 
Translation: substitute callback for self . buffer .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1597:  return self . file
Original:  return self . file . 
Translation: return self . file .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1598:      class MemoryFileUploadHandler ( FileUploadHandler ) :
Original:  derive the class MemoryFileUploadHandler from the FileUploadHandler base class . 
Translation: derive the class _UNK from the _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1599:   def handle_raw_input ( self , input_data , META , content_length , boundary , encoding = None ) :
Original:  define the method handle_raw_input with arguments: self , input_data , META , content_length , boundary and encoding set to None . 
Translation: define the method _UNK with arguments self , _UNK , _UNK , prefix , prefix , prefix as arguments .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 50.0 
  2-gram: 15.8 
  3-gram:5.6 
  4-gram: 0.0 

Code line 1600:    if content_length > settings . FILE_UPLOAD_MAX_MEMORY_SIZE :
Original:  if content_length is greater than settings . FILE_UPLOAD_MAX_MEMORY_SIZE , 
Translation: if urlconf_name . _UNK is _UNK ,
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1601:               self . activated = False
Original:  self . activated is boolean False . 
Translation: self . _UNK is boolean False .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 1602:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1603:               self . activated = True
Original:  self . activated is boolean True . 
Translation: self . _UNK is boolean True .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 1604:     def new_file ( self , * args , ** kwargs ) :
Original:  define the method new_file with arguments: self , unpacked list args and unpacked dictionary kwargs . 
Translation: define the method __exit__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 60.29 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=18, Reference length=16)
  1-gram: 77.8 
  2-gram: 64.7 
  3-gram:56.2 
  4-gram: 46.7 

Code line 1605:           super ( MemoryFileUploadHandler , self ) . new_file ( * args , ** kwargs )
Original:  call the new_file method form the base class from the MemoryFileUploadHandler class with arguments: unpacked list args and unpacked list kwargs . 
Translation: call the method __init__ from the base class of the _UNK class , with arguments list and unpacked list args ,
BLEU = 0.00 (Bravity Penalty=0.953, Length ratio=0.955, Translated length=21, Reference length=22)
  1-gram: 71.4 
  2-gram: 35.0 
  3-gram:15.8 
  4-gram: 0.0 

Code line 1606:  if self . activated :
Original:  if self . activated is boolean True , 
Translation: if self . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1607:               self . file = BytesIO ( )
Original:  call the function BytesIO , substitute the result for self . file . 
Translation: self . instance to an instance of the file self . __class__ .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 38.5 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1608:  raise StopFutureHandlers ( )
Original:  raise an exception StopFutureHandlers . 
Translation: raise an _UNK exception with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.800, Translated length=9, Reference length=5)
  1-gram: 44.4 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1609:     def receive_data_chunk ( self , raw_data , start ) :
Original:  define the function receive_data_chunk with arguments self , raw_data and start . 
Translation: define the method _UNK with 0 arguments : self , filepath and parse_until .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 57.1 
  2-gram: 15.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1610:  if self . activated :
Original:  if self . activated is boolean True , 
Translation: if self . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1611:               self . file . write ( raw_data )
Original:  write raw_data to self . file file . 
Translation: write file to self . file stream .
BLEU = 39.76 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 1612:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1613:               return raw_data
Original:  return raw_data . 
Translation: return cached .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1614:     def file_complete ( self , file_size ) :
Original:  define the function file_complete with arguments self and file_size . 
Translation: define the method _UNK with 0 arguments : self and chunk .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 58.3 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1615:  if not self . activated :
Original:  if self . activated is boolean False , 
Translation: if self . _UNK is false ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1616:               return
Original:  return nothing . 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1617:    self . file . seek ( 0 )
Original:  set file pointer at the beginning of the self . file file . 
Translation: call the method self . translate . write with an argument integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 28.6 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1618:  return InMemoryUploadedFile (  file = self . file ,  field_name = self . field_name ,  name = self . file_name ,  content_type = self . content_type ,  size = file_size ,  charset = self . charset ,  content_type_extra = self . content_type_extra  )
Original:  initialize the object of a InMemoryUploadedFile class with arguments: file set to self . file , field_name set to self . field_name , 
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.043, Translated length=1, Reference length=23)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1619:       def load_handler ( path , * args , ** kwargs ) :
Original:  name set to self . file_name , content_type set to self . content_type , size set to file_size , charset set to self . charset , and content_type_extra set to self . content_type_extra , return it . define the function load_handler with arguments: path , unpacked list args and unpacked dictionary kwargs . 
Translation: define the function _UNK with 0 arguments : _UNK , unpacked list args and unpacked dictionary kwargs .
BLEU = 7.72 (Bravity Penalty=0.143, Length ratio=0.340, Translated length=18, Reference length=53)
  1-gram: 72.2 
  2-gram: 58.8 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1620:  return import_string ( path ) ( * args , ** kwargs )
Original:  call the import_string with arguments path , call the return function with arguments: unpacked list args and unpacked dictionary kwargs , return the result . 
Translation: call the function pformat with arguments : _UNK and unpacked list of the function return the result , return the result .
BLEU = 22.08 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=22, Reference length=25)
  1-gram: 68.2 
  2-gram: 38.1 
  3-gram:15.0 
  4-gram: 10.5 

Code line 1621: class FileProxyMixin ( object ) :
Original:  derive class FileProxyMixin from the base class object , making it a new-style class . 
Translation: derive the class _UNK from object base class .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=9, Reference length=15)
  1-gram: 88.9 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1622:   encoding = property ( lambda self : self . file . encoding )
Original:  define lambda function that returns self . file . encoding field , use it as an argument for property function , put the result in encoding . 
Translation: message is a property dictionary with self . encoding and encoding as the result , substitute the result for self .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=21, Reference length=27)
  1-gram: 52.4 
  2-gram: 15.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1623:  fileno = property ( lambda self : self . file . fileno )
Original:  define lambda function that returns self . file . fileno field , use it as an argument for property function , put the result in fileno . 
Translation: compare is a property object with getter and self . negated as an argument ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=15, Reference length=27)
  1-gram: 46.7 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1624:  flush = property ( lambda self : self . file . flush )
Original:  define lambda function that returns self . file . flush field , use it as an argument for property function , put the result in flush . 
Translation: choice is a property created with self . __class__ as a property , substitute the result for self . to_python .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=21, Reference length=27)
  1-gram: 47.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1625:  isatty = property ( lambda self : self . file . isatty )
Original:  define lambda function that returns self . file . isatty field , use it as an argument for property function , put the result in isatty . 
Translation: message is a property function with a message as a self . limit_value method and self . define method tag with the argument message .
BLEU = 0.00 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 40.0 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1626:  newlines = property ( lambda self : self . file . newlines )
Original:  define lambda function that returns self . file . newlines field , use it as an argument for property function , put the result in newlines . 
Translation: _UNK is a property function with property as a self . _UNK as argument ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=15, Reference length=27)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1627:  read = property ( lambda self : self . file . read )
Original:  define lambda function that returns self . file . read field , use it as an argument for property function , put the result in read . 
Translation: _UNK is a property object with self class auto_id , and self . limit_value as the result , substitute the result for self .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=24, Reference length=27)
  1-gram: 41.7 
  2-gram: 8.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1628:  readinto = property ( lambda self : self . file . readinto )
Original:  define lambda function that returns self . file . readinto field , use it as an argument for property function , put the result in readinto . 
Translation: _UNK is a property function with property as a self . _UNK as argument ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=15, Reference length=27)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1629:  readline = property ( lambda self : self . file . readline )
Original:  define lambda function that returns self . file . readline field , use it as an argument for property function , put the result in readline . 
Translation: instantiate a lambda function with property as a self . auto_id as argument , substitute the result for self . _body .
BLEU = 0.00 (Bravity Penalty=0.797, Length ratio=0.815, Translated length=22, Reference length=27)
  1-gram: 59.1 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1630:  readlines = property ( lambda self : self . file . readlines )
Original:  define lambda function that returns self . file . readlines field , use it as an argument for property function , put the result in readlines . 
Translation: _UNK is a property function with property as a self . _UNK as argument ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=15, Reference length=27)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1631:  seek = property ( lambda self : self . file . seek )
Original:  define lambda function that returns self . file . seek field , use it as an argument for property function , put the result in seek . 
Translation: instantiate is an property and this class object with self . connector as an argument .
BLEU = 0.00 (Bravity Penalty=0.503, Length ratio=0.593, Translated length=16, Reference length=27)
  1-gram: 43.8 
  2-gram: 20.0 
  3-gram:7.1 
  4-gram: 0.0 

Code line 1632:  softspace = property ( lambda self : self . file . softspace )
Original:  define lambda function that returns self . file . softspace field , use it as an argument for property function , put the result in softspace . 
Translation: _UNK is a property function with property as a self . _UNK as argument ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=15, Reference length=27)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1633:  tell = property ( lambda self : self . file . tell )
Original:  define lambda function that returns self . file . tell field , use it as an argument for property function , put the result in tell . 
Translation: instantiate choice is property and self class through this class with self . auto_id as an argument , substitute the result for value .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=24, Reference length=27)
  1-gram: 45.8 
  2-gram: 17.4 
  3-gram:4.5 
  4-gram: 0.0 

Code line 1634:  truncate = property ( lambda self : self . file . truncate )
Original:  define lambda function that returns self . file . truncate field , use it as an argument for property function , put the result in truncate . 
Translation: compare is a property with lambda class through the identity as arguments , self . auto_id is false ,
BLEU = 0.00 (Bravity Penalty=0.656, Length ratio=0.704, Translated length=19, Reference length=27)
  1-gram: 42.1 
  2-gram: 5.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1635:  write = property ( lambda self : self . file . write )
Original:  define lambda function that returns self . file . write field , use it as an argument for property function , put the result in write . 
Translation: _UNK is a property with a lambda function with self as argument ,
BLEU = 0.00 (Bravity Penalty=0.341, Length ratio=0.481, Translated length=13, Reference length=27)
  1-gram: 53.8 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1636:  writelines = property ( lambda self : self . file . writelines )
Original:  define lambda function that returns self . file . writelines field , use it as an argument for property function , put the result in writelines . 
Translation: _UNK is a property function with property as a self . _UNK as argument ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=15, Reference length=27)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1637:  xreadlines = property ( lambda self : self . file . xreadlines )
Original:  define lambda function that returns self . file . xreadlines field , use it as an argument for property function , put the result in xreadlines . 
Translation: compare is an property function with property this class and self . auto_id as an argument , substitute the result for value .
BLEU = 0.00 (Bravity Penalty=0.840, Length ratio=0.852, Translated length=23, Reference length=27)
  1-gram: 52.2 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 1638:   def __iter__ ( self ) :
Original:  define iterator method __iter__ with self as the argument . 
Translation: define the method __iter__ with an argument self .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1639:           return iter ( self . file )
Original:  return iterator object based on the self . file collection object . 
Translation: convert self . __class__ into an file , return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 50.0 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1640: from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1641:   import logging
Original:  import module logging . 
Translation: import module logging .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1642:  import sys
Original:  import module sys . 
Translation: import module sys .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1643:  import types
Original:  import module types . 
Translation: import module types .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1644:   from django import http
Original:  from django import http into default name space . 
Translation: from django import http into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1645:  from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1646:  from django . core import urlresolvers
Original:  from django . core import urlresolvers into default name space . 
Translation: from django . core import _UNK into default name space .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1647:  from django . core import signals
Original:  from django . core import signals into default name space . 
Translation: from django . core import signals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1648:  from django . core . exceptions import MiddlewareNotUsed , PermissionDenied , SuspiciousOperation
Original:  from django . core . exceptions import MiddlewareNotUsed , PermissionDenied and SuspiciousOperation into default name space . 
Translation: from django . core . exceptions import _UNK and _UNK into default name space .
BLEU = 57.82 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1649:  from django . db import connections , transaction
Original:  from django . db import connections and transaction into default name space . 
Translation: from django . db import connections and DEFAULT_DB_ALIAS into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1650:  from django . utils . encoding import force_text
Original:  from django . utils . encoding import force_text into default name space . 
Translation: from django . utils . encoding import force_text into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1651:  from django . utils . module_loading import import_string
Original:  from django . utils . module_loading import import_string into default name space . 
Translation: from django . utils . module_loading import import_string into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1652:  from django . utils import six
Original:  from django . utils import six into default name space . 
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1653:  from django . views import debug
Original:  from django . views import debug into default name space . 
Translation: from django . http import _ExpatParser into default name space .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1654:   logger = logging . getLogger ( 'django.request' )
Original:  call the function logging . getLogger with string ' django . request ' as the argument , assign the return object handle to logger . 
Translation: call the method logging . database with an argument string ' django . database ' , substitute the result for logger .
BLEU = 15.61 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=22, Reference length=25)
  1-gram: 68.2 
  2-gram: 28.6 
  3-gram:10.0 
  4-gram: 5.3 

Code line 1655:    class BaseHandler ( object ) :
Original:  derive class BaseHandler , derive from the base class object , making this a new style class . 
Translation: derive the class _UNK from object base class .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=9, Reference length=18)
  1-gram: 88.9 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1656:        response_fixes = [  http . fix_location_header ,  http . conditional_content_removal ,  ]
Original:  response_fixes is a list with http . fix_location_header and http . conditional_content_removal as elements . 
Translation: _UNK is a list with 0 elements , _UNK . _UNK and list , as arguments .
BLEU = 17.53 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 52.9 
  2-gram: 18.8 
  3-gram:13.3 
  4-gram: 7.1 

Code line 1657:   def __init__ ( self ) :
Original:  define initialization method __init__ , with self class instance as the argument . 
Translation: define the method __init__ with an argument self .
BLEU = 0.00 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13)
  1-gram: 88.9 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1658:           self . _request_middleware = self . _view_middleware = self . _template_response_middleware = self . _response_middleware = self . _exception_middleware = None
Original:  set class fields _request_middleware , _view_middleware , _template_response_middleware , _response_middleware and _exception_middleware to None . 
Translation: self . _UNK is None . _UNK None , substitute the result for self . _UNK . _UNK self . _UNK is a boolean False .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.733, Translated length=26, Reference length=15)
  1-gram: 11.5 
  2-gram: 4.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1659:    def load_middleware ( self ) :
Original:  define method load_middleware with class instance self as the argument . 
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 77.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1660:  self . _view_middleware = [ ]
Original:  self . _view_middleware is an empty list . 
Translation: self . _UNK is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1661:  self . _template_response_middleware = [ ]
Original:  self . _template_response_middleware is an empty list . 
Translation: self . _UNK is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1662:  self . _response_middleware = [ ]
Original:  _response_middleware is an empty list . 
Translation: self . _UNK is an empty list .
BLEU = 51.70 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=8, Reference length=6)
  1-gram: 62.5 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1663:  self . _exception_middleware = [ ]
Original:  exception_middleware is an empty list . 
Translation: self . _UNK is an empty list .
BLEU = 51.70 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=8, Reference length=6)
  1-gram: 62.5 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1664:   request_middleware = [ ]
Original:  request_middleware is an empty list . 
Translation: _UNK is an list .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1665:  for middleware_path in settings . MIDDLEWARE_CLASSES :
Original:  for every middleware_path in settings . MIDDLEWARE_CLASSES: 
Translation: for every _UNK in settings . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1666:               mw_class = import_string ( middleware_path )
Original:  evaluate the function import_string with middleware_path as argument , substitute the result for my_class . 
Translation: call the function import_string with an argument _UNK , substitute the result for _UNK .
BLEU = 43.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 73.3 
  2-gram: 50.0 
  3-gram:38.5 
  4-gram: 25.0 

Code line 1667:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1668:                   mw_instance = mw_class ( )
Original:  call the mw_class function , store the result in the mw_instance . 
Translation: _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=8, Reference length=12)
  1-gram: 12.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1669:   except MiddlewareNotUsed :
Original:  if MiddlewareNotUsed exception is raised , 
Translation: if _UNK exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1670:                   continue
Original:  skip this iteration of he smallest enclosing loop . 
Translation: skip this loop iteration ,
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9)
  1-gram: 80.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1671:    if hasattr ( mw_instance , 'process_request' ) :
Original:  if mw_instance has an attribute named ' process_request ' . 
Translation: if middleware has an attribute ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1672:                   request_middleware . append ( mw_instance . process_request )
Original:  append mw_instance . process_request at the end of request_middleware . 
Translation: append _UNK . _UNK _UNK .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=6, Reference length=10)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1673:   if hasattr ( mw_instance , 'process_view' ) :
Original:  if mw_instance has an attribute named ' process_view ' . 
Translation: if middleware has an attribute ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1674:                   self . _view_middleware . append ( mw_instance . process_view )
Original:  append mw_instance . process_view at the end of self . _view_middleware . 
Translation: append _UNK . _UNK . _UNK self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1675:   if hasattr ( mw_instance , 'process_template_response' ) :
Original:  if mw_instance has an attribute named ' process_template_response ' . 
Translation: if middleware has an attribute ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1676:                   self . _template_response_middleware . insert ( 0 , mw_instance . process_template_response )
Original:  insert mw_instance . process_template_response at the beginning of self . _template_response_middleware . 
Translation: insert the position at the _UNK of _UNK . _UNK self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 57.1 
  2-gram: 15.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1677:   if hasattr ( mw_instance , 'process_response' ) :
Original:  if mw_instance has an attribute named ' process_response ' . 
Translation: if middleware has an ' _UNK ' attribute ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 60.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1678:                   self . _response_middleware . insert ( 0 , mw_instance . process_response )
Original:  insert mw_instance . process_response at the beginning of self . _response_middleware . 
Translation: insert the _UNK at the self . _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1679:   if hasattr ( mw_instance , 'process_exception' ) :
Original:  if mw_instance has an attribute named ' process_exception ' . 
Translation: if _UNK has an ' _UNK ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1680:                   self . _exception_middleware . insert ( 0 , mw_instance . process_exception )
Original:  insert mw_instance . process_exception at the beginning of self . _exception_middleware . 
Translation: insert the _UNK of the _UNK _UNK of self . _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 50.0 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1681:       self . _request_middleware = request_middleware
Original:  substitute self . _request_middleware for request_middleware . 
Translation: substitute _UNK for self . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1682:    def make_view_atomic ( self , view ) :
Original:  define the method make_view_atomic , with self class instance and view as the arguments . 
Translation: define the method _UNK with 0 arguments : self and subcommand .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=12, Reference length=15)
  1-gram: 66.7 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1683:           non_atomic_requests = getattr ( view , '_non_atomic_requests' , set ( ) )
Original:  get attribute ' _non_atomic_requests ' from the view object , if the attribute doesnt exist return the empty set , substitute the result for non_atomic_requests . 
Translation: get ' _UNK ' attribute from the current object , substitute it for _UNK .
BLEU = 0.00 (Bravity Penalty=0.480, Length ratio=0.577, Translated length=15, Reference length=26)
  1-gram: 73.3 
  2-gram: 21.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1684:  for db in connections . all ( ) :
Original:  call the method connections . all ( ) , perform the following for every db in the result , 
Translation: for every basedir in sorted value of the method connections . _UNK ,
BLEU = 15.58 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19)
  1-gram: 61.5 
  2-gram: 33.3 
  3-gram:18.2 
  4-gram: 10.0 

Code line 1685:               if ( db . settings_dict [ 'ATOMIC_REQUESTS' ]  and db . alias not in non_atomic_requests ) :
Original:  if value under the key ' ATOMIC_REQUESTS of db . settings_dic dictionary is True and db . alias is not present in the non_atomic_requests , 
Translation: if value . _UNK is true and string ' _UNK ' is contained in sys . _UNK or string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 43.5 
  2-gram: 4.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1686:                   view = transaction . atomic ( using = db . alias ) ( view )
Original:  call the function transaction . atomic , with using set to db . alias as the argument , return value is a function which is called , 
Translation: call the function translation . atomic with an argument set . features and savepoint set to the object object .
BLEU = 0.00 (Bravity Penalty=0.705, Length ratio=0.741, Translated length=20, Reference length=27)
  1-gram: 55.0 
  2-gram: 21.1 
  3-gram:5.6 
  4-gram: 0.0 

Code line 1687:    return view
Original:  with the argument view , store the result in the view . return view 
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=0.026, Length ratio=0.214, Translated length=3, Reference length=14)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1688:    def get_exception_response ( self , request , resolver , status_code ) :
Original:  define method get_exception_response , with self class instance , request , resolver and status_code as the arguments . 
Translation: define the method _UNK with arguments self , instance , key , as arguments .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 80.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1689:           try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1690:               callback , param_dict = resolver . resolve_error_handler ( status_code )
Original:  call the function resolver . resolve_error_handler with status_code as an argument , assign the result to the callback and param_dict , respectively . 
Translation: call the method _UNK . _UNK with the argument max_value , assign the result to the iterable and _ , respectively .
BLEU = 30.41 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 68.2 
  2-gram: 38.1 
  3-gram:25.0 
  4-gram: 15.8 

Code line 1691:  response = callback ( request , ** param_dict )
Original:  call the callback function with request and dictionary argument param_dict as the arguments , substitute it for response . 
Translation: call the function get_connection with arguments request and a response and response as arguments ,
BLEU = 0.00 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 66.7 
  2-gram: 21.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1692:   except :
Original:  if an exception occurred , 
Translation: if exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1693:               signals . got_request_exception . send ( sender = self . __class__ , request = request )
Original:  call the method signals . got_request_exception . send with the sender set to the type of this class , and request set to request as the arguments . 
Translation: call the method signals . _UNK with _UNK : sender set to self . using set to self . GET .
BLEU = 19.12 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 61.9 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 1694:  response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
Original:  call the method self . handle_uncaught_exception with request , resolver and return value of the function sys . exec_info as the arguments . 
Translation: call the function self . _UNK with 0 arguments : request , _UNK , with the result as the argument ,
BLEU = 0.00 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 57.1 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1695:    return response
Original:  return response 
Translation: return response .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=3, Reference length=2)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1696:    def get_response ( self , request ) :
Original:  define the method get_response , with self class instance and request as the arguments . 
Translation: define the method _UNK with arguments self and default dictionary .
BLEU = 0.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 72.7 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1697:       urlconf = settings . ROOT_URLCONF
Original:  substitute settings . ROOT_URLCONF for urlconf . 
Translation: substitute settings . _UNK for urlconf .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1698:  urlresolvers . set_urlconf ( urlconf )
Original:  call the method urlresolvers . set_urlconf with urlconf as the argument . 
Translation: call the method _UNK . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1699:  resolver = urlresolvers . RegexURLResolver ( r'^/' , urlconf )
Original:  call the method urlresolvers . RegexURLResolver with raw literal string ' ^/ ' and urlconf as the arguments , substitute the result for resolver . 
Translation: call the method EmailMultiAlternatives . _UNK with 0 arguments : string ' natural ' and empty dictionary , substitute the result for msgs .
BLEU = 24.15 (Bravity Penalty=0.959, Length ratio=0.960, Translated length=24, Reference length=25)
  1-gram: 66.7 
  2-gram: 34.8 
  3-gram:18.2 
  4-gram: 9.5 

Code line 1700:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1701:               response = None
Original:  set response to None . 
Translation: response is None .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1702:   for middleware_method in self . _request_middleware :
Original:  for every middleware_method in self . _request_middleware , 
Translation: for every _UNK in self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1703:                   response = middleware_method ( request )
Original:  call the middleware_method with the request as an argument , substitute the result for response . 
Translation: call the _UNK function with request as the argument , substitute the result for response
BLEU = 46.96 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 86.7 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 33.3 

Code line 1704:  if response :
Original:  if response is True , 
Translation: if response is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1705:                       break
Original:  breaks from the smallest enclosing loop execution . 
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1706:     if response is None :
Original:  if response is None , 
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1707:                   if hasattr ( request , 'urlconf' ) :
Original:  if request has an attribute named ' urlconf ' , 
Translation: if request has an attribute ' process_response ' ,
BLEU = 47.50 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1708:                        urlconf = request . urlconf
Original:  substitute request . urlconf for urlconf . 
Translation: substitute record . urlconf for urlconf .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1709:  urlresolvers . set_urlconf ( urlconf )
Original:  call the function urlresolvers . set_urlconf with urlconf as the argument . 
Translation: call the method _UNK . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 54.5 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1710:  resolver = urlresolvers . RegexURLResolver ( r'^/' , urlconf )
Original:  call the method urlresolvers . RegexURLResolver with raw literal string ' ^/ ' and urlconf as the arguments , substitute the result for resolver . 
Translation: call the method EmailMultiAlternatives . _UNK with 0 arguments : string ' natural ' and empty dictionary , substitute the result for msgs .
BLEU = 24.15 (Bravity Penalty=0.959, Length ratio=0.960, Translated length=24, Reference length=25)
  1-gram: 66.7 
  2-gram: 34.8 
  3-gram:18.2 
  4-gram: 9.5 

Code line 1711:    resolver_match = resolver . resolve ( request . path_info )
Original:  call to the resolver . resolve method with request . path_info as an argument . 
Translation: call the method request . _UNK with arguments request , request , substitute the result for kwargs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=18, Reference length=15)
  1-gram: 38.9 
  2-gram: 5.9 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1712:  callback , callback_args , callback_kwargs = resolver_match
Original:  assign the values to the callback , callback_args , callback_kwargs , respectively , from the resolver_match tuple . 
Translation: substitute _UNK and _UNK and _UNK in _UNK .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=9, Reference length=18)
  1-gram: 11.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1713:  request . resolver_match = resolver_match
Original:  substitute resolver_match for request . resolver_match . 
Translation: substitute _UNK for request . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1714:    for middleware_method in self . _view_middleware :
Original:  for every middleware_method in self . _view_middleware , 
Translation: for every _UNK in self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1715:                       response = middleware_method ( request , callback , callback_args , callback_kwargs )
Original:  call the middleware_method with request , callback , callback_args and callback_kwargs as the arguments , substitute the result for response . 
Translation: _UNK is a instance of _UNK with arguments , _UNK , response , with arguments , key_prefix as arguments ,
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 35.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1716:  if response :
Original:  if response is True , 
Translation: if response is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1717:                           break
Original:  break from the smallest enclosing loop execution . 
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 100.0 
  2-gram: 80.0 
  3-gram:50.0 
  4-gram: 0.0 

Code line 1718:      if response is None :
Original:  if response is None , 
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1719:                   wrapped_callback = self . make_view_atomic ( callback )
Original:  call the method self . make_view_atomic with callback as the argument , substitute the result for the wrapped_callback . 
Translation: call the function self . _UNK with an argument _UNK , substitute the result for
BLEU = 25.40 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 73.3 
  2-gram: 42.9 
  3-gram:23.1 
  4-gram: 16.7 

Code line 1720:  try :
Original:  try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1721:                       response = wrapped_callback ( request , * callback_args , ** callback_kwargs )
Original:  call the function wrapped_callback with request , list or arguments callback_args and dictionary arguments callback_kwargs , 
Translation: call the function _UNK with 0 arguments : _UNK , _UNK and unpacked dictionary unpacked dictionary ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 52.9 
  2-gram: 12.5 
  3-gram:6.7 
  4-gram: 0.0 

Code line 1722:   except Exception as e :
Original:  as the arguments , substitute the result for response . if Exception , renamed to e , exception is caught , 
Translation: if Exception , renamed to e , exception is caught ,
BLEU = 40.29 (Bravity Penalty=0.403, Length ratio=0.524, Translated length=11, Reference length=21)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1723:                          for middleware_method in self . _exception_middleware :
Original:  for every middleware_method in self . _exception_middleware , 
Translation: for every _UNK in self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1724:                           response = middleware_method ( request , e )
Original:  call the middleware_method with request and e as the arguments , substitute the result for response . 
Translation: _UNK is _UNK with _UNK and _UNK as arguments , substitute the result for request
BLEU = 32.20 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 66.7 
  2-gram: 35.7 
  3-gram:30.8 
  4-gram: 25.0 

Code line 1725:  if response :
Original:  if response is True , 
Translation: if response is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1726:                               break
Original:  break from the smallest enclosing loop execution . 
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 100.0 
  2-gram: 80.0 
  3-gram:50.0 
  4-gram: 0.0 

Code line 1727:    if response is None :
Original:  if response is None , 
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1728:                           raise
Original:  raise the exception . 
Translation: raise an exception .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1729:       if response is None :
Original:  if response is None , 
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1730:                   if isinstance ( callback , types . FunctionType ) :
Original:  if callback is of instance types . FunctionType , 
Translation: if callback is an instance of subclass . _UNK class ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1731:                       view_name = callback . __name__
Original:  get the name of the callback , substitute it for view_name . 
Translation: substitute callback . __name__ for callback .
BLEU = 0.00 (Bravity Penalty=0.490, Length ratio=0.583, Translated length=7, Reference length=12)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1732:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1733:                       view_name = callback . __class__ . __name__ + '.__call__'
Original:  get the name of the type of the callback , append the string ' . __call__ ' to it , substitute it for view_name . 
Translation: concatenate callback . __name__ . ' and ' character ' into a file space .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=15, Reference length=25)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1734:   raise ValueError ( "The view %s.%s didn't return an HttpResponse object. It returned None instead."  % ( callback . __module__ , view_name ) )
Original:  substitute the ' %s ' in the string " The view %s . %s didn ' t return an HttpResponse object . It returned None instead . " , 
Translation: raise an ValueError with an argument string ' _UNK ' t t t t _UNK . ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.638, Length ratio=0.690, Translated length=20, Reference length=29)
  1-gram: 40.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1735:      if hasattr ( response , 'render' ) and callable ( response . render ) :
Original:  with the name of the module callback is in and the view_name , respectively , use it as the argument for the ValueError exception raise . if response has an attribute named ' render ' and response . render is a callable function , 
Translation: if response has an attribute ' render ' and ' response is callable object ,
BLEU = 6.54 (Bravity Penalty=0.145, Length ratio=0.341, Translated length=15, Reference length=44)
  1-gram: 86.7 
  2-gram: 50.0 
  3-gram:38.5 
  4-gram: 25.0 

Code line 1736:                   for middleware_method in self . _template_response_middleware :
Original:  for every middleware_method in self . _template_response_middleware , 
Translation: for every _UNK in self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1737:                       response = middleware_method ( request , response )
Original:  call the function middleware_method with the request and response as the arguments , assign the result to response . 
Translation: _UNK is _UNK with _UNK and response of response response response , substitute the result
BLEU = 0.00 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1738:   if response is None :
Original:  if response is None , 
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1739:                           raise ValueError (  "%s.process_template_response didn't return an "  "HttpResponse object. It returned None instead."  % ( middleware_method . __self__ . __class__ . __name__ ) )
Original:  replace ' %s ' in the string " %s . process_template_response didn ' t return an HttpResponse object . It returned None instead . " , 
Translation: raise an ValueError with an argument string " _UNK _UNK . _UNK _UNK _UNK . _UNK _UNK ' . " ,
BLEU = 0.00 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=21, Reference length=26)
  1-gram: 42.9 
  2-gram: 15.0 
  3-gram:5.3 
  4-gram: 0.0 

Code line 1740:    response = response . render ( )
Original:  with name of the class type of the middleware_method instance , use it as the argument for call to the ValueError exception raise . call the response . render ( ) method and assign the return to the response . 
Translation: call the function response . render with the argument response .
BLEU = 0.00 (Bravity Penalty=0.072, Length ratio=0.275, Translated length=11, Reference length=40)
  1-gram: 90.9 
  2-gram: 50.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1741:     except http . Http404 as e :
Original:  if exception http . Http404 as e is caught , 
Translation: if _UNK , renamed to e , exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 54.5 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1742:               logger . warning ( 'Not Found: %s' , request . path ,  extra = {  'status_code' : 404 ,  'request' : request  } )
Original:  substitute ' %s ' in ' Not Found: %s ' with request . path , extra is an dictionary with two pairs of elements ' status_code ' with value 404 , 
Translation: call the method logger . _UNK with 0 arguments : string ' _UNK ' , _UNK ' _UNK ' , raise set to string ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.898, Length ratio=0.903, Translated length=28, Reference length=31)
  1-gram: 35.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1743:  if settings . DEBUG :
Original:  and ' request with value request , respectively use the previous as the arguments for the call to the logger . warning function . if settings . DEBUG is True , 
Translation: if settings . DEBUG is true ,
BLEU = 2.09 (Bravity Penalty=0.032, Length ratio=0.226, Translated length=7, Reference length=31)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1744:                   response = debug . technical_404_response ( request , e )
Original:  call the function debug . technical_404_response with request and e as arguments , assign the result to response . 
Translation: call the method _UNK . _UNK with request request and request , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 55.6 
  2-gram: 23.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1745:   else :
Original:  if not , 
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1746:                   response = self . get_exception_response ( request , resolver , 404 )
Original:  call the method self . get_exception_response with request , resolver and integer 404 as the arguments , assign the result to response . 
Translation: call the method self . _UNK with arguments cls , _UNK and _UNK as arguments , substitute the result for value .
BLEU = 22.12 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 63.6 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 10.5 

Code line 1747:     except PermissionDenied :
Original:  if exception PermissionDenied is caught , 
Translation: if _UNK exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1748:               logger . warning (  'Forbidden (Permission denied): %s' , request . path ,  extra = {  'status_code' : 403 ,  'request' : request  } )
Original:  substitute ' %s ' in ' Forbidden ( Permission denied ) : %s ' with request . path , extra is an dictionary with two pairs of elements , 
Translation: call the method _UNK . _UNK with string ' _UNK ' , _UNK _UNK _UNK ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.591, Length ratio=0.655, Translated length=19, Reference length=29)
  1-gram: 42.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1749:  response = self . get_exception_response ( request , resolver , 403 )
Original:  ' status_code ' with value 403 , and ' request with value request , respectively use the previous as the arguments for the call to the logger . warning function . call the method self . get_exception_response with request , resolver and integer 403 as the arguments , assign the result to response . 
Translation: call the method self . _UNK with arguments cls , _UNK and _UNK as arguments , substitute the result for value .
BLEU = 5.67 (Bravity Penalty=0.234, Length ratio=0.407, Translated length=22, Reference length=54)
  1-gram: 77.3 
  2-gram: 28.6 
  3-gram:15.0 
  4-gram: 10.5 

Code line 1750:    except SuspiciousOperation as e :
Original:  if exception SuspiciousOperation as e is caught , 
Translation: if _UNK , renamed to e , exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=11, Reference length=8)
  1-gram: 54.5 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1751:                 security_logger = logging . getLogger ( 'django.security.%s' %  e . __class__ . __name__ )
Original:  substitute ' %s ' in ' django . security . %s ' with the name of the type of the class object e , use it as the argument for the call to the , 
Translation: call the method translation . sub with an argument string ' django . _UNK . _UNK ' , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=0.632, Length ratio=0.686, Translated length=24, Reference length=35)
  1-gram: 54.2 
  2-gram: 8.7 
  3-gram:4.5 
  4-gram: 0.0 

Code line 1752:  security_logger . error (  force_text ( e ) ,  extra = {  'status_code' : 400 ,  'request' : request  } )
Original:  function logging . getLogger , assign the result to the security_logger . evaluate the function force_text with e as an argument , extra is an dictionary with two pair of elements , 
Translation: call the function io . _UNK with 0 arguments : msg as an argument ,
BLEU = 6.77 (Bravity Penalty=0.322, Length ratio=0.469, Translated length=15, Reference length=32)
  1-gram: 53.3 
  2-gram: 28.6 
  3-gram:15.4 
  4-gram: 8.3 

Code line 1753:  if settings . DEBUG :
Original:  ' status code ' with integer value of 400 and ' request ' with value request , respectively use the previous to call the function security_logger . error . if settings . DEBUG is True , 
Translation: if settings . DEBUG is true ,
BLEU = 1.02 (Bravity Penalty=0.016, Length ratio=0.194, Translated length=7, Reference length=36)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1754:                   return debug . technical_500_response ( request , * sys . exc_info ( ) , status_code = 400 )
Original:  evaluate the function debug . technical_500_response with request , evaluated value of function sys . exc_info as a list , 
Translation: call the function _UNK . _UNK with 0 arguments : _UNK , _UNK set to unpacked list of the function pformat ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=22, Reference length=20)
  1-gram: 40.9 
  2-gram: 4.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1755:    response = self . get_exception_response ( request , resolver , 400 )
Original:  status code set to integer 400 , return the result . call the method self . get_exception_response with the request , resolver and integer 400 as the arguments , substitute the result for response . 
Translation: call the method self . _UNK with arguments cls , _UNK and _UNK as arguments , substitute the result for value .
BLEU = 22.80 (Bravity Penalty=0.554, Length ratio=0.629, Translated length=22, Reference length=35)
  1-gram: 72.7 
  2-gram: 42.9 
  3-gram:35.0 
  4-gram: 26.3 

Code line 1756:    except SystemExit :
Original:  if SystemExit exception is caught , 
Translation: if _UNK exception is caught ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1757:                raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1758:    except :
Original:  otherwise if any other exception is caught , 
Translation: if exception is caught ,
BLEU = 38.81 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1759:                signals . got_request_exception . send ( sender = self . __class__ , request = request )
Original:  call the method signals . got_request_exception . send with sender set to type of the self class instance and request set to request . 
Translation: call the method signals . _UNK with _UNK : sender set to self . using set to self . GET .
BLEU = 23.56 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 1760:  response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
Original:  call to the self . handle_uncaught_exception method with request , resolver and value of the evaluated function sys . exec_info , 
Translation: call the function self . _UNK with 0 arguments : request , _UNK , with the result as the argument ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 47.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1761:    try :
Original:  as the arguments , substitute the result for response . try , 
Translation: try ,
BLEU = 0.00 (Bravity Penalty=0.007, Length ratio=0.167, Translated length=2, Reference length=12)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1762:                for middleware_method in self . _response_middleware :
Original:  for every middleware_method in self . _response_middleware , 
Translation: for every _UNK in self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1763:                   response = middleware_method ( request , response )
Original:  call the function middleware_method with request and response as the arguments , substitute the result for response . 
Translation: _UNK is _UNK with _UNK and response of response response response , substitute the result
BLEU = 17.21 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 53.3 
  2-gram: 28.6 
  3-gram:15.4 
  4-gram: 8.3 

Code line 1764:   if response is None :
Original:  if response is None , 
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1765:                       raise ValueError (  "%s.process_response didn't return an "  "HttpResponse object. It returned None instead."  % ( middleware_method . __self__ . __class__ . __name__ ) )
Original:  substitute ' %s ' is " %s . process_response didn ' t return an HttpResponse object . It returned None instead . " , 
Translation: raise an ValueError with an argument string " _UNK _UNK . _UNK _UNK ' . ' or _UNK have a exception . ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1766:    response = self . apply_response_fixes ( request , response )
Original:  with the name of the type of the self class instance of the middleware_method , raise the ValueError with the previous as the argument . call the method self . apply_response_fixes with the request and response as the arguments , substitute the result for response . 
Translation: call the function self . _UNK with arguments and response and response as the arguments , substitute the result for response .
BLEU = 19.49 (Bravity Penalty=0.336, Length ratio=0.478, Translated length=22, Reference length=46)
  1-gram: 77.3 
  2-gram: 61.9 
  3-gram:50.0 
  4-gram: 47.4 

Code line 1767:   except :
Original:  if any exception is caught , 
Translation: if exception is caught ,
BLEU = 57.89 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1768:               signals . got_request_exception . send ( sender = self . __class__ , request = request )
Original:  call the signals . got_request_exception . send method with sender set to type of the self class instance and request set to request . 
Translation: call the method signals . _UNK with _UNK : sender set to self . using set to self . GET .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:5.3 
  4-gram: 0.0 

Code line 1769:  response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
Original:  call to the self . handle_uncaught_exception method with request , resolver and value of the evaluated function sys . exec_info , 
Translation: call the function self . _UNK with 0 arguments : request , _UNK , with the result as the argument ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 47.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1770:    response . _closable_objects . append ( request )
Original:  as the arguments , substitute the result for response . append the request to the end of the protected class member response . _closable_objects . 
Translation: append response . response to response .
BLEU = 0.00 (Bravity Penalty=0.076, Length ratio=0.280, Translated length=7, Reference length=25)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1771:   return response
Original:  return response . 
Translation: return response .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1772:    def handle_uncaught_exception ( self , request , resolver , exc_info ) :
Original:  define the method handle_uncaught_exception with self class instance , request , resolver and exec_info as arguments . 
Translation: define the method _UNK with arguments self , _UNK , key , takes_context and mimetype .
BLEU = 0.00 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 62.5 
  2-gram: 13.3 
  3-gram:7.1 
  4-gram: 0.0 

Code line 1773:  if settings . DEBUG_PROPAGATE_EXCEPTIONS :
Original:  if settings . DEBUG_PROPAGATE_EXCEPTIONS is True , 
Translation: if settings . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1774:               raise
Original:  raise an exception . 
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1775:    logger . error ( 'Internal Server Error: %s' , request . path ,  exc_info = exc_info ,  extra = {  'status_code' : 500 ,  'request' : request  }  )
Original:  substitute ' %s ' in ' Internal Server Error: %s ' with request . path , exc_info set to exc_info , 
Translation: call the method json . _UNK with 0 arguments : string ' _UNK ' , _UNK ' _UNK ' ,
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1776:   if settings . DEBUG :
Original:  extra is an dictionary with two pairs of elements ' status_code ' with value 500 , and ' request with value request , respectively use the previous as the arguments for the call to the logger . error function . if settings . DEBUG is True , 
Translation: if settings . DEBUG is true ,
BLEU = 0.21 (Bravity Penalty=0.003, Length ratio=0.149, Translated length=7, Reference length=47)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1777:               return debug . technical_500_response ( request , * exc_info )
Original:  evaluate debug . technical_500_response with request and list of arguments exec_info , return the result . 
Translation: call the function _UNK . _UNK with 0 arguments : _UNK and unpacked dictionary kwargs , return the result .
BLEU = 20.76 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=20, Reference length=16)
  1-gram: 45.0 
  2-gram: 21.1 
  3-gram:16.7 
  4-gram: 11.8 

Code line 1778:     if resolver . urlconf_module is None :
Original:  if resolver . urlconf_module is None: 
Translation: if opts . propagate is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1779:               six . reraise ( * exc_info )
Original:  call the function reraise from the module six , with list of arguments exec_info . 
Translation: call the function six . reraise with unpacked list _UNK as argument .
BLEU = 0.00 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 61.5 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 1780:    callback , param_dict = resolver . resolve_error_handler ( 500 )
Original:  call the resolver . resolve_error_handler with integer 500 as the argument , assign the resulting tuple elements to the callback , 
Translation: call the method _UNK . _UNK with an argument _UNK , assign the result to _UNK and params .
BLEU = 0.00 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 47.4 
  2-gram: 16.7 
  3-gram:5.9 
  4-gram: 0.0 

Code line 1781:  return callback ( request , ** param_dict )
Original:  and param_dict , respectively . evaluate the function callback with request and dictionary of parameters param_dict as the arguments , return the result . 
Translation: return a instance with 0 arguments : _UNK and a list Context .
BLEU = 0.00 (Bravity Penalty=0.429, Length ratio=0.542, Translated length=13, Reference length=24)
  1-gram: 38.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1782:    def apply_response_fixes ( self , request , response ) :
Original:  define the method apply_response_fixes with self class instance , request and response as the arguments . 
Translation: define the method _UNK with self class instance , and connection as the arguments .
BLEU = 47.11 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 86.7 
  2-gram: 64.3 
  3-gram:46.2 
  4-gram: 25.0 

Code line 1783:  for func in self . response_fixes :
Original:  for every func in self . response_fixes , 
Translation: for every f in self . _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1784:               response = func ( request , response )
Original:  call the function func with request and response as arguments , assign the result to response . 
Translation: call the function middleware with 0 arguments and response and response .
BLEU = 0.00 (Bravity Penalty=0.659, Length ratio=0.706, Translated length=12, Reference length=17)
  1-gram: 75.0 
  2-gram: 36.4 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1785:   return response
Original:  return response . 
Translation: return response .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1786: from __future__ import unicode_literals
Original:  from __future__ import unicode_literals into default name space . 
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1787:   import cgi
Original:  import module cgi . 
Translation: import module cgi .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1788:  import codecs
Original:  import module codecs . 
Translation: import module codecs .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1789:  import logging
Original:  import module logging . 
Translation: import module logging .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1790:  import sys
Original:  import module sys . 
Translation: import module sys .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1791:  from io import BytesIO
Original:  from io import BytesIO into default name space . 
Translation: from io import BytesIO into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1792:  from threading import Lock
Original:  from threading import Lock into default name space . 
Translation: from threading import _UNK into default name space .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1793:  import warnings
Original:  import module warnings . 
Translation: import module warnings .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1794:   from django import http
Original:  from django import http into default name space . 
Translation: from django import http into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1795:  from django . conf import settings
Original:  from django . conf import settings into default name space . 
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1796:  from django . core import signals
Original:  from django . core import signals into default name space . 
Translation: from django . core import signals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1797:  from django . core . handlers import base
Original:  from django . core . handlers import base into default name space . 
Translation: from django . core . base import default into default name space .
BLEU = 60.53 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1798:  from django . core . urlresolvers import set_script_prefix
Original:  from django . core . urlresolvers import set_script_prefix into default name space . 
Translation: from django . core . validators import _UNK into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1799:  from django . utils import datastructures
Original:  from django . utils import datastructures into default name space . 
Translation: from django . utils import module_has_submodule into default name space .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1800:  from django . utils . deprecation import RemovedInDjango19Warning
Original:  from django . utils . deprecation import RemovedInDjango19Warning into default name space . 
Translation: from django . utils . deprecation import RemovedInDjango00Warning into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1801:  from django . utils . encoding import force_str , force_text
Original:  from django . utils . encoding import force_str and force_text into default name space . 
Translation: from django . utils . encoding import force_text and force_text into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1802:  from django . utils . functional import cached_property
Original:  from django . utils . functional import cached_property into default name space . 
Translation: from django . utils . functional import cached_property into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1803:  from django . utils import six
Original:  from django . utils import six into default name space . 
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1804:    from django . http . response import REASON_PHRASES as STATUS_CODE_TEXT
Original:  from django . http . response import REASON_PHRASES as STATUS_CODE_TEXT # NOQA into default name space . 
Translation: from django . http . http import _UNK as the Signal into default name space .
BLEU = 45.02 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 75.0 
  2-gram: 53.3 
  3-gram:42.9 
  4-gram: 30.8 

Code line 1805:   logger = logging . getLogger ( 'django.request' )Original:  call logging . getLogger method with string ' django . request ' as argument , store the result in logger . 
Translation: call the method logging . database with an argument string ' django . database ' , substitute the result for logger .
BLEU = 18.19 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21)
  1-gram: 72.7 
  2-gram: 28.6 
  3-gram:10.0 
  4-gram: 5.3 

