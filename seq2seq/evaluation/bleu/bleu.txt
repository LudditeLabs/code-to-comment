Code line 1:  attrs = { 'id' : id_ } if id_ else { }
Original: if if_is true attrs is an dictionary with initial entry: id_ for ' id ' , if not , attrs is an empty dictionary .
Translation: attrs dictionary dictionary attrs dictionary with attrs entry for ' attrs ' , substitute an empty string for ' .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=20, Reference length=25)
  1-gram: 60.0 
  2-gram: 21.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 2:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 3:  BASE56_ALPHABET = '23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz'
Original: BASE56_ALPHABET is a string ' 23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz ' .
Translation: BASE00_ALPHABET is a string ' _UNK ' .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 4:       if self . ignore and field_name not in model_fields :
Original: if self . ignore is true and field_name is not contained in model_fields ,
Translation: if if true is true and self . field_name is not contained in current_app ,
BLEU = 37.84 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:30.8 
  4-gram: 16.7 

Code line 5:           return self . value == self . choice_value
Original: if self . value equals self . choice_value , return boolean True , if not , return boolean False .
Translation: return self . value . value .
BLEU = 0.00 (Bravity Penalty=0.156, Length ratio=0.350, Translated length=7, Reference length=20)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 6:  import types
Original: import module types .
Translation: import module types .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 7:               return self [ key ]
Original: return value under key key of self dictionary
Translation: return value under the key key of self .
BLEU = 43.17 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 8:  use_reloader = options . get ( 'use_reloader' )
Original: substitute value under the ' use_reloader ' key of the options dictionary for use_reloader .
Translation: get the value under the ' addrport ' key of the options dictionary , substitute it for table_name_filter .
BLEU = 40.47 (Bravity Penalty=1.000, Length ratio=1.267, Translated length=19, Reference length=15)
  1-gram: 68.4 
  2-gram: 44.4 
  3-gram:35.3 
  4-gram: 25.0 

Code line 9:                     import rlcompleter
Original: import rlcompleter .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 10:  with self . _lock . writer ( ) :
Original: call the self . _lock . writer method , with the result perform the following ,
Translation: call the self . _lock . writer method , with the result perform the following
BLEU = 93.55 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 11:    cull_frequency = params . get ( 'cull_frequency' , options . get ( 'CULL_FREQUENCY' , 3 ) )
Original: call the options . get method with string ' CULL_FREQUENCY ' and integer 3 as arguments , use the string ' cull_frequency ' and previous result as the arguments for the call to the params . get method , substitute the result for cull_frequency .
Translation: call the method _UNK . _UNK with string ' _UNK ' _UNK ' and integer dictionary as arguments , use the result as an argument , substitute the result for value .
BLEU = 22.26 (Bravity Penalty=0.666, Length ratio=0.711, Translated length=32, Reference length=45)
  1-gram: 75.0 
  2-gram: 45.2 
  3-gram:26.7 
  4-gram: 13.8 

Code line 12:     self . path = '%s/%s' % ( script_name . rstrip ( '/' ) ,  path_info . replace ( '/' , '' , 1 ) )
Original: strip trailing ' / ' from the script_name string , remove first occurrence of ' / ' in path_info string , append second result to the first , separated with ' / ' , assign the result to self . path .
Translation: replace ' path ' in string ' \n ' , replace every them ' in it with path with get ' , replace ' is replaced with command , substitute the result for the result .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=36, Reference length=42)
  1-gram: 50.0 
  2-gram: 8.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 13:  if not bits :
Original: if bits is false ,
Translation: if bits is false ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 14:                               continue
Original: skip this loop iteration ,
Translation: skip this loop iteration .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 15:  for key in self :
Original: for every key in self ,
Translation: for every key in self ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 16:                value = self . literal
Original: substitute self . literal for value .
Translation: substitute self . var for value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 17:   for i , ext in enumerate ( ext_list ) :
Original: for every i and ext in enumerated iterable ext_list ,
Translation: for every i and enumerated enumerated iterable ,
BLEU = 33.28 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 18:  import sys
Original: import module sys .
Translation: import module sys .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 19:  _active = local ( )
Original: call the function local , substitute the result for _active .
Translation: call the function local , substitute the result for _active .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 20:                                   sql . extend ( connection . creation . sql_for_pending_references ( refto , no_style ( ) , pending_references ) )
Original: call the connection . creation . sql_for_pending_references method with refto , no_style ( ) and pending_references as arguments , use the result as the argument for the call to the sql . extend method .
Translation: call the method connection . creation . extend with 0 arguments : return list of the function path , and called with 0 arguments :
BLEU = 9.64 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=25, Reference length=35)
  1-gram: 52.0 
  2-gram: 20.8 
  3-gram:8.7 
  4-gram: 4.5 

Code line 21:    @ property
Original: property getter decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 22:  for i , row in enumerate ( connection . introspection . get_table_description ( cursor , table_name ) ) :
Original: for every i and row in enumerated result of the method connection . introspection . get_table_description called with arguments: cursor and table_name ,
Translation: for every field , return result of the function _UNK with return value of the method os . _UNK , with an argument path ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 36.0 
  2-gram: 16.7 
  3-gram:8.7 
  4-gram: 0.0 

Code line 23:   key , value = bits [ 2 ] , bits [ 0 ]
Original: substitute third and first element of bits for key and value , respectively .
Translation: substitute second and key and second element of value for opts .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 75.0 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 24:  self . connection . ehlo ( )
Original: call the method self . connection . ehlo .
Translation: call the method self . connection . _UNK .
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 25:  if self . save_as_new :
Original: if self . save_as_new is true ,
Translation: if self . save_as_new is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 26:  if not etags :
Original: if etags is false ,
Translation: if formatter is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 27:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 28:    def __repr__ ( self ) :
Original: define the method __repr__ with an argument self .
Translation: define the method __repr__ with argument self .
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 40.0 

Code line 29:               doublecolon_len += 1
Original: increment doublecolon_len by integer 1 ,
Translation: increment factor by 0 .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 30:                   msgs = msgs . decode ( 'utf-8' )
Original: call the method msgs . decode with an argument string ' utf-8 ' , substitute the result for msgs .
Translation: call the method msgs . decode with an argument string ' utf-0 ' , substitute the result for msgs .
BLEU = 85.79 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 95.0 
  2-gram: 89.5 
  3-gram:83.3 
  4-gram: 76.5 

Code line 31:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 32:  return parser . parse ( )
Original: call the method parser . parse , return the result .
Translation: call the method parser . parse , return the result .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 33:                    pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 34:     def gettext_noop ( message ) :
Original: define the function locale with an argument locale .
Translation: define the function gettext_noop with an argument message .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 35:    @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 36:                   EventHandler . modified_code = I18N_MODIFIED
Original: EventHandler . modified_code is I18N_MODIFIED .
Translation: substitute gettext for logger . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 28.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 37:   output_transaction = True
Original: output_transaction is boolean True .
Translation: output_transaction is boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 38:  locales = [ locale ]
Original: locales is a list with an element locale .
Translation: format_locations is a list containing an empty string .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 55.6 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 39:           lbp = bp
Original: substitute bp for lbp .
Translation: substitute bp for lbp .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 40:               if register_to :
Original: if register_to is true ,
Translation: if html_message is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 41:                   write ( sep )
Original: call the function write with an argument sep .
Translation: write integer to 0 .
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 42:               priority = 1.0
Original: priority is floating point number 1 . 0 .
Translation: move is a 0 0 .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=6, Reference length=9)
  1-gram: 50.0 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 43:  for i in range ( len ( result ) ) :
Original: for every i in range of integers from 0 to length of result , not included ,
Translation: for every i in result of method l , called with 0 arguments : i and i in result ,
BLEU = 15.77 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17)
  1-gram: 45.0 
  2-gram: 21.1 
  3-gram:11.1 
  4-gram: 5.9 

Code line 44:                       self . _deleted_form_indexes . append ( i )
Original: call the method self . _deleted_form_indexes . append with an argument i .
Translation: append i to self .
BLEU = 0.00 (Bravity Penalty=0.202, Length ratio=0.385, Translated length=5, Reference length=13)
  1-gram: 80.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 45:  self . FILES = MultiValueDict ( )
Original: self . FILES is an instance of MultiValueDict class .
Translation: self . _UNK is an instance of MultiValueDict class .
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 57.1 

Code line 46:                  MIMEText . __init__ ( self , text , subtype , None )
Original: call the method MIMEText . __init__ with 4 arguments: self , text , subtype and None .
Translation: call the method __init__ . __init__ with 0 arguments : self , text , subtype and subtype .
BLEU = 41.15 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 72.2 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 20.0 

Code line 47:  for entry in os . listdir ( path ) :
Original: for every entry in os . listdir function return value called with the argument path ,
Translation: for the path . path in a directory , for every path in the result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 43.8 
  2-gram: 6.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 48:  import sys
Original: import module sys .
Translation: import module sys .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 49:   return output
Original: return output .
Translation: return output .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 50:    self . tokens = mapped_tokens
Original: substitute mapped_tokens for self . tokens .
Translation: substitute tokens for self . tokens .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 51:  from django . utils . _os import safe_join
Original: from django . utils . _os import safe_join into default name space .
Translation: from django . utils . models import upath into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 52:                   return True
Original: return boolean True .
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 53:                    self . handle_startendtag ( tag , attrs )
Original: call the method self . handle_startendtag with tag and attrs as the arguments .
Translation: call the method self . tag , with attrs and attrs as the arguments .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 86.7 
  2-gram: 64.3 
  3-gram:53.8 
  4-gram: 41.7 

Code line 54:    def resolve_context ( self , context ) :
Original: define the method resolve_context with 2 arguments: self and context .
Translation: define the method resolve_context with 0 arguments : self and context .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 55:    def add_arguments ( self , parser ) :
Original: define the method add_arguments with an argument self and parser .
Translation: define the method add_arguments with 0 arguments self and parser .
BLEU = 58.77 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 37.5 

Code line 56:           try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 57:   if isinstance ( path , six . string_types ) :
Original: if path is an instance of six . string_types ,
Translation: if path is an instance of six . string_types class .
BLEU = 78.61 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 58:           handler . endElement ( "channel" )
Original: call the method handler . endElement with an argument string ' channel ' .
Translation: call the method handler . endElement with an argument string ' _UNK ' .
BLEU = 80.91 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 92.9 
  2-gram: 84.6 
  3-gram:75.0 
  4-gram: 72.7 

Code line 59:      def configure_logger ( self , name , config , incremental = False ) :
Original: define the method configure_logger with 4 arguments: self , name , config , incremental set to boolean False .
Translation: define the method self with 0 arguments : self , name , config and version set to boolean False .
BLEU = 42.85 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 70.0 
  2-gram: 52.6 
  3-gram:38.9 
  4-gram: 23.5 

Code line 60:   if val is None :
Original: if val is None ,
Translation: if val is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 61:  if bits [ 2 ] != 'by' :
Original: if third element of bits is not equal to a string ' by ' ,
Translation: if first element of bits is not equal to string ' ,
BLEU = 48.32 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=12, Reference length=15)
  1-gram: 91.7 
  2-gram: 72.7 
  3-gram:50.0 
  4-gram: 44.4 

Code line 62:                   setattr ( result , name , value )
Original: set result attribute name to value value .
Translation: set name to the result and value to result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8)
  1-gram: 60.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 63:               value = int ( str ( value ) )
Original: convert value into an string , convert the result into an integer and substitute it for value .
Translation: convert value into an integer and substitute it for value .
BLEU = 51.18 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=11, Reference length=18)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 87.5 

Code line 64:  if nodelist_empty is None :
Original: if nodelist_empty is None ,
Translation: if is not None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 65:           with self . mutex :
Original: with self . mutex perform ,
Translation: with self . mutex perform ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 66:    class Command ( BaseCommand ) :
Original: derive the class Command from the BaseCommand base class .
Translation: derive the class Command from the BaseCommand class .
BLEU = 71.89 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 100.0 
  2-gram: 87.5 
  3-gram:71.4 
  4-gram: 66.7 

Code line 67:               result [ i ] += piece
Original: increment i-th element of result by piece .
Translation: increment i-th element of result by piece .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 68:  file_pos = file . tell ( )
Original: get the position in bytes from the start of the file , store it in file_pos .
Translation: get the absolute file of the file _UNK .
BLEU = 0.00 (Bravity Penalty=0.411, Length ratio=0.529, Translated length=9, Reference length=17)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 69:                   unique = "UNIQUE " if f . unique else ""
Original: if f . unique is true , substitute " UNIQUE " for unique , otherwise unique is an empty string .
Translation: if is a string " _UNK . _UNK " is contained in settings .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=14, Reference length=21)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 70:               return value + arg
Original: sum value and arg , return the result .
Translation: return value .
BLEU = 0.00 (Bravity Penalty=0.135, Length ratio=0.333, Translated length=3, Reference length=9)
  1-gram: 100.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 71:               if self . queryset is not None :
Original: if self . queryset is not None ,
Translation: if self . widgets is not None ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 72:   return errors
Original: return errors .
Translation: return errors .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 73:                           pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 74:   if ( self . validate_min and  self . total_form_count ( ) - len ( self . deleted_forms ) < self . min_num ) :
Original: if self . validate_min is true , and length of self . deleted_forms subtracted from the return value of the method self . total_form_count , is smaller than self . min_num ,
Translation: if changes is smaller and equal to equal to self . buffer and self . using is not equal to length of self . remaining ,
BLEU = 11.68 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=26, Reference length=32)
  1-gram: 53.8 
  2-gram: 24.0 
  3-gram:8.3 
  4-gram: 4.3 

Code line 75:            return ip_str
Original: return ip_str .
Translation: return ip_str .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 76:     def extract ( path , to_path = '' ) :
Original: define the function extract with 2 arguments path and to_path set to empty string .
Translation: define the function path with 0 arguments : path and path set to a string .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 68.8 
  2-gram: 33.3 
  3-gram:7.1 
  4-gram: 0.0 

Code line 77:                   model_list . append ( model )
Original: append model to model_list .
Translation: append model to app_list_value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 78:               continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 79:  unifunc . replace ( strfunc )
Original: call the method unifunc . replace with an argument strfunc .
Translation: call the method httpd . _UNK with an argument _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 72.7 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 80:  pending_references = { }
Original: pending_references is a empty dictionary .
Translation: pending_references is an empty dictionary .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 81:    def render ( self , context ) :
Original: define the method render with 2 arguments: self and context .
Translation: define the method render with 0 arguments : self and context .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 82:  from django . utils . translation import trans_real
Original: from django . utils . translation import trans_real into default namespace .
Translation: from django . utils . translation import ugettext_lazy into default name space .
BLEU = 53.44 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 76.9 
  2-gram: 58.3 
  3-gram:45.5 
  4-gram: 40.0 

Code line 83:     def parse ( self ) :
Original: define the method parse with an argument self .
Translation: define the method parse with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 84:               return self . g ( )
Original: call the method self . g , return the result .
Translation: call the method self . getvalue , return the result .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 85:               self . DSTOFFSET = self . STDOFFSET
Original: substitute self . STDOFFSET for self . DSTOFFSET .
Translation: substitute self . __class__ for self . _queryset .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 86:                   break
Original: break from the endless loop .
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 87:      def build_instance ( Model , data , db ) :
Original: define the function build_instance with 3 arguments: Model , data and db .
Translation: define the function _has_changed with arguments : data , data and db .
BLEU = 39.83 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 69.2 
  2-gram: 50.0 
  3-gram:36.4 
  4-gram: 20.0 

Code line 88:                       retval = newretval
Original: substitute newretval for retval .
Translation: substitute locale_dir for retval .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 89:  parser . add_library ( lib )
Original: call the method parser . add_library with an argument lib .
Translation: call the method parser . add_library with an argument message .
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 90:  def is_hidden ( self ) :
Original: define the method is_hidden with an argument self .
Translation: define the method is_hidden with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 91:     i = next_space_index ( subject , i )
Original: call the function next_space_index with 2 arguments: subject and i , substitute the result for i .
Translation: substitute i is an tuple of subject for i-th class , substitute subject for i
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 40.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 92:  from django . db . migrations . writer import MigrationWriter
Original: from django . db . migrations . writer import MigrationWriter into default name space .
Translation: from django . db . migrations . fastcgi import MigrationLoader into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 93:  parser . delete_first_token ( )
Original: call the method parser . delete_first_token .
Translation: call the method parser . delete_first_token .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 94:   except ( ValueError , TypeError ) :
Original: if ValueError or TypeError exceptions occurred ,
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:16.7 
  4-gram: 0.0 

Code line 95:               primary_keys = pks . split ( ',' )
Original: split string pks by ' , ' , substitute the result for primary_keys .
Translation: split is one by ' ' character , substitute the result for bits .
BLEU = 33.43 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 18.2 

Code line 96:           from django . conf import settings
Original: from django . conf import settings into default namespace .
Translation: from django . conf import settings into default name space .
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:66.7 
  4-gram: 62.5 

Code line 97:       return base64 . urlsafe_b64encode ( s ) . strip ( b'=' )
Original: call the method base64 . urlsafe_b64encode with an argument s , on the result call the strip function with ' = ' as the argument , return the result .
Translation: call the method base00 . strip with s , strip the result of the bytes string , return the result .
BLEU = 18.93 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=21, Reference length=30)
  1-gram: 76.2 
  2-gram: 40.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 98:    return result
Original: return result .
Translation: return result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 99:           self . changed_objects = [ ]
Original: self . changed_objects is an empty list .
Translation: self . _UNK is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 100:               cleaned_data = self . clean ( )
Original: call the method self . clean , substitute the result for cleaned_data .
Translation: call the method self . output_transaction , substitute the result for field_value .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 101:  from django . core import checks
Original: from django . core import checks into default name space .
Translation: from django . core import urlresolvers into default name space .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 102:     def assertRaisesRegex ( self , * args , ** kwargs ) :
Original: define the function assertRaisesRegex with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
Translation: define the method _UNK with self class instance , unpacked list args and dictionary kwargs as arguments .
BLEU = 27.69 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 66.7 
  2-gram: 35.3 
  3-gram:18.8 
  4-gram: 13.3 

Code line 103:               logger . setLevel ( _checkLevel ( level ) )
Original: call the function _checkLevel with an argument level , use the result as an argument for the call to the method logger . setLevel .
Translation: call the function _checkLevel with an argument level , extend the result .
BLEU = 28.49 (Bravity Penalty=0.397, Length ratio=0.520, Translated length=13, Reference length=25)
  1-gram: 92.3 
  2-gram: 75.0 
  3-gram:63.6 
  4-gram: 60.0 

Code line 104:  super ( Context , self ) . __init__ ( dict_ )
Original: call the the method __init__ from the base class of the class Context .
Translation: call the method __init__ from the base class of the class IntegerField , with an argument field .
BLEU = 55.00 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=18, Reference length=14)
  1-gram: 66.7 
  2-gram: 58.8 
  3-gram:50.0 
  4-gram: 46.7 

Code line 105:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 106:  from django . utils . html import escape
Original: from django . utils . html import escape into default name space .
Translation: from django . utils . html import escape into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 107:  for migration_name in migration_names :
Original: for every migration_name in migration_names ,
Translation: for every sql in migrations_to_squash ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 108:               return None
Original: return None .
Translation: return None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 109:   delattr ( obj . __class__ , self . name )
Original: delete self . name attribute from the obj . __class__ object .
Translation: yield obj of the obj . __class__ . __class__ and base class .
BLEU = 21.40 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 46.2 
  2-gram: 25.0 
  3-gram:18.2 
  4-gram: 10.0 

Code line 110:                           return middleware . process_response ( request , response )
Original: call the method middleware . process_response with 2 arguments: request and response , return the result .
Translation: call the method request . request with 0 arguments : request and context .
BLEU = 0.00 (Bravity Penalty=0.807, Length ratio=0.824, Translated length=14, Reference length=17)
  1-gram: 57.1 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 111:               if show_traceback :
Original: if show_traceback is true ,
Translation: if plan is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 112:  import os
Original: import module os .
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 113:               self . _changed_data = [ ]
Original: self . _changed_data is an empty list .
Translation: self . _changed_data is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 114:                   if "'format'" not in str ( te ) :
Original: if string " ' format ' " is not contained in e converted into a string ,
Translation: if " " " " " is contained in new_name is contained in values ,
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 46.7 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 115:  timezone = ( offset . days * 24 * 60 ) + ( offset . seconds // 60 )
Original: multiply offset . days , integer 24 and integer 60 , sum the result with floored result of dividing offset . seconds by integer 60 , substitute the result for timezone .
Translation: divide offset . seconds 00 and integer 0 . 00 00 and result . seconds 00 .
BLEU = 0.00 (Bravity Penalty=0.414, Length ratio=0.531, Translated length=17, Reference length=32)
  1-gram: 47.1 
  2-gram: 18.8 
  3-gram:6.7 
  4-gram: 0.0 

Code line 116:   if self . _wrapped is empty :
Original: if self . _wrapped is empty ,
Translation: if self . _wrapped is contained in empty ,
BLEU = 51.33 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 77.8 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 117:   self . __language = language
Original: substitute language for self . __language .
Translation: substitute language for self . language .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 118:    class Node ( object ) :
Original: derive the class Node from object base class .
Translation: derive the class Node form the base class object .
BLEU = 33.57 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 14.3 

Code line 119:  if lib :
Original: if lib is true ,
Translation: if lib is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 120:             form . save_m2m = save_m2m
Original: substitute save_m2m for form . save_m2m .
Translation: substitute form . _callback for form .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 121:      @ python_2_unicode_compatible
Original: python_2_unicode_compatible decorator ,
Translation: python_0_unicode_compatible decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 122:           return ''
Original: return an empty string .
Translation: return an empty string ,
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 123:     else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 124:   return self . parent_widget . render ( * args )
Original: call the method self . parent_widget . render with unpacked list args as an argument , return the result .
Translation: call the method self . args . args with unpacked list args , return the result .
BLEU = 48.87 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 88.2 
  2-gram: 68.8 
  3-gram:53.3 
  4-gram: 35.7 

Code line 125:  return localtime ( value ) if should_convert else value
Original: if should_convert is true , call the function localtime with an argument value and return the result , otherwise return value .
Translation: if value if if return value , if value is not equal value , return
BLEU = 0.00 (Bravity Penalty=0.627, Length ratio=0.682, Translated length=15, Reference length=22)
  1-gram: 53.3 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 126:               parse_until = [ ]
Original: parse_until is an empty list ,
Translation: statement is an empty list .
BLEU = 50.81 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 127:  if not check_for_language ( lang ) :
Original: call the function check_for_language with an argument lang , if it evaluates to false ,
Translation: if call to function to_locale with exist location as False ,
BLEU = 0.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 54.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 128:  fg = colors . pop ( )
Original: remove the first element from colors , substitute it for fg .
Translation: remove the element element from substitute remaining_bits for colors .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 80.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 129:                           year_val , month_val , day_val = [ int ( v ) for v in match . groups ( ) ]
Original: for v in return value of the function match . groups , convert v into an integer and append i to a list , assign the result for year_val , month_val and day_val , respectively .
Translation: append every result of the function v . compile_filter , append the result to an list v , for every v and v in boolean True , append the result in a list , substitute the result for list .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=40, Reference length=36)
  1-gram: 55.0 
  2-gram: 17.9 
  3-gram:7.9 
  4-gram: 0.0 

Code line 130:     def label_from_instance ( self , obj ) :
Original: define the method label_from_instance with 2 arguments: self and obj .
Translation: define the method _UNK with arguments self and obj .
BLEU = 35.54 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 14.3 

Code line 131:                       message = "'%s' already exists" % top_dir
Original: replace ' %s ' in string " ' %s ' already exists " with top_dir , substitute it for message .
Translation: self . help a a string " " , where %s " is replaced with filter_name .
BLEU = 0.00 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21)
  1-gram: 41.2 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 132:  hour , minute = divmod ( timezone , 60 )
Original: divide timezone by integer 60 , substitute the quotient of the division for hour and reminder for minute .
Translation: divide timezone by integer 00 , substitute the result of the division for hour and hour .
BLEU = 45.50 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 62.5 
  3-gram:46.7 
  4-gram: 28.6 

Code line 133:  if tag in self . CDATA_CONTENT_ELEMENTS :
Original: if tag is contained in self . CDATA_CONTENT_ELEMENTS ,
Translation: if tag is contained in self . _UNK ,
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 134:  for f in fields :
Original: for every f in fields ,
Translation: for every f in fields ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 135:      finally :
Original: finally perform ,
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 136:  if lang_code in _supported and lang_code is not None and check_for_language ( lang_code ) :
Original: if lang_code is contained in _supported and lang_code is not None and result of the function check_for_language , called with an argument lang_code is true ,
Translation: if lang_code is not None and lang_code is not contained in lang_code and lang_code is not contained ,
BLEU = 25.68 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=18, Reference length=26)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:31.2 
  4-gram: 20.0 

Code line 137:   except IndexError :
Original: if IndexError exception is caught ,
Translation: if IndexError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 138:   with transaction . atomic ( using = connection . alias , savepoint = connection . features . can_rollback_ddl ) :
Original: with the call to the transaction . atomic method with using set to connection . alias , savepoint set to connection . features . can_rollback_ddl as arguments ,
Translation: with call to the function transaction . atomic with arguments : connection . alias and connection set to connection . alias , as the argument ,
BLEU = 29.31 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=26, Reference length=28)
  1-gram: 76.9 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 13.0 

Code line 139:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 140:  for filename in gen_filenames ( ) :
Original: for every filename in gen_filenames ( ) ,
Translation: for every bit in return value of the function data .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=11, Reference length=8)
  1-gram: 27.3 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 141:    def __deepcopy__ ( self , memo ) :
Original: define the method __deepcopy__ with 3 arguments: self and memo .
Translation: define the method __deepcopy__ with arguments self and memo .
BLEU = 59.54 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 142:    stream = self . _stream
Original: substitute self . _stream for stream .
Translation: substitute self . _stream for stream .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 143:  def center ( value , arg ) :
Original: define the function center with 2 arguments value and arg .
Translation: define the function _UNK with 0 arguments value and arg .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 144:    def render ( self , name , value , attrs = None ) :
Original: define the method render with 4 arguments: self , name , value and attrs set to None .
Translation: define the method render with 0 arguments : self , name , value and attrs set to None .
BLEU = 73.32 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18)
  1-gram: 84.2 
  2-gram: 77.8 
  3-gram:70.6 
  4-gram: 62.5 

Code line 145:  result . key = key
Original: substitute key for result . key .
Translation: substitute key for result . key .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 146:               settings . USE_I18N = True
Original: settings . USE_I18N is boolean True .
Translation: settings . output_transaction is boolean True .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 147:   except ImportError :
Original: if ImportError exception occurred ,
Translation: except ImportError .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 148:                 if not chunk [ : - rollback ] :
Original: slice chunk list to get the last rollback elements , if the new list is not empty ,
Translation: if last element of chunks is empty ,
BLEU = 0.00 (Bravity Penalty=0.287, Length ratio=0.444, Translated length=8, Reference length=18)
  1-gram: 62.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 149:  return chain ( * [  [ format_html ( '<link href="{0}" type="text/css" media="{1}" rel="stylesheet" />' , self . absolute_path ( path ) , medium )  for path in self . _css [ medium ] ]  for medium in media ] )
Original: return the result of the call to the function chain , with an argument unpacked list , containing the result of the function , format_html called with 3 arguments: string ' <link href= " { 0 } " type= " text/css " media= " { 1 } " rel= " stylesheet " /> ' , return value of the function self . absolute_path called with an argument path and medium , for every medium in media and for every path in value under the medium key of the self . _css dictionary .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.011, Translated length=1, Reference length=93)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 150:           return delattr ( caches [ DEFAULT_CACHE_ALIAS ] , name )
Original: delete the attribute name from the cache dictionary under the DEFAULT_CACHE_ALIAS key .
Translation: get the name attribute of the _UNK dictionary of caches dictionary , return value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 151:  import re
Original: import module re .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 152:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 153:      for handler in handlers :
Original: for every handler in handlers ,
Translation: for every handler in handlers ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 154:           fill_to = 8
Original: fill_to is an integer 8 .
Translation: content_length is an integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 155:  if value == self . empty_value or value in self . empty_values :
Original: if value equals self . empty_value or value is contained in self . empty_values ,
Translation: if value equals value or self . empty_values is true ,
BLEU = 0.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 90.9 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 156:  index_output = [ ]
Original: index_output is an empty list .
Translation: if is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 157:           self . fail_silently = fail_silently
Original: substitute fail_silently for self . fail_silently .
Translation: substitute self for self . close_called .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 158:               self . activated = False
Original: self . activated is boolean False .
Translation: self . can_import_settings is boolean False .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 159:     def to_python ( self , value ) :
Original: define the method to_python with arguments self and value .
Translation: define the method to_python with arguments self and value .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 160:           modified_code = None
Original: modified_code is None .
Translation: _UNK is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 161:               repr_attr = self . _wrapped
Original: substitute self . _wrapped for repr_attr .
Translation: substitute self . default_timeout for retval .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 162:     def safe_join ( base , * paths ) :
Original: define the function safe_join with 2 arguments base and unpacked dictionary paths .
Translation: define the function _import_module with arguments types and paths .
BLEU = 0.00 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13)
  1-gram: 80.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 163:               if key in d :
Original: if key is contained in d ,
Translation: if key is contained in d ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 164:               created_models = [ ]
Original: create_models is an empty list .
Translation: plural is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 165:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 166:  if num > self . _max_entries :
Original: if num is greater than self . _max_entries ,
Translation: if num is greater than self . _max_entries ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 167:                                        break
Original: break the loop execution .
Translation: break from the loop execution .
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 168:     run_syncdb = False
Original: run_syncdb is boolean False .
Translation: can_import_settings is boolean False .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 169:  _iteritems = "iteritems"
Original: _iteritems is a string " iteritems " .
Translation: _iteritems is a list " items " .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 170:               self . __offset = offset
Original: substitute offset for self . __offset .
Translation: substitute offset for self . lineno .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 171:  if max_age is not None :
Original: if max_age is not None ,
Translation: if max_age is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 172:     def to_python ( self , value ) :
Original: define the method to_python with arguments self and value .
Translation: define the method to_python with arguments self and value .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 173:   if not expires :
Original: if expires is false ,
Translation: if answer is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 174:  locales = set ( locales ) - set ( exclude )
Original: locales is relative complement of set exclude in set locales .
Translation: locales is a difference of the sets and sets sets .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 36.4 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 175:    @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 176:    warnings . warn ( "django.utils.importlib will be removed in Django 1.9." ,  RemovedInDjango19Warning , stacklevel = 2 )
Original: call the function warnings . warn with 3 arguments: string " django . utils . importlib will be removed in Django 1 . 9 . " , RemovedInDjango19Warning and stacklevel set to integer 2 .
Translation: call the function warnings . warn with 0 arguments : string " django . utils . utils be removed in Django 0 . 0 . " .
BLEU = 37.66 (Bravity Penalty=0.744, Length ratio=0.771, Translated length=27, Reference length=35)
  1-gram: 77.8 
  2-gram: 57.7 
  3-gram:44.0 
  4-gram: 33.3 

Code line 177:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 178:           return callback , ''
Original: return callback and a empty string .
Translation: return callback and an empty string .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 179:    def render ( self , context ) :
Original: define the method render with 2 arguments: self and context .
Translation: define the method render with 0 arguments : self and context .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 180:  del self . dicts [ - 1 ] [ key ]
Original: delete value under the key key of dictionary at last element of self . dicts .
Translation: if the value under the key key of the self . dicts dictionary .
BLEU = 40.59 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 78.6 
  2-gram: 53.8 
  3-gram:41.7 
  4-gram: 27.3 

Code line 181:                   old_attr = name
Original: substitute name for old_attr .
Translation: substitute name for new_mod .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 182:  key = self . make_key ( key , version = version )
Original: call the method self . make_key with key and version set to version as arguments , substitute the result for key .
Translation: call the method self . make_key with key and version set to version as arguments , substitute the result for key .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 183:           values = [ parser . compile_filter ( arg ) for arg in args [ 1 : ] ]
Original: call the function parser . compile_filter with an argument arg for every arg in args from first element to the end , append the results into a list , substitute it for value .
Translation: for every arg in arg arg of arg . _UNK , for every first element of arg into a list .
BLEU = 11.02 (Bravity Penalty=0.538, Length ratio=0.618, Translated length=21, Reference length=34)
  1-gram: 66.7 
  2-gram: 30.0 
  3-gram:15.8 
  4-gram: 5.6 

Code line 184:       self . m2m_data = None
Original: self . m2m_data is None .
Translation: self . asvar is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 185:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 186:   inner , outer = digest ( ) , digest ( )
Original: call the function digest twice , substitute the results for inner , outer , respectively .
Translation: evaluate the function digest , substitute the result for timetuple and timetuple , call the function urlparse with 0 arguments : empty and empty list
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.562, Translated length=25, Reference length=16)
  1-gram: 36.0 
  2-gram: 20.8 
  3-gram:13.0 
  4-gram: 0.0 

Code line 187:  errors . extend ( _check_boolean_field_default_value ( ** kwargs ) )
Original: call the function _check_boolean_field_default_value with dictionary kwargs as argument , use the result as an argument for the call to the function errors . extend .
Translation: call the method options with dictionary kwargs as argument , for every field as the argument for the result .
BLEU = 26.91 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=20, Reference length=26)
  1-gram: 75.0 
  2-gram: 47.4 
  3-gram:27.8 
  4-gram: 17.6 

Code line 188:  self . choices = choices
Original: substitute choices for self . choices .
Translation: substitute choices for self . choices .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 189:    def get_host ( self ) :
Original: define the method get_host with an argument self .
Translation: define the method __next__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 190:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 191:                   output . append ( "%s = %s" % ( key , user_settings [ key ] ) )
Original: replace ' %s ' in string " %s = %s " with key and value under the key key of the user_setting dictionary , append it to the output .
Translation: replace ' %s ' in string " %s %s %s " with key and value under the key key of the output dictionary , append
BLEU = 64.91 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=25, Reference length=30)
  1-gram: 96.0 
  2-gram: 87.5 
  3-gram:73.9 
  4-gram: 63.6 

Code line 192:  from django . utils import six
Original: from django . utils import six into default name space .
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 193:  from django . utils import formats , six
Original: from django . utils import formats and six into default name space .
Translation: from django . utils import six and six into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 194:  s = force_text ( s ) . strip ( ) . replace ( ' ' , '_' )
Original: call the function force_text with an argument s , strip the result of whitespaces from both ends , replace every occurrence of whitespaces in the previous result for ' _ ' , substitute the result for s .
Translation: replace every occurrence of the result of the function s , s with s ' s ' is s with s ' ( ' as argument , return the result .
BLEU = 12.67 (Bravity Penalty=0.798, Length ratio=0.816, Translated length=31, Reference length=38)
  1-gram: 64.5 
  2-gram: 26.7 
  3-gram:10.3 
  4-gram: 3.6 

Code line 195:               formfield = f . formfield ( ** kwargs )
Original: call the method f . formfield with an argument , unpacked dictionary kwargs , substitute the result for formfield .
Translation: call the method f . getlist with argument self . argv as the argument .
BLEU = 20.42 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=15, Reference length=20)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:23.1 
  4-gram: 16.7 

Code line 196:  if hasattr ( self , '_get' ) :
Original: if self has an ' _get ' attribute ,
Translation: if self has an attribute ' _UNK ' ,
BLEU = 35.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 197:      class ChoiceField ( Field ) :
Original: derive the class ChoiceField from the base class Field class .
Translation: derive the class ChunkIter from the base class Field class .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 198:       def __init__ ( self ) :
Original: define the method __init__ with an argument self .
Translation: define initialization method __init__ , with self class instance as the argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.444, Translated length=13, Reference length=9)
  1-gram: 61.5 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 199:                   e . reason += ', HTTP response headers must be in %s format' % charset
Original: replace ' %s ' in string ' , HTTP response headers must be in %s format ' for charset , append it to e . reason .
Translation: with string ' %s ' and ' %s ' is replaced with dirpath and %s , %s . %s is replaced with string ' %s
BLEU = 0.00 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 36.0 
  2-gram: 12.5 
  3-gram:4.3 
  4-gram: 0.0 

Code line 200:   elif ( attrvalue [ : 1 ] == '\'' == attrvalue [ - 1 : ] or  attrvalue [ : 1 ] == '"' == attrvalue [ - 1 : ] ) :
Original: otherwise , if first and the last character of attrvalue are ' \ ' charter or first and last character of attrvalue are ' " ' character ,
Translation: otherwise if if first element of args equals to equal to string ' ,
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=14, Reference length=28)
  1-gram: 42.9 
  2-gram: 7.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 201:     class FieldError ( Exception ) :
Original: derive the class FieldError from the Exception base class .
Translation: derive the class SerializationError from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 202:  if safe is not None :
Original: if safe is not None ,
Translation: if newretval is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 203:    accept = request . META . get ( 'HTTP_ACCEPT_LANGUAGE' , '' )
Original: get the value under the ' HTTP_ACCEPT_LANGUAGE ' key of the request . META dictionary , if it exists substitute it for accept , if not accept is an empty string .
Translation: get the value under the ' META ' key . key .
BLEU = 9.60 (Bravity Penalty=0.189, Length ratio=0.375, Translated length=12, Reference length=32)
  1-gram: 91.7 
  2-gram: 54.5 
  3-gram:40.0 
  4-gram: 33.3 

Code line 204:    def unget ( self , bytes ) :
Original: define the method unget with arguments self and bytes .
Translation: define the method b with 0 arguments : self and bytes .
BLEU = 32.65 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 75.0 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 205:  MAX_NUM_FORM_COUNT = 'MAX_NUM_FORMS'
Original: MAX_NUM_FORM_COUNT is a string ' MAX_NUM_FORMS ' .
Translation: COMMENT_TAG_END is a string ' _UNK ' .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 206:               name = self . format ( 'O' )
Original: call the method self . format with an argument string ' 0 ' , substitute the result for name .
Translation: call the method self . endElement with an argument string ' name ' , substitute the result for final_attrs .
BLEU = 61.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 90.0 
  2-gram: 68.4 
  3-gram:55.6 
  4-gram: 41.2 

Code line 207:  handler . addQuickElement ( "link" , item [ 'link' ] )
Original: call the method handler . addQuickElement with 2 arguments: string ' link ' and value under the ' link ' key of the item dictionary .
Translation: call the method handler . addQuickElement with 0 arguments : string ' link ' and value under the ' link ' key of the item
BLEU = 77.23 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 88.0 
  2-gram: 83.3 
  3-gram:78.3 
  4-gram: 72.7 

Code line 208:  if categories :
Original: if categories is true ,
Translation: if categories is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 209:  parser . add_argument ( '--extension' , '-e' , dest = 'extensions' ,  action = 'append' , default = [ 'py' ] ,  help = 'The file extension(s) to render (default: "py"). '  'Separate multiple extensions with commas, or use '  '-e multiple times.' )
Original: call the method parser . add_argument with 6 arguments: string ' --extension ' , string ' -e ' , dest set to string ' extensions ' , action set to ' append ' , default is a list containing string ' py ' and help set to string: ' The file extension ( s ) to render ( default: " py " ) . Separate multiple extensions with commas , or use -e multiple times . ' .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.013, Translated length=1, Reference length=78)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 210:     def _isdst ( self , dt ) :
Original: define the method _isdst with 2 arguments self and dt .
Translation: define the method _isdst with 0 arguments : self and dt .
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 211:     if item [ 'enclosure' ] is not None :
Original: if value under the ' enclosure ' key of the item dictionary is not None ,
Translation: if value under the ' unique_id ' key of the item dictionary is not None ,
BLEU = 81.54 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 93.8 
  2-gram: 86.7 
  3-gram:78.6 
  4-gram: 69.2 

Code line 212:               Model = _get_model ( d [ "model" ] )
Original: call the function _get_model with an argument value under the ' model ' key of the d dictionary , substitute the result for Model .
Translation: _UNK the _UNK _UNK _UNK _UNK " _UNK " as argument , substitute the result for value .
BLEU = 15.78 (Bravity Penalty=0.678, Length ratio=0.720, Translated length=18, Reference length=25)
  1-gram: 50.0 
  2-gram: 23.5 
  3-gram:18.8 
  4-gram: 13.3 

Code line 213:  def writer ( self ) :
Original: define the method writer with an argument self .
Translation: define the method content with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 214:   page_range = property ( _get_page_range )
Original: page_range is a property object with _get_page_range as a getter method .
Translation: property the property object _UNK for _UNK _UNK .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12)
  1-gram: 33.3 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 215:    def create_variable_node ( self , filter_expression ) :
Original: define the method create_variable_node with 2 arguments self and filter_expression .
Translation: define the method create_variable_node with 0 arguments : self and filter_expression .
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 216:      def resolve ( path , urlconf = None ) :
Original: define the function resolve with arguments path and urlconf set to None .
Translation: define the function resolve with 0 arguments : path and urlconf set to None .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 217:  obj . _constructor_args = ( args , kwargs )
Original: obj . _constructor_args is a tuple with 2 elements: args and kwargs .
Translation: call the function __new__ with arguments instance and params as arguments .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 218:  for key_value in natural :
Original: for every key_value in natural ,
Translation: for every key_value in define ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 219:  def verbatim ( parser , token ) :
Original: define the function verbatim with 2 arguments: parser and token .
Translation: define the function regroup with 0 arguments : parser and token .
BLEU = 31.70 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 220:    if not changed :
Original: if changed is false ,
Translation: if converter is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 221:   threading = options . get ( 'use_threading' )
Original: substitute value under the ' use_threading ' key of the options dictionary for threading .
Translation: get the value under the ' interactive ' key of the options dictionary , substitute it for host .
BLEU = 40.47 (Bravity Penalty=1.000, Length ratio=1.267, Translated length=19, Reference length=15)
  1-gram: 68.4 
  2-gram: 44.4 
  3-gram:35.3 
  4-gram: 25.0 

Code line 222:               warnings . warn ( "``--natural`` is deprecated; use ``--natural-foreign`` instead." ,  RemovedInDjango19Warning )
Original: call the function warnings . warn with an argument string " ``--natural`` is deprecated; use ``--natural-foreign`` instead . " , and RemovedInDjango19Warning .
Translation: call the function warnings . warn with 0 arguments : string " _UNK is deprecated with Django _UNK . " and RemovedInDjango00Warning .
BLEU = 32.04 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=23, Reference length=23)
  1-gram: 60.9 
  2-gram: 36.4 
  3-gram:23.8 
  4-gram: 20.0 

Code line 223:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 224:           self . style = color_style ( )
Original: call the function color_style , substitute the result for self . style .
Translation: call the method method , substitute the result for self . style .
BLEU = 70.16 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 75.0 
  3-gram:63.6 
  4-gram: 60.0 

Code line 225:     class JsonResponse ( HttpResponse ) :
Original: derive the class JsonResponse from the HttpResponse base class .
Translation: derive the class HttpResponse from the HttpResponse base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 226:  from django . core . management . base import BaseCommand , CommandError
Original: from django . core . management . base import BaseCommand and CommandError into default name space .
Translation: from django . core . management . base import BaseCommand and CommandError into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 227:    class SimpleLazyObject ( LazyObject ) :
Original: derive the class SimpleLazyObject from the LazyObject base class .
Translation: derive the class DefaultStorage from the Tags base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 228:   return _translations [ language ]
Original: return _translations dictionary value , under the language key .
Translation: if value under the DEFAULT_CACHE_ALIAS key of the dictionary dictionary .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 54.5 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 229:  self . stdout . write ( self . style . NOTICE ( "Run 'python manage.py migrate' to apply them.\n" ) )
Original: call the method self . style . NOTICE with an argument string " Run ' python manage . py migrate ' to apply them . \n " , write it to self . stdout .
Translation: call the method self . stdout . write with an argument string " . \n . \n " .
BLEU = 24.49 (Bravity Penalty=0.431, Length ratio=0.543, Translated length=19, Reference length=35)
  1-gram: 94.7 
  2-gram: 66.7 
  3-gram:52.9 
  4-gram: 31.2 

Code line 230:           return s
Original: return s .
Translation: return s .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 231:  origin = make_origin ( display_name , self . load_template_source , template_name , template_dirs )
Original: call the function make_origin with 4 arguments: display_name , self . load_template_source , template_name and template_dirs , substitute the result for origin .
Translation: call the function formatdate with 0 elements : template_name , self . files and dirs , substitute the result for digest .
BLEU = 27.48 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 68.2 
  2-gram: 38.1 
  3-gram:25.0 
  4-gram: 10.5 

Code line 232:                   self . appendlist ( key , value )
Original: call the method appendlist with 2 arguments: key and value .
Translation: call the method self . validate_key with 0 arguments : key and value .
BLEU = 26.58 (Bravity Penalty=1.000, Length ratio=1.273, Translated length=14, Reference length=11)
  1-gram: 57.1 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 9.1 

Code line 233:  import errno
Original: import module errno .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 234:   if value is not result :
Original: if value is not contained in result ,
Translation: if value is not contained in result ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 235:   except AttributeError :
Original: if AttributeError exception is caught ,
Translation: if AttributeError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 236:   from django . apps import apps
Original: from django . apps import apps into default name space .
Translation: from django . apps import apps into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 237:   return data . get ( name , None )
Original: get the value under the name key of the data dictionary , if it exists return it , if not return None .
Translation: return value under the name key of the data dictionary , if it doesnt exists
BLEU = 47.31 (Bravity Penalty=0.587, Length ratio=0.652, Translated length=15, Reference length=23)
  1-gram: 93.3 
  2-gram: 78.6 
  3-gram:76.9 
  4-gram: 75.0 

Code line 238:  if p >= 0 :
Original: if p is greater or equal to integer 0 ,
Translation: if p is greater or equal to integer 0 ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 239:  if node . hasAttribute ( 'pk' ) :
Original: call the method node . hasAttribute with string ' pk ' as an argument , if it evaluates to true ,
Translation: call the method logging . _UNK with an argument string ' pk ' ,
BLEU = 18.68 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=14, Reference length=21)
  1-gram: 85.7 
  2-gram: 46.2 
  3-gram:25.0 
  4-gram: 9.1 

Code line 240:   form . _meta . fields . append ( self . fk . name )
Original: append self . fk . name to form . _meta . fields .
Translation: append self . fk . name to form . name .
BLEU = 67.29 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 241:  i += 1
Original: increment i by integer 1 ,
Translation: increment i by 0 .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 60.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 242:   out . write ( ' pgettext(%r, %r) ' % ( message_context , g ) )
Original: format string ' pgettext ( %r , %r ) ' with message_context and g , write it to out .
Translation: call the function blankout from 0 arguments : result of %d ( %d ) , %d and %d .
BLEU = 0.00 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 26.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 243:     class MultipleHiddenInput ( HiddenInput ) :
Original: derive the class MultipleHiddenInput from the HiddenInput base class .
Translation: derive the class HiddenInput from the HiddenInput base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 244:   except ImportError :
Original: if ImportError exception is caught ,
Translation: except ImportError .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 245:  obj = Model ( ** data )
Original: obj is an instance of Model class , created with an unpacked dictionary data as argument .
Translation: get the function attribute , created with an argument obj .
BLEU = 15.64 (Bravity Penalty=0.580, Length ratio=0.647, Translated length=11, Reference length=17)
  1-gram: 63.6 
  2-gram: 30.0 
  3-gram:22.2 
  4-gram: 12.5 

Code line 246:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 247:                                        msg = "Could not decode base64 data: %r" % e
Original: msg is a string " Could not decode base64 data: %r " , where ' %r ' is replace with e .
Translation: msg is a string " The " %s " , where ' %s ' is replaced with __name__ .
BLEU = 30.73 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 68.4 
  2-gram: 44.4 
  3-gram:29.4 
  4-gram: 18.8 

Code line 248:  raise NotImplementedError ( 'subclasses of BaseCommand must provide a handle() method' )
Original: raise an NotImplementedError exception with an argument string ' subclasses of BaseCommand must provide a handle ( ) method ' .
Translation: raise an NotImplementedError with an argument string ' subclasses of the BaseArchive provide a reload ( ) method ' .
BLEU = 53.84 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 85.0 
  2-gram: 68.4 
  3-gram:50.0 
  4-gram: 35.3 

Code line 249:   kwargs = {  'form' : form ,  'formfield_callback' : formfield_callback ,  'formset' : formset ,  'extra' : extra ,  'can_delete' : can_delete ,  'can_order' : can_order ,  'fields' : fields ,  'exclude' : exclude ,  'min_num' : min_num ,  'max_num' : max_num ,  'widgets' : widgets ,  'validate_min' : validate_min ,  'validate_max' : validate_max ,  'localized_fields' : localized_fields ,  'labels' : labels ,  'help_texts' : help_texts ,  'error_messages' : error_messages ,  }
Original: kwargs is a dictionary with 17 entries: form for ' form ' , formfield_callback for ' formfield_callback ' , formset for ' formset ' , extra for ' extra ' , can_delete for ' can_delete ' , can_order for ' can_order ' , fields for ' fields ' , exclude for ' exclude ' , min_num for ' min_num ' , max_num for ' max_num ' , widgets for ' widgets ' , validate_min for ' validate_min ' , validate_max for ' validate_max ' , localized_fields for ' localized_fields ' , labels for ' labels ' , help_texts for ' help_texts ' , and error_messages for ' error_messages ' .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.009, Translated length=1, Reference length=110)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 250:  substitutions [ 'clear_checkbox_name' ] = conditional_escape ( checkbox_name )
Original: call the function conditional_escape with an argument checkbox_name , substitute the result for value under the ' clear_checkbox_name ' key of the substitutions dictionary .
Translation: call the function conditional_escape with an argument bytes , substitute the result for value under the ' title ' key of the html dictionary .
BLEU = 66.95 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 88.0 
  2-gram: 75.0 
  3-gram:60.9 
  4-gram: 50.0 

Code line 251:  self . _closable_objects = [ ]
Original: self . _closable_objects is an empty list .
Translation: self . _unget_history is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 252:        m = getattr ( lookup_view , '__module__' , None )
Original: get the attribute ' __module__ ' from the getattr , if it exists substitute it for m , if not , m is None .
Translation: get attribute attribute attribute from the object object , if it exists substitute it for m , if not val is None .
BLEU = 49.94 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 78.3 
  2-gram: 59.1 
  3-gram:47.6 
  4-gram: 40.0 

Code line 253:   if response is None :
Original: if response is None ,
Translation: if response is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 254:               raise MultiValueDictKeyError ( repr ( key ) )
Original: raise an MultiValueDictKeyError exception with printable representation of key .
Translation: raise _UNK _UNK with _UNK key as a key .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 40.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 255:   return _wrapper
Original: return _wrapper .
Translation: return new_context .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 256:  super ( NoArgsCommand , self ) . __init__ ( )
Original: call the __init__ method from the base class of the NoArgsCommand class .
Translation: call the method __init__ with an argument base class of the class BaseInlineFormSet .
BLEU = 24.02 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 30.8 
  3-gram:16.7 
  4-gram: 9.1 

Code line 257:   from django . core . management . base import CommandError
Original: from django . core . management . base import CommandError into default name space .
Translation: from django . core . management . base import CommandError into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 258:  from django . conf import settings
Original: from django . conf import settings into default name space .
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 259:               raise EmptyPage ( 'That page number is less than 1' )
Original: raise an EmptyPage exception with string ' That page number is less than 1 ' as an argument .
Translation: raise an _UNK exception with string ' number number to number number is a integer 0 .
BLEU = 17.71 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 52.9 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 7.1 

Code line 260:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 261:               raise TypeError ( 'In order to allow non-dict objects to be '  'serialized set the safe parameter to False' )
Original: raise an TypeError exception with an argument string ' In order to allow non-dict objects to be serialized set the safe parameter to False ' .
Translation: raise an TypeError with an argument string ' _UNK to the add to the the string ' to version ' .
BLEU = 21.42 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=21, Reference length=26)
  1-gram: 66.7 
  2-gram: 35.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 262:           print ( "Can't import flup." + flup_module )
Original: append flup_module to string " Can ' t import flup . " , print it to the standard output .
Translation: write " " No " . \n " with check . " write " %s " .
BLEU = 0.00 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 23.5 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 263:  zfile . write ( s )
Original: call the method zfile . write with an argument s .
Translation: write new s . write .
BLEU = 0.00 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=6, Reference length=11)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 264:  from django . core . management . base import CommandError , BaseCommand
Original: from django . core . management . base import CommandError and BaseCommand into default name space .
Translation: from django . core . management . base import BaseCommand and CommandError into default name space .
BLEU = 73.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 57.1 

Code line 265:  _file = os . fdopen ( fd , mode )
Original: call the function os . fdopen with arguments fd and mode , substitute it for _file .
Translation: call the function os . _UNK with arguments : fd and _UNK , substitute the result for fd .
BLEU = 27.68 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17)
  1-gram: 68.4 
  2-gram: 38.9 
  3-gram:17.6 
  4-gram: 12.5 

Code line 266:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 267:           opts = self . _meta
Original: substitute self . _meta for opts .
Translation: substitute self . _meta for opts .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 268:       import warnings
Original: import warnings .
Translation: import module warnings .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 269:  token . source = self . origin , source
Original: assign self . origin , source to token . source .
Translation: substitute token . source for 0 , token and token .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 45.5 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 270:      app_template_dirs = calculate_app_template_dirs ( )
Original: call the function calculate_app_template_dirs , substitute the result for app_template_dirs .
Translation: call the function smart_text , substitute the result for content .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 271:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 272:           return "<WithNode>"
Original: return a string " <WithNode> "
Translation: return a string " _UNK " .
BLEU = 43.47 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 71.4 
  2-gram: 50.0 
  3-gram:40.0 
  4-gram: 25.0 

Code line 273: import cgi
Original: import module cgi .
Translation: import module .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 274:               contents = format_html ( '{0}{1}' , contents , label_suffix )
Original: call the method format_html with 3 arguments: string ' { 0 } { 1 } ' , contents and label_suffix , substitute the result for contents .
Translation: call the function format_html with 0 arguments : strings , endblock and boolean string , substitute the result for nodelist .
BLEU = 18.29 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=21, Reference length=27)
  1-gram: 66.7 
  2-gram: 30.0 
  3-gram:15.8 
  4-gram: 11.1 

Code line 275:               url_fields = split_url ( value )
Original: call the function split_url with an argument value , substitute the result for url_fields .
Translation: call the function _UNK with an argument value , substitute the result for value .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 276:               app_names = sorted ( loader . migrated_apps )
Original: sort loader . migrated_apps , substitute it for app_names .
Translation: loader is a instance of the loader . loader function .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 27.3 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 277:  if isinstance ( s , ( SafeData , EscapeData ) ) :
Original: if s is an instance of SafeData or EscapeData ,
Translation: if s is an instance of SafeData or SafeData ,
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:75.0 
  4-gram: 71.4 

Code line 278:                           field_desc += '  # ' + ' ' . join ( comment_notes )
Original: join elements of comment_notes into a string , separated by whitespaces , append it to the string ' # ' , append the result to field_desc . yield string '
Translation: join string ' , join them into a string , substitute the result for self . error_class .
BLEU = 10.57 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=18, Reference length=30)
  1-gram: 61.1 
  2-gram: 35.3 
  3-gram:12.5 
  4-gram: 6.7 

Code line 279:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 280:               if settings . STATIC_URL is None :
Original: if settings . STATIC_URL is None ,
Translation: if settings . USE_L00N is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 281:  self . prefix = prefix
Original: substitute prefix for self . prefix .
Translation: substitute prefix for self . prefix .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 282:           self . _wrapped = get_storage_class ( ) ( )
Original: call the function that is the return value of get_storage_class method , substitute the result for self . _wrapped .
Translation: self . _UNK is a instance of _UNK class .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=10, Reference length=20)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 283:  del self [ 'content-type' ]
Original: delete the value under the ' content-type ' key of the self dictionary .
Translation: delete the value under the ' author_name ' key of self .
BLEU = 47.27 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 91.7 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 284:           if name . lower ( ) == 'subject' :
Original: if name converted to lower case equals to string ' subject ' ,
Translation: convert name to lowercase equals lowercase or it equals to string ' .
BLEU = 21.40 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 46.2 
  2-gram: 25.0 
  3-gram:18.2 
  4-gram: 10.0 

Code line 285:    def __str__ ( self ) :
Original: define the method __str__ with an argument self .
Translation: define the method __str__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 286:  cmd_options = vars ( options )
Original: call the function vars with an argument options , substitute the result for cmd_options .
Translation: call the function ugettext_lazy with an argument options , substitute the result for options .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 287:   if has_old_option and has_new_option :
Original: if has_old_option and has_new_option are both true ,
Translation: if ignore is true and errors is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 44.4 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 288:  self . xml . endElement ( "natural" )
Original: call the method self . xml . startElement with an argument string ' natural ' .
Translation: call the method self . xml . endElement with an argument string " natural ' .
BLEU = 61.28 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 87.5 
  2-gram: 73.3 
  3-gram:57.1 
  4-gram: 38.5 

Code line 289:               try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 290:               if connection . introspection . table_name_converter ( model . _meta . db_table ) in table_names :
Original: if return value of the function connection . introspection . table_name_converter called with an arugment: model . _meta . db_table is contained in table_names
Translation: if connection . introspection . introspection . dirname method with model . db_table directory with directory ,
BLEU = 13.55 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24)
  1-gram: 58.8 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 7.1 

Code line 291:    return valid
Original: return valid .
Translation: return retval .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 292:             if 'forloop' in context :
Original: if string ' forloop ' is contained in context ,
Translation: if string ' forloop ' is contained in context ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 293:               pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 294:  while 1 :
Original: endless loop ,
Translation: endless loop ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 295:  self . COOKIES = { }
Original: self . COOKIES is an empty dictionary .
Translation: self . find_template_cache is an empty dictionary .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 296:   return dec
Original: return dec .
Translation: return dec .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 297:     def sanitize_address ( addr , encoding ) :
Original: define the function sanitize_address with arguments addr and encoding .
Translation: define the function get_ns_resolver with 0 arguments : dt and encoding .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 66.7 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 298:  lookups . appendlist ( name , ( new_matches , p_pattern + pat , dict ( defaults , ** pattern . default_kwargs ) ) )
Original: call the method lookups . appendlist with 2 arguments: name and a tuple containing 3 elements: new_matches , sum of p_pattern and pat , and dictionary created by applying defaults mapping on the pattern . default_kwargs dictionary .
Translation: call the function Deserializer . _UNK with 0 arguments : name , _UNK class of a function Deserializer called with 0 arguments : app_name , and unpacked dictionary result , for every pattern and result of the function _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=40, Reference length=38)
  1-gram: 37.5 
  2-gram: 5.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 299:   factory = klass
Original: substitute klass for factory .
Translation: substitute substitute base for klass .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 300:    message = "%s\n\nRequest repr(): %s" % ( self . format ( record ) , request_repr )
Original: message is an string " %s\n\nRequest repr ( ) : %s " formated with the result of the metod self . format with an argument record , and request_repr , respectively .
Translation: format the string " ( %s " %s " and %s " with the result of the method url , replace the result is replaced with self . __starttag_text .
BLEU = 17.23 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=30, Reference length=32)
  1-gram: 60.0 
  2-gram: 24.1 
  3-gram:10.7 
  4-gram: 7.4 

Code line 301:   final_attrs = self . build_attrs ( attrs , type = self . input_type , name = name )
Original: call the method self . build_attrs with 3 arguments: attrs , type as self . input_type , name as name , substitute the result for final_attrs .
Translation: call the method self . build_attrs with 0 arguments : type , type , self . encoding , substitute the result for name and name
BLEU = 40.22 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 76.0 
  2-gram: 50.0 
  3-gram:34.8 
  4-gram: 27.3 

Code line 302:    def create_nodelist ( self ) :
Original: define the method create_nodelist with an argument self .
Translation: define the method create_nodelist with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 303:    self . run_shell ( shell = options [ 'interface' ] )
Original: call the method self . run_shell with an argument shell set to value under the ' interface ' key of the options dictionary .
Translation: call the method _UNK with argument set to the ' as argument , substitute the result for self . cookies .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 61.9 
  2-gram: 25.0 
  3-gram:5.3 
  4-gram: 0.0 

Code line 304:   if len ( args ) > 4 :
Original: if length of args is greater than 4 .
Translation: if length of args is greater than integer 0 ,
BLEU = 63.89 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 70.0 
  2-gram: 66.7 
  3-gram:62.5 
  4-gram: 57.1 

Code line 305:   __all__ = [ 'SelectDateWidget' ]
Original: __all__ is an list containing string ' SelectDateWidget ' .
Translation: __all__ is an list containing a string ' __all__ ' .
BLEU = 44.97 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 306:    def create_token ( self , token_string , in_tag ) :
Original: define the method create_token with 3 arguments: self , token_string and in_tag .
Translation: define the method create_token with 0 arguments : self , token_string and in_tag .
BLEU = 61.63 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 78.6 
  2-gram: 69.2 
  3-gram:58.3 
  4-gram: 45.5 

Code line 307:     all_locales = [ ]
Original: all_locales is an empty string .
Translation: field_notes is an empty list .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 308:                         unhandled_params . remove ( param )
Original: call the method unhandled_params . remove with an argument param .
Translation: remove the beginning from plist .
BLEU = 0.00 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=6, Reference length=11)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 309:               raise InvalidTemplateLibrary ( "Unsupported arguments to "  "Library.filter: (%r, %r)" , ( name , filter_func ) )
Original: raise an InvalidTemplateLibrary exception with an argument string ( " Unsupported arguments to Library . filter: ( %r , %r ) " , where ' %r ' is replaced with name and filter_func , respectively .
Translation: raise an ImproperlyConfigured exception with an argument string " template . to " %r arguments : " , %r , %r , %r and stacklevel .
BLEU = 16.64 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=26, Reference length=36)
  1-gram: 76.9 
  2-gram: 32.0 
  3-gram:16.7 
  4-gram: 8.7 

Code line 310:       from shutil import copystat
Original: from shutil import copystat into default name space .
Translation: from import import everything into default name space .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 311:  raise NotImplementedError ( 'subclasses of LabelCommand must provide a handle_label() method' )
Original: raise an NotImplementedError exception with an argument string ' subclasses of LabelCommand must provide a handle_label ( ) method ' .
Translation: raise an NotImplementedError with an argument string ' subclasses of _UNK must provide an listdir ( ) method ) method ' .
BLEU = 48.79 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21)
  1-gram: 77.3 
  2-gram: 61.9 
  3-gram:45.0 
  4-gram: 26.3 

Code line 312:                           try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 313:  del bits [ : 3 ]
Original: delete first 3 elements of bits .
Translation: delete first element of bits .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 314:               return self . STDOFFSET
Original: return self . STDOFFSET .
Translation: return self . html_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 315:                   dirs = [ os . path . join ( basedir , l , 'LC_MESSAGES' ) for l in locales ]
Original: join basedir , l and string ' LC_MESSAGES ' into a path separated by ' / ' for every l in locales , assign the list to dirs .
Translation: join is a list containing a list containing a elements of basedir , for every basedir in a string ' locale ' , for every path in a string , separated by the list , separated by the string ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.414, Translated length=41, Reference length=29)
  1-gram: 43.9 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 316:               if key not in default_settings :
Original: if key is not contained in default_settings ,
Translation: if key is not contained in dict ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 317:       def callable ( obj ) :
Original: define the function callable with an argument obj .
Translation: define the function _UNK with argument obj .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 0.0 

Code line 318:           d = ',%s' % datetime_safe . new_datetime ( date ) . strftime ( '%Y-%m-%d' )
Original: call the function datetime_safe . new_datetime with an argument date , on the result call the method strftime with an argument , string ' %Y-%m-%d ' , convert the result into a string and append it to ' , ' , substitute the result for d .
Translation: format is a string ' % ' .
BLEU = 0.00 (Bravity Penalty=0.008, Length ratio=0.170, Translated length=8, Reference length=47)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 319:               return
Original: return nothing .
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 320:       def write_pot_file ( potfile , msgs ) :
Original: define the function write_pot_file with 2 arguments potfile and msgs .
Translation: define the function _UNK with 0 arguments : msgs and msgs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 321:               class_name = base . __name__
Original: substitute base . __name__ for class_name .
Translation: substitute __name__ . __name__ for base . __name__ .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 0.0 

Code line 322:  from django . template . base import TemplateDoesNotExist
Original: from django . template . base import TemplateDoesNotExist into default name space .
Translation: from django . template . base import TemplateDoesNotExist into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 323:   connection = connections [ options [ 'database' ] ]
Original: get the value under the ' database ' key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .
Translation: get the value under the ' database ' key of the options dictionary , substitute it as the key for connection .
BLEU = 47.66 (Bravity Penalty=0.580, Length ratio=0.647, Translated length=22, Reference length=34)
  1-gram: 100.0 
  2-gram: 90.5 
  3-gram:80.0 
  4-gram: 63.2 

Code line 324:  raise CommandError ( "Conflicting migrations detected (%s).\nTo fix them run 'python manage.py makemigrations --merge'" % name_str )
Original: raise CommandError exception , with " Conflicting migrations detected ( %s ) . \nTo fix them run ' python manage . py makemigrations --merge ' " , with ' %s ' substituted for name_str , as argument .
Translation: raise the CommandError with an argument " The The _UNK %s . %s ( %s ) %s . " . " with ' %s ' with __name__ . __name__ , and ' %s ' with __name__ .
BLEU = 11.27 (Bravity Penalty=0.973, Length ratio=0.974, Translated length=37, Reference length=38)
  1-gram: 51.4 
  2-gram: 13.9 
  3-gram:8.6 
  4-gram: 2.9 

Code line 325:   def __init__ ( self , tup , hash = hash ) :
Original: define the method __init__ with 3 arguments: self , tup and hash set to hash .
Translation: define the method __init__ with arguments self , instance , params and params as an empty .
BLEU = 26.22 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 52.9 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 14.3 

Code line 326:                   if fake :
Original: if fake is true ,
Translation: if fake is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 327:                   continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 328:  if settings . DEBUG_PROPAGATE_EXCEPTIONS :
Original: if settings . DEBUG_PROPAGATE_EXCEPTIONS is True ,
Translation: if settings . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 329:                       out . write ( ' _(%s) ' % cmatch . group ( 1 ) )
Original: call the method cmatch . group with an argument integer 1 , format with the result string ' _ ( %s ) ' , write it to out .
Translation: call the function _ . _ with an argument string ' ( %s ) ) ' , with 0 : result of the function _
BLEU = 0.00 (Bravity Penalty=0.852, Length ratio=0.862, Translated length=25, Reference length=29)
  1-gram: 68.0 
  2-gram: 33.3 
  3-gram:13.0 
  4-gram: 0.0 

Code line 330:           self . _stream = stream
Original: substitute stream for self . _stream .
Translation: substitute stream for self . _stream .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 331:  from django . template . defaultfilters import date
Original: from django . template . defaultfilters import date into default name space .
Translation: from django . template . _UNK import BaseLoader into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 332:   except OSError as e :
Original: if OSError , renamed to e , exception is caught ,
Translation: if OSError , renamed to e , exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 333:                           self . stdout . write ( "    - %s\n" % operation . describe ( ) )
Original:  - %s\n " with return value of the operation . describe method , write the result to self . stdout .
Translation: replace %s " - - of result . \n " , write it to self . stdout .
BLEU = 22.40 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 66.7 
  2-gram: 29.4 
  3-gram:18.8 
  4-gram: 13.3 

Code line 334:  six . reraise ( MultiPartParserError , MultiPartParserError ( msg ) , sys . exc_info ( ) [ 2 ] )
Original: call the method six . reraise with 3 arguments: MultiPartParserError , MultiPartParserError created with msg , and third element of the result of the function sys . exc_info .
Translation: call the function six . reraise with 0 arguments : msg , third element of the result of the function exc_info . exc_info called with 0 arguments : msg and list of result .
BLEU = 33.56 (Bravity Penalty=1.000, Length ratio=1.172, Translated length=34, Reference length=29)
  1-gram: 61.8 
  2-gram: 42.4 
  3-gram:25.0 
  4-gram: 19.4 

Code line 335:  value = p [ i + 1 : ] . strip ( )
Original: take elements of p from index i incremented by 1 to the end , strip the result of the whitespaces , substitute it for value .
Translation: take first element of first element of first element of whitespaces , substitute it for self .
BLEU = 14.60 (Bravity Penalty=0.589, Length ratio=0.654, Translated length=17, Reference length=26)
  1-gram: 52.9 
  2-gram: 25.0 
  3-gram:20.0 
  4-gram: 14.3 

Code line 336:   elif isinstance ( value , datetime . date ) :
Original: otherwise if value is an instance of datetime . date ,
Translation: otherwise if value is an instance of datetime . date ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 337:                       if hasattr ( middleware , 'process_exception' ) :
Original: if middleware has an attribute ' process_exception ' ,
Translation: if middleware has an attribute ' process_response ' ,
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 50.0 

Code line 338:  self . _payload = payload . decode ( 'ascii' , 'surrogateescape' )
Original: call the method payload . decode with 2 arguments: string ' ascii ' and string ' surrogateescape ' , substitute the result for self . _payload .
Translation: call the method self . _UNK with string ' _UNK ' and _UNK as an argument , substitute the result for _UNK .
BLEU = 22.80 (Bravity Penalty=0.840, Length ratio=0.852, Translated length=23, Reference length=27)
  1-gram: 69.6 
  2-gram: 40.9 
  3-gram:19.0 
  4-gram: 10.0 

Code line 339:  translation = gettext_module . translation (  domain = 'django' ,  localedir = localedir ,  languages = [ self . __locale ] ,  codeset = 'utf-8' ,  fallback = use_null_fallback )
Original: call the method gettext_module . translation with 5 arguments: domain set to string ' django ' , localedir set to localedir , languages set to a list with an element self . __locale , codeset set to a string ' utf-8 ' and fallback set to use_null_fallback , substitute the result for translation .
Translation: call the method parser . parse_args with 0 arguments : suffix , suffix set to string ' _UNK ' , substitute ' %s ' for key .
BLEU = 6.28 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=27, Reference length=54)
  1-gram: 63.0 
  2-gram: 26.9 
  3-gram:12.0 
  4-gram: 4.2 

Code line 340:     accept_language_re = re . compile ( r'''         ([A-Za-z]{1,8}(?:-[A-Za-z0-9]{1,8})*|\*)      # "en", "en-au", "x-y-z", "es-419", "*"         (?:\s*;\s*q=(0(?:\.\d{,3})?|1(?:.0{,3})?))?   # Optional "q=1.00", "q=0.8"         (?:\s*,\s*|$)                                 # Multiple accepts per header.         ''' , re . VERBOSE )
Original: call the function re . compile with 2 arguments: raw string " ( [ A-Za-z ] { 1 , 8 } ( ?:- [ A-Za-z0-9 ] { 1 , 8 } ) *|\* ) ( ?:\s*;\s*q= ( 0 ( ?:\ . \d { , 3 } ) ?|1 ( ?: . 0 { , 3 } ) ? ) ) ? ( ?:\s* , \s*|$ ) " , and re . VERBOSE , substitute the result for accept_language_re .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.013, Translated length=1, Reference length=79)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 341:               pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 342:   self . deleted_objects . append ( obj )
Original: append obj to self . deleted_objects list .
Translation: append the to self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 343:  def do_with ( parser , token ) :
Original: define the function do_with with 2 arguments: parser and token .
Translation: define the function _UNK with 0 arguments : parser and token .
BLEU = 31.70 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 344:  self . choice_cache = None
Original: self . choice_cache is None .
Translation: self . _errors is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 345:    from django . conf import settings
Original: from django . conf import settings into default name space .
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 346:   dow = days [ date . weekday ( ) ]
Original: call the method date . weekday , use the result as an key to obtain the value from the days dictionary , substitute it for dow .
Translation: call the function _UNK . _UNK , use the result as an key of the index dictionary , substitute it for _UNK .
BLEU = 38.10 (Bravity Penalty=0.840, Length ratio=0.852, Translated length=23, Reference length=27)
  1-gram: 73.9 
  2-gram: 50.0 
  3-gram:38.1 
  4-gram: 30.0 

Code line 347:               debugs = [ e for e in all_issues if e . level < checks . INFO and not e . is_silenced ( ) ]
Original: append e to debugs list for every e in all_issues , if e . level is lesser than checks . INFO and result of the method e . is_silenced in false .
Translation: if e to e for e . _UNK for e . _UNK is false and e . _UNK is not false , or e . _UNK is false , substitute the result of the list containing list of list verbosity .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.281, Translated length=41, Reference length=32)
  1-gram: 46.3 
  2-gram: 15.0 
  3-gram:2.6 
  4-gram: 0.0 

Code line 348:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 349:                       found = getattr ( found , frag )
Original: get frag attribute from found object , substitute it for found .
Translation: get real_name attribute from the object object , substitute it for key_func .
BLEU = 35.42 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 69.2 
  2-gram: 41.7 
  3-gram:27.3 
  4-gram: 20.0 

Code line 350:               handler . addQuickElement ( "atom:link" , None ,  { "rel" : "self" , "href" : self . feed [ 'feed_url' ] } )
Original: call the method handler . addQuickElement with 3 arguments: string ' atom:link ' , None and dictionary with 2 entries: ' self ' for ' rel ' , value under the ' feed_url ' key of the self . feed dictionary for ' href ' .
Translation: call the method handler . addQuickElement with 0 arguments : string " _UNK ' , a list containing a string , handlers and string containing a list : for ' title ' , for self . label and "
BLEU = 17.27 (Bravity Penalty=0.836, Length ratio=0.848, Translated length=39, Reference length=46)
  1-gram: 46.2 
  2-gram: 26.3 
  3-gram:13.5 
  4-gram: 11.1 

Code line 351:   if val is None :
Original: if val is None ,
Translation: if val is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 352:   return self . _fqdn
Original: return self . _fqdn .
Translation: return self . html_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 353:   os . _exit ( 1 )
Original: exit the program with the code integer 1 .
Translation: close the process with an argument 0 .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 354:    __contains__ = has_header
Original: substitute has_header for __contains__ .
Translation: substitute RadioFieldRenderer for oldroot .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 355:  gettext_module . GNUTranslations . __init__ ( self )
Original: call the method gettext_module . GNUTranslations . __init__ with an argument self .
Translation: call the method method . __init__ . __init__ with an argument self .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 356:    return obj
Original: return obj .
Translation: return obj .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 357:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 358:  visible_issue_count = 0
Original: visible_issue_count is an integer 0 .
Translation: TOKEN_VAR is integer 0 .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 359:   if inverse_match is not None :
Original: if inverse_match is not None ,
Translation: if min_length is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 360:                               out . write ( ' pgettext(%r, %r) ' % (  message_context ,  join_tokens ( singular , trimmed ) ) )
Original: substitute ' %r ' in string ' pgettext ( %r , %r ) ' with message_context and result of the function join_tokens , called with 2 arguments: singular and trimmed , write the result to out .
Translation: call the function force_text with 0 arguments : result of the function %r ( formated with 0 arguments : s , %d and string " formated with s , s and errors .
BLEU = 8.67 (Bravity Penalty=0.886, Length ratio=0.892, Translated length=33, Reference length=37)
  1-gram: 45.5 
  2-gram: 9.4 
  3-gram:6.5 
  4-gram: 3.3 

Code line 361:   thefile = '%s.py' % self . file
Original: convert self . file to string and append string ' . py ' to it , substitute the result for thefile .
Translation: convert self . file and append string . .
BLEU = 10.84 (Bravity Penalty=0.236, Length ratio=0.409, Translated length=9, Reference length=22)
  1-gram: 100.0 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 362:     except StopUpload as e :
Original: if StopUpload , renamed to e , exception is caught ,
Translation: if OSError , renamed to e , exception is caught ,
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 363:  return self . _open ( name , mode )
Original: call the self . _open method with name and mode arguments , return the result .
Translation: call the method self . _UNK with arguments name and name , return the result
BLEU = 24.57 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 86.7 
  2-gram: 42.9 
  3-gram:15.4 
  4-gram: 8.3 

Code line 364:   except IndexError :
Original: if IndexError exception is caught ,
Translation: if IndexError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 365:    def write ( self , outfile , encoding ) :
Original: define the method write with 3 arguments self , outfile and encoding .
Translation: define the method write with 0 arguments : self , outfile and encoding .
BLEU = 62.98 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 85.7 
  2-gram: 69.2 
  3-gram:58.3 
  4-gram: 45.5 

Code line 366:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 367:               if hasattr ( handler , 'file' ) :
Original: if handler has an attribute ' file ' ,
Translation: if file has an attribute ' add_arguments ' ,
BLEU = 38.14 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 16.7 

Code line 368:  for i in range ( len ( result ) ) :
Original: for every i in range of integers from 0 to length of result , not included ,
Translation: for every i in result of method l , called with 0 arguments : i and i in result ,
BLEU = 15.77 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17)
  1-gram: 45.0 
  2-gram: 21.1 
  3-gram:11.1 
  4-gram: 5.9 

Code line 369:       pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 370:     if not self . use_ssl and self . use_tls :
Original: if self . use_ssl and self . use_tls are false ,
Translation: if self . username and self . can_import_settings are boolean False ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 0.0 

Code line 371:           raise ImproperlyConfigured (  "Calling modelformset_factory without defining 'fields' or "  "'exclude' explicitly is prohibited."  )
Original: raise an ImproperlyConfigured with an argument string " Calling modelformset_factory without defining ' fields ' or ' exclude ' , explicitly is prohibited . "
Translation: raise an ImproperlyConfigured exception with an argument string " _UNK ' _UNK ' is not _UNK or _UNK _UNK . " .
BLEU = 22.56 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=22, Reference length=25)
  1-gram: 63.6 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 10.5 

Code line 372:    @ encoding . setter
Original: encoding . setter decorator ,
Translation: upload_handlers . encoding .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 50.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 373:                    def wrapper ( * args , ** kwds ) :
Original: define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
Translation: define the function wrapper with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 54.24 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 75.0 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 38.5 

Code line 374:        def __init__ ( self , level , msg , hint = None , obj = None , id = None ) :
Original: define initialization method __init__ with self class instance , level , msg , hint defaulting to None , obj defaulting to None and if defaulting to None as arguments .
Translation: define the method __init__ with 0 arguments : self , instance , META set to None , make set to None , and set set to None .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=28, Reference length=30)
  1-gram: 67.9 
  2-gram: 25.9 
  3-gram:7.7 
  4-gram: 0.0 

Code line 375:  hidden_widget = SplitHiddenDateTimeWidget
Original: substitute SplitHiddenDateTimeWidget for hidden_widget .
Translation: substitute TemplateLoader for hidden_widget .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 376:    @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 377:  return result
Original: return result .
Translation: return result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 378:           source , display_name = self . load_template_source ( template_name , template_dirs )
Original: call the method self . load_template_source with arguments template_name and template_dirs , assign the result to source and display_name .
Translation: call the method self . _UNK with 0 arguments template_name and template_name , assign the result to root and root , respectively .
BLEU = 38.10 (Bravity Penalty=1.000, Length ratio=1.150, Translated length=23, Reference length=20)
  1-gram: 69.6 
  2-gram: 45.5 
  3-gram:33.3 
  4-gram: 20.0 

Code line 379:               return self . _callback
Original: return self . _callback .
Translation: return self . _callback .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 380:                   for filename in locale_filenames :
Original: for every filenam in locale_filenames ,
Translation: for every filename in filelist ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 381:           return locale [ : p ] . lower ( ) + '-' + locale [ p + 1 : ] . lower ( )
Original: convert fist p elements of locale to lowercase , append ' _ ' to it , covert to lowercase locale elements from ( p+1 ) -th index to the end , append it to the previous result , return it .
Translation: append elements of p , append elements of ' to ' _ ' , append it to the result of the list _ , append it to the list containing end index , append it to the result .
BLEU = 17.12 (Bravity Penalty=0.950, Length ratio=0.951, Translated length=39, Reference length=41)
  1-gram: 66.7 
  2-gram: 26.3 
  3-gram:10.8 
  4-gram: 5.6 

Code line 382:                   self . stream . close ( )
Original: call the self . stream . close function .
Translation: close the file self . stream .
BLEU = 34.19 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 85.7 
  2-gram: 50.0 
  3-gram:40.0 
  4-gram: 25.0 

Code line 383:  self . old_language = get_language ( )
Original: call the function get_language , substitute the result for self . old_language .
Translation: call the method self . next_token , substitute the result for self . _UNK .
BLEU = 45.47 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:38.5 
  4-gram: 33.3 

Code line 384:               raise value . with_traceback ( tb )
Original: raise an value . with_traceback exception with an argument tb .
Translation: raise an error exception with value .
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=7, Reference length=11)
  1-gram: 85.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 385:     def ugettext ( message ) :
Original: define the function ugettext with an argument message .
Translation: define the method ugettext with an argument message .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 50.0 

Code line 386:               return list ( self . iteritems ( ) )
Original: call the method self . iteritems , return the list of results .
Translation: call the method self . iteritems , return list of results .
BLEU = 76.77 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 100.0 
  2-gram: 90.9 
  3-gram:80.0 
  4-gram: 66.7 

Code line 387:  @ stringfilter
Original: decorator stringfilter ,
Translation: decorator stringfilter ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 388:               output = next ( self . _producer )
Original: get the next element of the self . _producer iterable , substitute it for output .
Translation: get the iterable self . object_list , substitute the result for output .
BLEU = 0.00 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16)
  1-gram: 84.6 
  2-gram: 41.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 389:               new_class . media = media_property ( new_class )
Original: call the method media_property with an argument new_class , substitute the result for new_class . media .
Translation: call the method new_class . _UNK , with attr as the new_class .
BLEU = 0.00 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17)
  1-gram: 76.9 
  2-gram: 25.0 
  3-gram:9.1 
  4-gram: 0.0 

Code line 390:   self . setlist ( key , default_list )
Original: call the method self . setlist with 2 arguments: key and default_list .
Translation: call the method self . validate_key with arguments key and default_list as arguments .
BLEU = 37.60 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 46.2 
  3-gram:33.3 
  4-gram: 18.2 

Code line 391:  if truncate_len == 0 :
Original: if truncate_len equals integer 0 .
Translation: if failures equals integer 0 ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 392:  t = super ( SafeText , self ) . __add__ ( rhs )
Original: call the __add__ method with an arguments rhs from the base class of the class SafeText , substitute the result for t .
Translation: call the method out with an argument data from the base class of the class TypedChoiceField , substitute the result for t .
BLEU = 56.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=23, Reference length=23)
  1-gram: 82.6 
  2-gram: 63.6 
  3-gram:47.6 
  4-gram: 40.0 

Code line 393:       if isinstance ( value , bytes ) :
Original: if value is an instance of bytes class ,
Translation: if value is an instance of Promise .
BLEU = 60.04 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 394:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 395:  contents = format_html ( '<label{0}>{1}</label>' , attrs , contents )
Original: call the function format_html with 3 arguments string ' <label { 0 } > { 1 } </label> ' , attrs and contents , substitute the result for contents .
Translation: call the function wit with 0 arguments : string ' endblock ' , ' for attrs and attrs , substitute the result for val .
BLEU = 20.93 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=25, Reference length=30)
  1-gram: 72.0 
  2-gram: 37.5 
  3-gram:17.4 
  4-gram: 9.1 

Code line 396:   return self . _errors
Original: return self . _errors .
Translation: return self . _errors .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 397:  self . content_length = content_length
Original: substitute content_length for self . content_length .
Translation: substitute content_length for self . _content_length .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 398:  from django . db . migrations . executor import MigrationExecutor
Original: from django . db . migrations . executor import MigrationExecutor into default name space .
Translation: from django . db . migrations . migrations import MigrationExecutor into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 399:  handler . startElement ( "channel" , self . root_attributes ( ) )
Original: call the method handler . startElement with 2 arguments: string " channel " and result of the method self . root_attributes .
Translation: call the method handler . startElement with 0 arguments : string " and string " _UNK " , result .
BLEU = 33.09 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 65.0 
  2-gram: 42.1 
  3-gram:27.8 
  4-gram: 23.5 

Code line 400:                   week_number = 52
Original: week_number is integer 52 .
Translation: week_number is integer 00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 401:  self . waiting_writers -= 1
Original: decrement self . waiting_writers by integer 1 ,
Translation: decrement self . active_readers by integer 0 ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 402:   len_values = len ( values )
Original: substitute length of values for len_values .
Translation: substitute length of filelist for extensions .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 403:   if config [ 'version' ] != 1 :
Original: if config dictionary value under ' version ' key is not equal to integer 1 ,
Translation: if value under the ' level ' key of config dictionary is not equal to integer 0 ,
BLEU = 29.91 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=18, Reference length=16)
  1-gram: 77.8 
  2-gram: 41.2 
  3-gram:18.8 
  4-gram: 13.3 

Code line 404:  if color_settings :
Original: if color_setting is True ,
Translation: if illegal_formatting is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 405:           addr = parseaddr ( force_text ( addr ) )
Original: call the parseaddr function with return value of the force_text with argument addr , as argument , substitute the result for addr .
Translation: call the function force_text with argument bytes and store result in the result .
BLEU = 0.00 (Bravity Penalty=0.526, Length ratio=0.609, Translated length=14, Reference length=23)
  1-gram: 64.3 
  2-gram: 30.8 
  3-gram:8.3 
  4-gram: 0.0 

Code line 406:                               self . stdout . write ( "    Processing %s.%s model\n" % ( app_name , model . _meta . object_name ) )
Original:  Processing %s . %s model\n " as argument , with all occurrences of ' %s ' replaced with , app_name and model . _meta . object_name , respectively .
Translation: replace %s . %s " in string " %s %s " with model . _meta . object_name and model . __name__ , respectively .
BLEU = 22.92 (Bravity Penalty=0.812, Length ratio=0.828, Translated length=24, Reference length=29)
  1-gram: 62.5 
  2-gram: 39.1 
  3-gram:27.3 
  4-gram: 9.5 

Code line 407:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 408:   except ValueError :
Original: if ValueError exception is caught ,
Translation: if ValueError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 409:           self . token = token
Original: substitute token for self . token .
Translation: substitute token for self . token .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 410:   if format not in _serializers :
Original: if format is not contained in _serializers ,
Translation: if format is not contained in _serializers ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 411:  import types
Original: import module types .
Translation: import module types .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 412:  if upto != start :
Original: if upto is not equal to start .
Translation: if start is not equal to upto ,
BLEU = 39.76 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 413:  return ( ret == 0 )
Original: if ret equals to integer 0 , return boolean True , otherwise return boolean False .
Translation: evaluate the function equals equal to integer 0 , return boolean True .
BLEU = 39.77 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16)
  1-gram: 69.2 
  2-gram: 50.0 
  3-gram:45.5 
  4-gram: 40.0 

Code line 414:                       yield meta_line
Original: yield meta_line as the result .
Translation: yield one .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 415:                       transfer_encoding = transfer_encoding [ 0 ] . strip ( )
Original: strip of the whitespaces first element of transfer_encoding , substitute the result for transfer_encoding .
Translation: get the first element of the first element of name , substitute it for c .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 62.5 
  2-gram: 26.7 
  3-gram:7.1 
  4-gram: 0.0 

Code line 416:               return ''
Original: return an empty string .
Translation: return an empty string ,
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 417:               raise CommandError ( "Error: %s" % message )
Original: raise an CommandError exception with an argument string " Error: %s " , with ' %s ' replaced by message .
Translation: raise CommandError CommandError with an argument string " : %s : %s " , where ' %s ' is replaced with app_label .
BLEU = 27.86 (Bravity Penalty=1.000, Length ratio=1.095, Translated length=23, Reference length=21)
  1-gram: 69.6 
  2-gram: 36.4 
  3-gram:23.8 
  4-gram: 10.0 

Code line 418:    if self . can_delete and self . _should_delete_form ( form ) :
Original: if self . can_delete is true and call to the method self . _should_delete_form with an argument form , evaluates to true ,
Translation: if self . can_delete is true and call to the method self . initial_form_count with an argument form evaluates to true ,
BLEU = 75.40 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 95.5 
  2-gram: 85.7 
  3-gram:75.0 
  4-gram: 63.2 

Code line 419:           if len ( self . dicts ) == 1 :
Original: if length of self . dicts is equal to an integer 1 ,
Translation: if length of self . sequence is integer 0 ,
BLEU = 32.73 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:37.5 
  4-gram: 28.6 

Code line 420:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 421:       from django . utils import translation
Original: from django . utils import translation into default name space .
Translation: from django . utils import translation into default namespace .
BLEU = 70.81 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:75.0 
  4-gram: 71.4 

Code line 422:    from logging import NullHandler
Original: from logging import NullHandler .
Translation: from logging import import .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 423:    sql . extend ( connection . creation . sql_for_pending_references ( model , no_style ( ) , pending_references ) )
Original: call the connection . creation . sql_for_pending_references method with refto , no_style ( ) and pending_references as arguments , use the result as the argument for the call to the sql . extend method .
Translation: call the method connection . creation . setdefault with 0 arguments : model and model , and extend list with the result of the function
BLEU = 9.99 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=25, Reference length=35)
  1-gram: 60.0 
  2-gram: 20.8 
  3-gram:8.7 
  4-gram: 4.5 

Code line 424:               messages . update ( getattr ( c , 'default_error_messages' , { } ) )
Original: get ' default_error_messages ' from the c object , if it doesnt exists return an empty dictionary , use the result as the argument for the call to the messages . update function .
Translation: get the dictionary cls . error_messages dictionary with definition dictionary , if it dictionary , if it doesnt at out .
BLEU = 8.27 (Bravity Penalty=0.538, Length ratio=0.618, Translated length=21, Reference length=34)
  1-gram: 47.6 
  2-gram: 20.0 
  3-gram:10.5 
  4-gram: 5.6 

Code line 425:      def to_language ( locale ) :
Original: define the function to_language with an argument locale .
Translation: define the function import_module with an argument locale .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 426:           encoding = self . encoding or settings . DEFAULT_CHARSET
Original: if self . encoding exists substitute it for encoding , if not substitute settings . DEFAULT_CHARSET for encoding .
Translation: if self . encoding exists substitute it for encoding .
BLEU = 39.12 (Bravity Penalty=0.407, Length ratio=0.526, Translated length=10, Reference length=19)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 85.7 

Code line 427:                           result . pop ( )
Original: remove the first element from result .
Translation: remove first element from result .
BLEU = 67.32 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 100.0 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 428:       def __init__ ( self , dirpath , file_name , locale_dir ) :
Original: define the method __init__ with 4 arguments: self , dirpath , file_name and locale_dir .
Translation: define the method __init__ with arguments self , regex , path and mimetype .
BLEU = 31.12 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 18.2 

Code line 429:       default_error_messages = {  'invalid' : _ ( 'Enter a number.' ) ,  'max_digits' : ungettext_lazy (  'Ensure that there are no more than %(max)s digit in total.' ,  'Ensure that there are no more than %(max)s digits in total.' ,  'max' ) ,  'max_decimal_places' : ungettext_lazy (  'Ensure that there are no more than %(max)s decimal place.' ,  'Ensure that there are no more than %(max)s decimal places.' ,  'max' ) ,  'max_whole_digits' : ungettext_lazy (  'Ensure that there are no more than %(max)s digit before the decimal point.' ,  'Ensure that there are no more than %(max)s digits before the decimal point.' ,  'max' ) ,  }
Original: default_error_messages is a dictionary with 4 initial entries: return value of the function _ called with string as an argument , ' Enter a number . ' for ' invalid ' , return value of the function ungettext_lazy called with 3 string arguments: ' Ensure that there are no more than % ( max ) s digit in total . ' , ' Ensure that there are no more than % ( max ) s digits in total . ' , and ' max ' for ' max_digits ' , return value of the function ungettext_lazy called with 3 string arguments: ' Ensure that there are no more than % ( max ) s decimal place . ' , ' Ensure that there are no more than % ( max ) s decimal places . ' and ' max ' , for ' max_decimal_places ' and return value of the function ungettext_lazy called with 3 string arguments: ' Ensure that there are no more than % ( max ) s digit before the decimal point . ' , ' Ensure that there are no more than % ( max ) s digits before the decimal point . ' and ' max ' for ' max_whole_digits ' .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.005, Translated length=1, Reference length=207)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 430:    if value != value or value in ( Decimal ( 'Inf' ) , Decimal ( '-Inf' ) ) :
Original: if value is Nan , or value is contained in return value of the Decimal called twice with string ' Inf ' and with string ' -Inf ' ,
Translation: if value is not equal to value or return value of the call to function called with an argument string ' _UNK ' and value is not equal to length ,
BLEU = 15.25 (Bravity Penalty=1.000, Length ratio=1.069, Translated length=31, Reference length=29)
  1-gram: 54.8 
  2-gram: 26.7 
  3-gram:10.3 
  4-gram: 3.6 

Code line 431:               try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 432:  import os
Original: import module os .
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 433:  for ch in input_iter :
Original: for every ch in input_iter ,
Translation: for every digit in locales ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 434:  return new_key
Original: return new_key .
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 435:  id_ = widget . attrs . get ( 'id' ) or self . auto_id
Original: get the value under the ' id ' key of the widget . attrs dictionary , if the key exists substitute it for id_ , if not , substitute self . auto_id for id_ .
Translation: get the value under the ' widget ' key of the attrs . attrs dictionary , if it , substitute it for id_ , if
BLEU = 42.36 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=25, Reference length=35)
  1-gram: 92.0 
  2-gram: 75.0 
  3-gram:56.5 
  4-gram: 40.9 

Code line 436:   return '%s...' % x [ : max ( 0 , limit - 3 ) ]
Original: return a string ' %s . . . ' formated with elements of x up to the index equal to the maximum value between integer 0 and 3 subtracted from limit .
Translation: return a string ' by 0 in last element of last . second element of last element of last . second element of ' , respectively .
BLEU = 9.08 (Bravity Penalty=0.831, Length ratio=0.844, Translated length=27, Reference length=32)
  1-gram: 37.0 
  2-gram: 11.5 
  3-gram:8.0 
  4-gram: 4.2 

Code line 437:   from django import http
Original: from django import http into default name space .
Translation: from django import import import into default name space .
BLEU = 52.54 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 80.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 28.6 

Code line 438:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 439:   self . lookups = tuple ( var . split ( VARIABLE_ATTRIBUTE_SEPARATOR ) )
Original: call the method var . split with an argument VARIABLE_ATTRIBUTE_SEPARATOR , convert the result to a tuple and substitute it for self . lookups .
Translation: call the function split with an argument split , substitute the result for self . extra_headers .
BLEU = 16.73 (Bravity Penalty=0.625, Length ratio=0.680, Translated length=17, Reference length=25)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:20.0 
  4-gram: 7.1 

Code line 440:  count2 = ( since - ( seconds * count ) ) // seconds2
Original: multiply seconds by count , subtract it from since , divide the result by seconds2 , store the floored result in count2 .
Translation: slice is an instance of Decimal created with integer length of result of delta . seconds function with an argument tt .
BLEU = 0.00 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 13.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 441:  if not settings . MANAGERS :
Original: if settings . MANAGERS does not exist ,
Translation: if settings . USE_I00N is true ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 57.1 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 442:    def register ( self , * tags ) :
Original: define the method register with self ans unpacked list tags as arguments .
Translation: define the method get_unique_error_message with arguments self and unpacked list migration .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 443:  super ( TemplateResponse , self ) . __init__ (  template , context , content_type , status )
Original: call the __init__ method from the base class of the class TemplateResponse , with 4 arguments: template , context , content_type , status .
Translation: call the method __init__ from the base class of the class , with 0 arguments : token , token , token and token .
BLEU = 31.65 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 66.7 
  2-gram: 34.8 
  3-gram:22.7 
  4-gram: 19.0 

Code line 444:  if fd . isatty ( ) :
Original: evaluate the fd . isatty method , if the result is true ,
Translation: call the method x . text_type ,
BLEU = 0.00 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=7, Reference length=13)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 445:  str_number = six . text_type ( number )
Original: call the function six . text_type with an argument number , substitute the result for str_number .
Translation: call the function six . text_type with an argument offset .
BLEU = 46.78 (Bravity Penalty=0.580, Length ratio=0.647, Translated length=11, Reference length=17)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 446:   return super ( PasswordInput , self ) . render ( name , value , attrs )
Original: call the method render from the base class of the class PasswordInput , called with 3 arguments: name , value and attrs , return the result .
Translation: call the method render from the base class of the class class , called with 0 arguments : name , value and attrs .
BLEU = 56.08 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=24, Reference length=27)
  1-gram: 83.3 
  2-gram: 69.6 
  3-gram:59.1 
  4-gram: 47.6 

Code line 447:    if field_type == 'DecimalField' :
Original: if field_type equals a string ' DecimalField ' ,
Translation: if field_type equals a string ' endcomment ' ,
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 50.0 

Code line 448:           return False
Original: return boolean False .
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 449:   return Truncator ( value ) . words ( length , html = True , truncate = ' ...' )
Original: instantiate class Truncator , with an argument value , call the method words on the result with 3 arguments length , html set to boolean True and truncate set to string ' . . . ' , return the result .
Translation: call the function escape with 0 arguments : return value of the function call to function with 0 arguments : nodelist , and length of the function nodelist . encode called , and encoding .
BLEU = 0.00 (Bravity Penalty=0.842, Length ratio=0.854, Translated length=35, Reference length=41)
  1-gram: 45.7 
  2-gram: 2.9 
  3-gram:0.0 
  4-gram: 0.0 

Code line 450:               if ( self . validate_max and  self . total_form_count ( ) - len ( self . deleted_forms ) > self . max_num ) or self . management_form . cleaned_data [ TOTAL_FORM_COUNT ] > self . absolute_max :
Original: if self . validate_max is true , and length of self . deleted_forms subtracted from the return value of the method self . total_form_count , is greater than self . max_num , or if value under the TOTAL_FORM_COUNT key of the self . management_form . cleaned_data dictionary , is grater than self . absolute_max ,
Translation: if self . __iter__ is true and equal is grater or equal . blocks , and self . var is greater than length of self . blocks is not equal to integer 0 ,
BLEU = 9.15 (Bravity Penalty=0.539, Length ratio=0.618, Translated length=34, Reference length=55)
  1-gram: 61.8 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 3.2 

Code line 451:   return patterns
Original: return patterns .
Translation: return extra_classes .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 452:                       for f in files :
Original: for every f in files ,
Translation: for every f in files ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 453:    def get_text_list ( list_ , last_word = ugettext_lazy ( 'or' ) ) :
Original: define the function get_text_list with 2 arguments: list_ and last_word set to result of the function ugettext_lazy called with an argument string ' or ' .
Translation: define the function force_bytes with 0 arguments : safe and safe set to a string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.692, Length ratio=0.731, Translated length=19, Reference length=26)
  1-gram: 57.9 
  2-gram: 27.8 
  3-gram:5.9 
  4-gram: 0.0 

Code line 454:   return r
Original: return r .
Translation: return r .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 455:   except Exception :
Original: if Exception exception is caught ,
Translation: if Exception exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 456:  widget = self . field . widget
Original: substitute self . field . widget for widget .
Translation: substitute self . field . widget for widget .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 457:    def _setup ( self ) :
Original: define the method _setup with an argument self .
Translation: define the method _setup with argument self .
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 40.0 

Code line 458:  self . value = value
Original: substitute value for self . value .
Translation: substitute value for self . value .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 459:                       help_text = help_text_html % force_text ( field . help_text )
Original: call the function force_text with an argument field . help_text , format help_text_html with it , substitute the result for help_text .
Translation: call the function force_text with an argument settings . _UNK , use the result is an argument .
BLEU = 31.14 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=18, Reference length=22)
  1-gram: 66.7 
  2-gram: 41.2 
  3-gram:31.2 
  4-gram: 26.7 

Code line 460:           if value :
Original: if value is true ,
Translation: if value is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 461:    class Command ( BaseCommand ) :
Original: derive the class Command from the BaseCommand class .
Translation: derive the class Command from the BaseCommand class .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 462:    def _existing_object ( self , pk ) :
Original: define the method _existing_object with 2 arguments: self and pk .
Translation: define the method _UNK with 0 arguments self and f .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 63.6 
  2-gram: 30.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 463:   return self . _get_page ( self . object_list [ bottom : top ] , number , self )
Original: call the self . _get_pages method with 3 arguments: self . object_list from the bottom to the top index , number and self , return the result .
Translation: call the method self . _UNK with 0 arguments : self . argv , unpacked list containing 0 elements : unpacked index and unpacked dictionary
BLEU = 0.00 (Bravity Penalty=0.887, Length ratio=0.893, Translated length=25, Reference length=28)
  1-gram: 44.0 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 464:     initial_value = initial if initial is not None else ''
Original: substitute initial for initial_value , if initial is not None , if not , initial_value is an empty string .
Translation: if initial is not None , substitute initial for initial , otherwise otherwise is an empty string .
BLEU = 48.99 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=18, Reference length=20)
  1-gram: 83.3 
  2-gram: 64.7 
  3-gram:50.0 
  4-gram: 33.3 

Code line 465:  message = _ ( 'Ensure this value is greater than or equal to %(limit_value)s.' )
Original: call the function _ with an argument string ' Ensure this value is greater than or equal to % ( limit_value ) s . ' , substitute the result for message .
Translation: call the function _ with an argument string ' % this value is not equal than or or equal to s . " , substitute the result for value .
BLEU = 47.36 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=30, Reference length=32)
  1-gram: 83.3 
  2-gram: 62.1 
  3-gram:42.9 
  4-gram: 29.6 

Code line 466:    saved_instances = [ ]
Original: saved_instances is an empty list .
Translation: field_notes is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 467:  new_method_name = renamed_method [ 1 ]
Original: substitute second element of renamed_method for new_method_name .
Translation: substitute third element of renamed_method for function_name .
BLEU = 38.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 468:  GB = 1 << 30
Original: move integer 1 left for 30 bits , substitute the result for GB .
Translation: move integer 0 for 00 .
BLEU = 0.00 (Bravity Penalty=0.264, Length ratio=0.429, Translated length=6, Reference length=14)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 469:    def render ( self , context ) :
Original: define the method render with 2 arguments: self and context .
Translation: define the method render with 0 arguments : self and context .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 470:  self . base = base
Original: substitute base for self . base .
Translation: substitute base for self . base .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 471:     def is_valid_path ( path , urlconf = None ) :
Original: define the function is_valid_path with arguments path and urlconf set to None .
Translation: define the function _UNK with 0 arguments path and path set to None .
BLEU = 33.65 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 78.6 
  2-gram: 53.8 
  3-gram:33.3 
  4-gram: 9.1 

Code line 472:   table2model = lambda table_name : re . sub ( r'[^a-zA-Z0-9]' , '' , table_name . title ( ) )
Original: table2model is a lambda function with an argument table_name , return value is the return value of the re . sub method , called with 3 arguments: raw string ' [ ^a-zA-Z0-9 ] ' , empty string and result of the method table_name . title .
Translation: pythonrc is a lambda function with 0 arguments : return value . _UNK , return value is a result with a string ' _UNK ' , and result .
BLEU = 15.35 (Bravity Penalty=0.556, Length ratio=0.630, Translated length=29, Reference length=46)
  1-gram: 69.0 
  2-gram: 39.3 
  3-gram:18.5 
  4-gram: 11.5 

Code line 473:    except SystemExit :
Original: if SystemExit exception is caught ,
Translation: if _UNK exception is caught ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 474:  continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 475:   if hasattr ( decorator , '__name__' ) :
Original: if decorator has an attribute ' process_view ' ,
Translation: if __name__ has an attribute ' __name__ ' .
BLEU = 33.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 476:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 477:   from django . core . management . base import AppCommand
Original: from django . core . management . base import AppCommand into default name space .
Translation: from django . core . management . base import AppCommand into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 478:               rawdata = self . rawdata
Original: substitute self . rawdata for rawdata .
Translation: substitute self . rawdata for rawdata .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 479:   nodelist = parser . parse ( ( 'endautoescape' , ) )
Original: call the method parser . parse with an argument tuple with an element string ' endautoescape ' , substitute the result for nodelist .
Translation: call the method parser . parse with an argument tuple with an element string ' _UNK ' , substitute the result for nodelist .
BLEU = 88.44 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 95.8 
  2-gram: 91.3 
  3-gram:86.4 
  4-gram: 81.0 

Code line 480:     def _add_fallback ( self ) :
Original: define the method _add_fallback with an argument self .
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 481:           return self
Original: return self .
Translation: return self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 482:   i += 1
Original: increment i by integer 1 ,
Translation: increment i by 0 .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 60.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 483:  ns = "http://www.w3.org/2005/Atom"
Original: ns is a string " http://www . w3 . org/2005/Atom " .
Translation: groupid is a string " _UNK . _UNK " .
BLEU = 26.58 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 14.3 

Code line 484:  for form in valid_forms :
Original: for every form in valid_forms ,
Translation: for every form in valid_forms ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 485:   return super ( BaseInlineFormSet , self ) . initial_form_count ( )
Original: call the method initial_form_count from the base class of the class BaseInlineFormSet , return the result .
Translation: call the method __init__ from the base class of the class BaseInlineFormSet , with an argument date .
BLEU = 53.99 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 72.2 
  2-gram: 58.8 
  3-gram:50.0 
  4-gram: 40.0 

Code line 486:           self . close ( )
Original: call the method self . close .
Translation: call the method self . close .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 487:    def _itervalues ( self ) :
Original: define the method _itervalues with an argument self .
Translation: define the method _itervalues with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 488:  def removetags ( value , tags ) :
Original: define the function removetags with 2 arguments value and arg .
Translation: define the function _UNK with 0 arguments value and value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 72.7 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 489:               self . instance . validate_unique ( exclude = exclude )
Original: call the method self . instance . validate_unique with an argument exclude set to exclude .
Translation: call the method self . instance . exclude with an argument exclude set to exclude .
BLEU = 81.54 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 93.8 
  2-gram: 86.7 
  3-gram:78.6 
  4-gram: 69.2 

Code line 490:  return mark_for_escaping ( value )
Original: call the function mark_for_escaping with an argument value , return the result .
Translation: call the function avoid_wrapping with an argument value , return the result .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 491:  for path in paths :
Original: for every path in paths ,
Translation: for every path in paths ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 492:   return cache_key
Original: return cache_key .
Translation: return maybe .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 493:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 494:  list_ = [ bytes_to_text ( elt , self . encoding ) for elt in list_ ]
Original: for every elt in list_ call the method bytes_to_text with 2 argument: elt and self . encoding , append the result into a list , substitute the resulting list for list_ .
Translation: call the method force_text with 0 arguments : self . label and results , substitute the result for v . label and label , for
BLEU = 0.00 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:8.7 
  4-gram: 0.0 

Code line 495:   if exclude is not None :
Original: if exclude is not None ,
Translation: if exclude is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 496:           return self . content
Original: return self . content
Translation: return self . content .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 497:   if settings . DEBUG :
Original: if settings . DEBUG is True ,
Translation: if settings . DEBUG is true ,
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 498:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 499:   self . xml . startElement ( "object" , { } )
Original: call the method self . xml . startElement with argument string ' object ' and an empty dictionary .
Translation: call the method self . xml . startElement with arguments string ' natural ' and an empty dictionary .
BLEU = 70.94 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:64.7 
  4-gram: 56.2 

Code line 500:              if iri is None :
Original: if iri is not initialized ,
Translation: if slots is None ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 501:    self . can_read . acquire ( )
Original: call the method self . can_read . acquire .
Translation: call the method self . _UNK . _UNK .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 502:     class MovedAttribute ( _LazyDescr ) :
Original: derive class MovedAttribute from the _LazyDescr base class .
Translation: derive class CacheEntry from the base class object .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 503:           value = list . pop ( self , idx )
Original: remove idx-th element from self list .
Translation: remove first element of list under self . find_template_cache and value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.714, Translated length=12, Reference length=7)
  1-gram: 41.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 504:   if ttl is not None :
Original: if ttl is not None ,
Translation: if ttl is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 505:  result = [ ]
Original: result is an empty list .
Translation: result is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 506:           if code_changed ( ) :
Original: if return value of the code_changed function is true ,
Translation: if _UNK is a boolean True ,
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 507:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 508:    CONTEXT_SEPARATOR = "\x04"
Original: CONTEXT_SEPARATOR is a string " \x04 " .
Translation: _func_globals is a string " _UNK " .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 509:  if filters :
Original: if filters is true ,
Translation: if filters is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 510:     def save_m2m ( ) :
Original: define the function save_m2m .
Translation: define the function input .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 511:   except IndexError :
Original: if IndexError exception is caught ,
Translation: if IndexError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 512:  settingsfile = upath ( sys . modules [ settings . __module__ ] . __file__ )
Original: get the value under the settings . __module__ key of the sys . modules dictionary , use its __file__ field as an argument for the call to the function upath , substitute the result for settingsfile .
Translation: call the function _UNK with an argument settings . _UNK as value of the settings . _UNK _UNK , substitute the result for level .
BLEU = 15.82 (Bravity Penalty=0.619, Length ratio=0.676, Translated length=25, Reference length=37)
  1-gram: 72.0 
  2-gram: 37.5 
  3-gram:17.4 
  4-gram: 9.1 

Code line 513:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 514:    except :
Original: otherwise if any other exception is caught ,
Translation: if an exception occurred ,
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 515:           self . fed . append ( d )
Original: append d to self . fed .
Translation: append self . fed to app_dirs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 516:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 517:                       value = field . to_python ( getInnerText ( field_node ) . strip ( ) )
Original: call the function getInnerText with argument field_node , on the result call the method strip , use the result as an argument for the call to the field . to_python method , substitute the result for value .
Translation: call the function to_python . strip with argument value , strip the result of the function date , strip an argument equal .
BLEU = 0.00 (Bravity Penalty=0.521, Length ratio=0.605, Translated length=23, Reference length=38)
  1-gram: 73.9 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 518:   value = '%s %s' % tuple ( value )
Original: substitute ' %s ' in string ' %s %s ' with the elements of value converted into a tuple , substitute the result for value .
Translation: convert value into a string , %s ' , substitute the result for value .
BLEU = 24.11 (Bravity Penalty=0.480, Length ratio=0.577, Translated length=15, Reference length=26)
  1-gram: 86.7 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 33.3 

Code line 519:      class EndToken ( TokenBase ) :
Original: derive the class EndToken from the TokenBase base class .
Translation: derive the class MinLengthValidator from the base class BaseTemporalField class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 520:   except KeyError :
Original: if KeyError exception is caught ,
Translation: except KeyError exception is caught ,
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 521:  if settings . USE_TZ :
Original: if settings . USE_TZ is true ,
Translation: if settings . USE_TZ is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 522:      from django . utils import translation
Original: from django . utils import translation into default namespace .
Translation: from django . utils import translation into default namespace .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 523:   def save_m2m ( ) :
Original: define the function save_m2m .
Translation: define the function input .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 524:           value = datetime_safe . new_date ( value )
Original: call the method datetime_safe . new_date with an argument value , substitute the result for value .
Translation: call the method datetime_safe . as_tuple with an argument value , substitute the result for
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 525:    def hidden_fields ( self ) :
Original: define the method hidden_fields with an argument self .
Translation: define the method initial_form_count with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 526:                   return True
Original: return boolean True .
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 527:    def copy ( self ) :
Original: define the method copy with an argument self .
Translation: define the method copy with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 528:  self . validate_key ( key )
Original: call the method self . validate_key with argument key .
Translation: call the method self . validate_key with argument key .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 529:     id = "literal"
Original: id is a string " literal " .
Translation: label is a string " " " .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 530:    def get_templatetags_modules ( ) :
Original: define the function get_templatetags_modules .
Translation: define the function _generator .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 531:                return dec
Original: return dec .
Translation: return dec .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 532:    def rfc2822_date ( date ) :
Original: define the function rfc2822_date with an argument date .
Translation: define the function parse_http_date with an argument date .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 533:     @ register . tag ( 'include' )
Original: decorator method register . tag with an argument ' include ' ,
Translation: register . tag decorator function with an argument ' if ' ,
BLEU = 35.08 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 54.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 534:  self . exclude = getattr ( options , 'exclude' , None )
Original: get ' exclude ' attribute from the options object , if it exists substitute it for self . exclude , if not self . exclude is None .
Translation: get the value under the ' exclude ' attribute of the options exists , if it exists substitute it for self . error_messages , if
BLEU = 41.63 (Bravity Penalty=0.887, Length ratio=0.893, Translated length=25, Reference length=28)
  1-gram: 72.0 
  2-gram: 54.2 
  3-gram:39.1 
  4-gram: 31.8 

Code line 535:   from django . conf import settings
Original: from django . conf import settings object to the default name space .
Translation: from django . conf import settings into default name space .
BLEU = 58.50 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 536:  self . pointer = i
Original: substitute i for self . pointer .
Translation: substitute i for self . pointer .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 537:                   field_notes . append (  'max_digits and decimal_places have been guessed, as this '  'database handles decimal fields as float' )
Original: append string ' max_digits and decimal_places have been guessed , as this database handles decimal fields as float ' to field_notes .
Translation: append a string ' _UNK ' and _UNK ' is a _UNK with _UNK : string ' _ ' and field_notes of e to a list , separated of the resulting list , extend the list with msg .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.773, Translated length=39, Reference length=22)
  1-gram: 23.1 
  2-gram: 2.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 538:  if hasattr ( file_or_path , 'read' ) :
Original: if file_or_path has an attribute ' read ' ,
Translation: if middleware has an attribute ' utime ' ,
BLEU = 36.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 16.7 

Code line 539:   return { 'csrf_token' : _get_val ( ) }
Original: return an dictionary containing 1 entry: return value of the function _get_val for ' csrf_token ' .
Translation: return a dictionary containing 0 initial : elements for ' MultiValueDict ' , return an empty string .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 50.0 
  2-gram: 17.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 540:     def decorator_from_middleware_with_args ( middleware_class ) :
Original: define the function decorator_from_middleware_with_args with an argument middleware_class .
Translation: define the function _UNK with an argument middleware_class .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 541:     def clean ( self , value ) :
Original: define the method clean with arguments self and value .
Translation: define the method clean with arguments self and value .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 542:  return line
Original: return line .
Translation: return line .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 543:      class NumberInput ( TextInput ) :
Original: derive the class NumberInput from the TextInput base class .
Translation: derive the class TextInput from the TextInput base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 544:    @ classmethod
Original: decorator classmethod .
Translation: classmethod classmethod ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 545:    def tzname ( self , dt ) :
Original: define the method tzname with 2 arguments self and dt .
Translation: define the method tzname with 0 arguments : self and dt .
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 546:    def G ( self ) :
Original: define the method G with an argument self .
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 547:  output_transaction = False
Original: output_transaction is boolean False .
Translation: output_transaction is boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 548:                       continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 549:  return force_str ( '<%s\npath:%s,\nGET:%s,\nPOST:%s,\nCOOKIES:%s,\nMETA:%s>' %  ( request . __class__ . __name__ ,  path ,  six . text_type ( get ) ,  six . text_type ( post ) ,  six . text_type ( cookies ) ,  six . text_type ( meta ) ) )
Original: call the function force_str with an argument string ' <%s\npath:%s , \nGET:%s , \nPOST:%s , \nCOOKIES:%s , \nMETA:%s> ' , where ' %s ' is replaced with request . __class__ . __name__ , path , return value of the function six . text_type called with an argument get , return value of the function six . text_type called with an argument post , return value of the function six . text_type , called with an argument cookies and return value of the function six . text_type called with an argument meta .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.011, Translated length=1, Reference length=92)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 550:               self . nodelist_empty = nodelist_empty
Original: substitute nodelist_empty for self . nodelist_empty .
Translation: substitute boundary for self . nodelist_empty .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 551:       def __init__ ( self , name , nodelist , parent = None ) :
Original: define the method __init__ with 4 arguments: self , name , nodelist , parent set to None .
Translation: define the method __init__ with 0 arguments : self , name , value and nodelist .
BLEU = 35.59 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18)
  1-gram: 68.8 
  2-gram: 46.7 
  3-gram:35.7 
  4-gram: 23.1 

Code line 552:    default = 'DEFAULT'
Original: default is a string ' DEFAULT ' .
Translation: code is a string ' _UNK ' .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 553:           raise ValueError ( "Invalid timezone: %r" % timezone )
Original: raise an ValueError with an argument string " Invalid timezone: %r " , substitute ' %r ' with timezone .
Translation: raise an ValueError exception with an argument string " %r : %r : %s " , where ' %s ' is replaced with name .
BLEU = 23.31 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=25, Reference length=20)
  1-gram: 64.0 
  2-gram: 29.2 
  3-gram:17.4 
  4-gram: 9.1 

Code line 554:   except StandardError as e :
Original: if StandardError , renamed to e , exception is caught ,
Translation: if StandardError , renamed to e , exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 555:               return self . file . close ( )
Original: call the self . file . close method , return the result .
Translation: call the method self . file . close .
BLEU = 35.05 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13)
  1-gram: 100.0 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 556:  serializers = { }
Original: serializers is an empty dictionary .
Translation: guid_attrs is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 557:  if not m :
Original: if m is not False , None is considered False ,
Translation: if m is false ,
BLEU = 0.00 (Bravity Penalty=0.301, Length ratio=0.455, Translated length=5, Reference length=11)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 558:                   defaults [ 'initial' ] = self . initial [ i ]
Original: substitute i-th element of self . initial for value under the ' initial ' key of the defaults dictionary .
Translation: substitute i-th element of i-th element for value under the ' ns ' key of the state dictionary .
BLEU = 44.79 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 78.9 
  2-gram: 61.1 
  3-gram:41.2 
  4-gram: 25.0 

Code line 559:               categories = [ force_text ( c ) for c in categories ]
Original: categories is a list containing the results of the function force_text , called with an argument c , for every c in categories .
Translation: for every function out with return value of the function force_text , called with an argument c , for every c in paths .
BLEU = 60.84 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 66.7 
  2-gram: 60.9 
  3-gram:59.1 
  4-gram: 57.1 

Code line 560:  if not templatetags_modules :
Original: if templatetags_modules is false ,
Translation: if model_identifier is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 561:                           obj_pk = obj_pk . pk
Original: substitute obj_pk . pk for obj_pk .
Translation: substitute pk . pk for pk .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 562:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 563:  def do_if ( parser , token ) :
Original: define the function do_if with 2 arguments: parser and token .
Translation: define the function _UNK with 0 arguments : parser and token .
BLEU = 31.70 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 564:           arg = ',' + arg
Original: append arg to ' , ' , substitute the result for arg .
Translation: append arg to strings arg as an empty string .
BLEU = 0.00 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13)
  1-gram: 50.0 
  2-gram: 22.2 
  3-gram:12.5 
  4-gram: 0.0 

Code line 565:               return _ ( 'p.m.' )
Original: call the function _ with an argument string ' p . m . ' , return the result .
Translation: call the function _ with an argument string ' . ' , return the result .
BLEU = 73.43 (Bravity Penalty=0.829, Length ratio=0.842, Translated length=16, Reference length=19)
  1-gram: 100.0 
  2-gram: 93.3 
  3-gram:85.7 
  4-gram: 76.9 

Code line 566:  date_data = ( date . year , date . month , date . day )
Original: date_data is a tuple with 3 elements: date . year , date . month and date . day .
Translation: call the function year with 0 arguments : date . year and year . year , substitute the result for datetime .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.158, Translated length=22, Reference length=19)
  1-gram: 36.4 
  2-gram: 14.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 567:  if os . path . exists ( old_app_dir ) :
Original: if file path old_app_dir exists ,
Translation: if file sql_file exists ,
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 568:   except IndexError :
Original: if IndexError exception is caught ,
Translation: if IndexError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 569:  from django . utils import six
Original: from django . utils import six into default name space .
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 570:   if dec_part :
Original: if dec_part is true ,
Translation: if sequence_sql is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 571:  CRITICAL = 50
Original: CRITICAL is integer 50 .
Translation: next is integer 00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 572:    return result
Original: return result .
Translation: return result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 573:   except Resolver404 :
Original: if Resolver404 exception is caught ,
Translation: except SkipFile exception is caught ,
BLEU = 50.81 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 574:    @ register ( Tags . compatibility )
Original: decorator register with argument Tags . compatibility .
Translation: decorator register with argument Tags . register .
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 575:           if not os . path . exists ( self . _dir ) :
Original: if self . _dir path doesnt exists ,
Translation: if self . file file does not directory ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 44.4 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 576:      FILE_INPUT_CONTRADICTION = object ( )
Original: FILE_INPUT_CONTRADICTION is an instance of object class .
Translation: iterator is an instance of class class .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 577:  def needs_multipart_form ( self ) :
Original: define the method needs_multipart_form with an argument self .
Translation: define the method __repr__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 578:  if app_config . label in loader . migrated_apps :
Original: if app_config . label is contained in loader . migrated_apps ,
Translation: if app_config . label is contained in app_config .
BLEU = 60.11 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 579:     if os . name == 'nt' :
Original: if os . name equals to ' nt ' ,
Translation: if module os . name equals string ' nt ' ,
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 580:               params = conf . copy ( )
Original: call the function conf . copy , substitute it for params .
Translation: call the method copy . copy , substitute the result for lib .
BLEU = 24.71 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 61.5 
  2-gram: 33.3 
  3-gram:18.2 
  4-gram: 10.0 

Code line 581:               return template_name
Original: return template_name .
Translation: return template_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 582:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 583:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 584:  options = [ opt for opt in options if opt [ 0 ] not in prev_opts ]
Original: for every opt in options , if first element of opt is not contained in prev_opts , append opt to the list , substitute it for options .
Translation: if options to options in options under the options key is not zero , for every index is true .
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=20, Reference length=28)
  1-gram: 60.0 
  2-gram: 15.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 585:  continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 586:  self . value = set ( force_text ( v ) for v in self . value )
Original: for every v in self . value call the function force_text with an argument v , add the result to a set , substitute set of the results for self . value .
Translation: for every value of self . errors created with value is a value of the method smart_text with self . instance .
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=22, Reference length=33)
  1-gram: 59.1 
  2-gram: 19.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 587:               p = i
Original: substitute i for p .
Translation: substitute i for p .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 588:           self . _current = { }
Original: self . current is an empty dictionary .
Translation: self . find_template_cache is an empty dictionary .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 589:           current_timezone = timezone . get_current_timezone ( )
Original: call the method timezone . get_current_timezone , substitute the result for current_timezone .
Translation: call the function timezone . get_current_timezone , substitute the result for current_timezone .
BLEU = 79.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 70.0 

Code line 590:     @ register . filter ( is_safe = True )
Original: decorator function register . filter with an argument is_safe set to boolean True .
Translation: decorator function register . filter with an argument is_safe set to boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 591:  self . password = settings . EMAIL_HOST_PASSWORD if password is None else password
Original: if password is None substitute settings . EMAIL_HOST_PASSWORD for self . username , if not substitute password for self . password .
Translation: if settings . username is None substitute self . META for request .
BLEU = 0.00 (Bravity Penalty=0.500, Length ratio=0.591, Translated length=13, Reference length=22)
  1-gram: 84.6 
  2-gram: 41.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 592:   if _default is None :
Original: if _default is None ,
Translation: if _default is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 593:    class Command ( AppCommand ) :
Original: derive the class Command from the AppCommand base class .
Translation: derive the class Command from the AppCommand base class .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 594:   except ( ValueError , TypeError ) :
Original: if exception ValueError or TypeError is raised ,
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 50.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 595:  from importlib import import_module
Original: from importlib import import_module into default name space .
Translation: from importlib import import_module .
BLEU = 31.77 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 596:           return self . size
Original: return self . size .
Translation: return self . size .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 597:                   args . append ( parser . compile_filter ( value ) )
Original: call the method parser . compile_filter with an argument value , append the result to args .
Translation: call the method parser . compile_filter with an argument args , append the result to args .
BLEU = 82.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 94.1 
  2-gram: 87.5 
  3-gram:80.0 
  4-gram: 71.4 

Code line 598:       return b64_encode ( salted_hmac ( salt , value , key ) . digest ( ) )
Original: call the salted_hmac with 3 arguments: salt , value and key , call the digest method on the result , use the result as an argument for the call to the b64_encode function , return the result .
Translation: return _UNK instance of the _UNK class created created with 0 arguments : value , key and unpacked dictionary d .
BLEU = 0.00 (Bravity Penalty=0.445, Length ratio=0.553, Translated length=21, Reference length=38)
  1-gram: 38.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 599:    __all__ = ( 'BaseForm' , 'Form' )
Original: __all__is an tuple with 2 elements: strings ' BaseForm ' and ' Form ' .
Translation: __all__ is a tuple containing strings ' Meta ' , ' Meta ' .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 50.0 
  2-gram: 15.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 600:    def __repr__ ( self ) :
Original: define the method __repr__ with an argument self .
Translation: define the method __repr__ with argument self .
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 40.0 

Code line 601:           os . remove ( symlink_path )
Original: remove symlink_path file .
Translation: call the os . unlink function with argument os .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.500, Translated length=10, Reference length=4)
  1-gram: 10.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 602:           super ( EntitiesForbidden , self ) . __init__ ( )
Original: call the method __init__ from the base class of the EntitiesForbidden class .
Translation: call the method __init__ from the base class of the base class .
BLEU = 79.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 70.0 

Code line 603:                       self . empty_variable ( token )
Original: call the method self . empty_variable with an argument token ,
Translation: call the method self . _UNK with an argument token .
BLEU = 58.77 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 37.5 

Code line 604:   from __future__ import unicode_literals
Original: from __future__ import unicode_literals into default name space .
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 605:                   if field_value is not None :
Original: if field_value is not None ,
Translation: if input_formats is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 606:   def __init__ ( self , required = True , widget = None , label = None , initial = None ,  help_text = '' , error_messages = None , show_hidden_initial = False ,  validators = [ ] , localize = False , label_suffix = None ) :
Original: define the function __init__ with 11 arguments: self , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , error_messages set to None , show_hidden_initial set to boolean False , validators is an empty , localize set to boolean False , label_suffix set to None .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.016, Translated length=1, Reference length=64)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 607:           raise ValueError ( "Base36 input too large" )
Original: raise an ValueError exception with an argument string " Base36 input too large " .
Translation: raise an ValueError exception with an argument string " input input input " .
BLEU = 61.37 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 85.7 
  2-gram: 69.2 
  3-gram:58.3 
  4-gram: 54.5 

Code line 608:      def parse_etags ( etag_str ) :
Original: define the function parse_etags with an argument etag_str .
Translation: define the function _UNK with an argument model .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 609:           self . conditions_nodelists = conditions_nodelists
Original: substitute conditions_nodelists for self . conditions_nodelists .
Translation: substitute handler for self . _queryset .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 610:   except InputStreamExhausted :
Original: if InputStreamExhausted exception is caught ,
Translation: if exception exception is caught ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 611:                           if hasattr ( value , '__iter__' ) and not isinstance ( value , six . text_type ) :
Original: if value has an attribute ' __iter__ ' and value is not an instance of six . text_type ,
Translation: if value has an attribute ' __iter__ ' and value is not an instance of six . text_type class ,
BLEU = 90.36 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 95.0 
  2-gram: 89.5 
  3-gram:88.9 
  4-gram: 88.2 

Code line 612:   import os
Original: import module os .
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 613:                   domain_part = domain_part . encode ( 'idna' ) . decode ( 'ascii' )
Original: call the method domain_part . encode with an argument string ' idna ' , on the return value call the decode method with string ' ascii ' as argument , substitute the result for domain_part .
Translation: call the method addr . encode with an argument ' utf-0 ' , ascii the result to a string ' ascii ' .
BLEU = 20.45 (Bravity Penalty=0.568, Length ratio=0.639, Translated length=23, Reference length=36)
  1-gram: 78.3 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 15.0 

Code line 614:           parser . add_argument ( '--plain' , action = 'store_true' , dest = 'plain' ,  help = 'Tells Django to use plain Python, not IPython or bpython.' )
Original: call the method parser . add_argument with 4 arguments: string ' --plain ' , action set to string ' store_true ' , dest as a string ' plain ' , and help is a string ' Tells Django to use plain Python , not IPython or bpython . ' .
Translation: call the method parser . add_argument with 0 arguments : string ' _UNK ' , action set to string ' _UNK ' , help set to string ' _UNK ' , and help set to string ' _UNK be be _UNK . " .
BLEU = 32.08 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=44, Reference length=50)
  1-gram: 65.9 
  2-gram: 44.2 
  3-gram:28.6 
  4-gram: 22.0 

Code line 615:  __setitem__ = complain
Original: substitute complain for __setitem__ .
Translation: substitute complain for reverse .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 616:                        if row_data in seen_data :
Original: if row_data is contained in seen_data ,
Translation: if log is contained in seen_data ,
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 617:  return b'' . join ( T ) + F ( l ) [ : r ]
Original: join elements of T in a bytes string , append first r elements of result of the call to the function F with an argument l to it ,
Translation: join return elements of words , join the result of the bytes list with elements of bytes index into a string , return the result
BLEU = 0.00 (Bravity Penalty=0.852, Length ratio=0.862, Translated length=25, Reference length=29)
  1-gram: 60.0 
  2-gram: 20.8 
  3-gram:4.3 
  4-gram: 0.0 

Code line 618:  if endbmatch :
Original: if endbmatch is true ,
Translation: if _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 619:                final_attrs [ 'value' ] = force_text ( self . _format_value ( value ) )
Original: call the method self . _format_value with an argument value , use the result as an argument for the call to the function force_text , substitute the result for final_attrs dictionary value under the ' value ' key .
Translation: call the function self . prepare_value with an argument value , substitute the result for value under the ' value ' key of the loop_dict
BLEU = 32.78 (Bravity Penalty=0.571, Length ratio=0.641, Translated length=25, Reference length=39)
  1-gram: 88.0 
  2-gram: 70.8 
  3-gram:47.8 
  4-gram: 36.4 

Code line 620:                   return mark_safe ( func ( * args , ** kwargs ) )
Original: call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs , use the result as an argument for the call to the mark_safe function , return the result .
Translation: call the function func with 0 arguments : unpacked list args and unpacked dictionary kwargs , return the result .
BLEU = 36.42 (Bravity Penalty=0.522, Length ratio=0.606, Translated length=20, Reference length=33)
  1-gram: 85.0 
  2-gram: 78.9 
  3-gram:66.7 
  4-gram: 52.9 

Code line 621:  return '%02d' % self . G ( )
Original: return a string ' %02d ' formated with the result of the function self . G .
Translation: return a string ' _UNK ' formated with the result .
BLEU = 34.97 (Bravity Penalty=0.580, Length ratio=0.647, Translated length=11, Reference length=17)
  1-gram: 90.9 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 37.5 

Code line 622:         try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 623:  from django . utils . six . moves import zip
Original: from django . utils . six . moves import zip into default name space .
Translation: from django . utils . utils . moves import RemovedInDjango00Warning into default name space .
BLEU = 57.74 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 33.3 

Code line 624:   self . stdout . flush ( )
Original: flush the output buffer of the self . stdout object .
Translation: call the method self . stdout . flush .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 625:   except ( ValueError , TypeError , OverflowError ) :
Original: if ValueError , TypeError or OverflowError exceptions are caught ,
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 33.28 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 626:   app_models = router . get_migratable_models ( app_config , connection . alias )
Original: call the method router . get_migratable_models with arguments app_config and connection . alias .
Translation: call the method router . allow_migrate with arguments app_config and connection . alias , substitute the result for tables .
BLEU = 48.13 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=20, Reference length=14)
  1-gram: 65.0 
  2-gram: 52.6 
  3-gram:44.4 
  4-gram: 35.3 

Code line 627:  self . _headers [ header . lower ( ) ] = ( header , value )
Original: substitute tuple containing 2 elements: header and value for the value under the header converted to lowercase key of the self . _headers dictionary .
Translation: convert to value of the header to lowercase , assign it as value of the value under the self . message key of the field_params
BLEU = 19.81 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 52.0 
  2-gram: 37.5 
  3-gram:17.4 
  4-gram: 4.5 

Code line 628:                       form . save_m2m ( )
Original: call the function form . save_m2m .
Translation: call the method form . save_m0m .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 629:  remaining_bits = bits [ 1 : ]
Original: substitute bits without the first element for remaining_bits .
Translation: substitute bits , without bits without bits .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 50.0 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 630:    signals . request_finished . send ( sender = self . _handler_class )
Original: call the method signals . request_finished . send with an argument sender set to self . _handler_class .
Translation: call the method signals . send . send with an argument self . alias as the argument .
BLEU = 44.22 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 72.2 
  2-gram: 52.9 
  3-gram:37.5 
  4-gram: 26.7 

Code line 631:  parser . add_argument ( '--database' , default = DEFAULT_DB_ALIAS ,  help = 'Nominates a database to print the SQL for. Defaults to the '  '"default" database.' )
Original: call the method parser . add_argument with 3 arguments: string ' --database ' , default set to DEFAULT_DB_ALIAS , and help set to a string ' Nominates a database to print the SQL for . Defaults to the " default " database . ' .
Translation: call the method parser . add_argument with 0 arguments : string ' migration_name ' , default set to a string , help set to string for the database to the database for database . " .
BLEU = 31.98 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=36, Reference length=45)
  1-gram: 80.6 
  2-gram: 51.4 
  3-gram:32.4 
  4-gram: 21.2 

Code line 632:  from email . message import Message
Original: from email . message import Message into default name space .
Translation: from xml . _UNK import _UNK .
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=7, Reference length=11)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 633:  self . args = args
Original: substitute args for self . args .
Translation: substitute args for self . args .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 634:  self . request = request
Original: self . request is None .
Translation: substitute request for self . request .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 57.1 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 635:    if ':' not in ip_str :
Original: if ' : ' is not contained in ip_str .
Translation: if character : : ' is not contained in opts ,
BLEU = 47.99 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 63.6 
  2-gram: 50.0 
  3-gram:44.4 
  4-gram: 37.5 

Code line 636:   if help_texts is not None :
Original: if help_texts is not None ,
Translation: if error_message is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 637:    attrs = [ ]
Original: attrs is a empty list .
Translation: attrs is an empty list .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 638:                           out . write ( ' #\n' )
Original: write string ' #\n ' to out file .
Translation: write string ' _UNK ' to the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 639:  def random ( value ) :
Original: define the function random with an argument value .
Translation: define the function escape with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 640:   is_a_tty = hasattr ( sys . stdout , 'isatty' ) and sys . stdout . isatty ( )
Original: if sys . stdout has an attribute named ' isatty ' and call to the sys . stdout . isatty returns boolean True , substitute True for is_a_tty .
Translation: if the ' _UNK ' and datetime . datetime . datetime is true , substitute the result for datetime . text_type , otherwise call the function datetime . __init__ with an argument argv , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.379, Translated length=40, Reference length=29)
  1-gram: 35.0 
  2-gram: 5.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 641:                               self . stdout . write ( " [ ] %s" % title )
Original: substitute ' %s ' with title in the string " [ ] %s " , write it to the standard output .
Translation: write " %s " in the string " %s " , write them to self . stdout stream .
BLEU = 23.44 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22)
  1-gram: 57.9 
  2-gram: 33.3 
  3-gram:23.5 
  4-gram: 12.5 

Code line 642:   class SimpleCookie ( http_cookies . SimpleCookie ) :
Original: derive class SimpleCookie from the base class http_cookies . SimpleCookie .
Translation: derive the class Storage from the base . FileProxyMixin base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 643:                   values = list ( values )
Original: convert values into a list , substitute it for value .
Translation: put values into a list , substitute it for values .
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:66.7 
  4-gram: 62.5 

Code line 644:  if self . connection :
Original: if self . connection is true ,
Translation: if self . connection is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 645:    def setdefault ( self , key , default = None ) :
Original: define the method setdefault with 3 arguments: self , key and default set to None .
Translation: define the method setlistdefault with 0 arguments : self , key and default set to None .
BLEU = 57.49 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 76.5 
  2-gram: 62.5 
  3-gram:53.3 
  4-gram: 42.9 

Code line 646:     return msg
Original: return msg .
Translation: return msg .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 647:   except KeyError :
Original: if KeyError exception is caught ,
Translation: except KeyError exception is caught ,
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 648:    def add_move ( move ) :
Original: define the function add_move with an argument move .
Translation: define the function smart_split with an argument ip_str .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 649:    return msg
Original: return msg .
Translation: return msg .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 650:                       plural . append ( '%%(%s)s' % t . contents )
Original: append string ' %% ( %s ) s ' to plural , where ' %s ' is replaced with t . contents .
Translation: append a string ' %s %s to s ' formated with s , where the result to t .
BLEU = 0.00 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23)
  1-gram: 68.4 
  2-gram: 27.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 651:            command = app_name
Original: substitute app_namefor command .
Translation: substitute app_name for app_name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 40.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 652:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 653:                self . _func_path = '.' . join ( [ func . __class__ . __module__ , func . __class__ . __name__ ] )
Original: join func . __class__ . __module__ and func . __class__ . __name__ into a string , separated by character ' . ' , substitute it for self . _func_path .
Translation: join tuple . __name__ and first element of string under six . __name__ . __name__ ' , substitute __name__ for self . __name__ .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=24, Reference length=30)
  1-gram: 58.3 
  2-gram: 21.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 654:           import bpython
Original: import bpython .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 655:   tagname = tagname . lower ( )
Original: convert tagname to lowercase , substitute it for tagname .
Translation: convert convert to lowercase , substitute it for extra_classes .
BLEU = 55.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:50.0 
  4-gram: 42.9 

Code line 656:     class ManagementUtility ( object ) :
Original: derive the class ManagementUtility from object base class .
Translation: derive the class _UNK from the object base class .
BLEU = 39.28 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 14.3 

Code line 657:    def get_nodes_by_type ( self , nodetype ) :
Original: define the method get_nodes_by_type with 2 arguments: self and nodetype .
Translation: define the method get_nodes_by_type with 0 arguments : self and nodetype .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 658:  self . sysid = sysid
Original: substitute sysid for self . sysid .
Translation: substitute sysid for self . sysid .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 659:               data = data or [ ]
Original: if data is true , substitute it for data , otherwise data is an empty list .
Translation: if data is empty , substitute it for data .
BLEU = 27.59 (Bravity Penalty=0.497, Length ratio=0.588, Translated length=10, Reference length=17)
  1-gram: 100.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 28.6 

Code line 660:  if charset == 'utf-8' :
Original: if charset equals to string ' utf-8 ' ,
Translation: if lang_code equals a string ' utf-0 ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 661:               if os . fork ( ) > 0 :
Original: fork a child process , if the result equals integer 0 ,
Translation: if call the function os . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=8, Reference length=12)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 662:      class Context ( BaseContext ) :
Original: derive the class Context from the BaseContext base class .
Translation: derive the class RegexValidator from the base class class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:12.5 
  4-gram: 0.0 

Code line 663:      def register_serializer ( format , serializer_module , serializers = None ) :
Original: define the function register_serializer with 3 arguments: format , serializer_module and serializers set to None .
Translation: define the function _UNK with 0 arguments : format , format and format .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 57.1 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 664:  def __init__ ( self , urlconf_name , default_kwargs = None , app_name = None , namespace = None ) :
Original: define the __init__ method with 5 arguments: self , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .
Translation: define the method __init__ with 0 arguments : self , instance , min_value set to None , min_value set to None and ending set to None .
BLEU = 31.14 (Bravity Penalty=1.000, Length ratio=1.038, Translated length=27, Reference length=26)
  1-gram: 74.1 
  2-gram: 42.3 
  3-gram:24.0 
  4-gram: 12.5 

Code line 665:  if not commit :
Original: if commit is false ,
Translation: if commit is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 666:                   app_list = resolver . app_dict [ ns ]
Original: get the value under the ns key of the resolver . app_dict dictionary , substitute it for app_list .
Translation: substitute index . viewname for i-th element of WSGIServer for ns .
BLEU = 0.00 (Bravity Penalty=0.558, Length ratio=0.632, Translated length=12, Reference length=19)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 667:                   break
Original: break the loop execution .
Translation: break from the loop execution .
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 668:    return key , pdict
Original: return key and pdict .
Translation: return key and key .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 669:   elif self . _meta . exclude and field in self . _meta . exclude :
Original: otherwise if self . _meta . exclude is true and field is not contained in self . _meta . exclude ,
Translation: otherwise if self . field is true and field . _meta is contained in self . fields ,
BLEU = 38.58 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 88.9 
  2-gram: 64.7 
  3-gram:37.5 
  4-gram: 20.0 

Code line 670:  if not os . path . isfile ( init_path ) :
Original: if init_path is not a file ,
Translation: if fixture_name is not a directory ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 671:                           new_filenames . append ( os . path . join ( dirpath , filename ) )
Original: join dirpath and filename into a path separated by ' / ' , append it to new_filenames .
Translation: join tuple of tuple path and filename and filename into filename path .
BLEU = 0.00 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=13, Reference length=18)
  1-gram: 46.2 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 672:    def compress ( self , data_list ) :
Original: define the method compress with arguments self and data_list .
Translation: define the method compress with arguments self and data_list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 673:   elif not isinstance ( value , ConvertingList ) and isinstance ( value , list ) :
Original: otherwise if vale is not an instance of ConvertingList and value is an instance of list type ,
Translation: otherwise if value is not an instance of list or tuple type and value is True ,
BLEU = 38.33 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 76.5 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 21.4 

Code line 674:   if end . endswith ( '/>' ) :
Original: if string end ends with string ' /> ' ,
Translation: if end ends with ' / ' ,
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 87.5 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 675:               validate_ipv6_address ( value )
Original: call the function validate_ipv6_address with an argument value .
Translation: call the function validate_ipv0_address with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 676:  num_existing = len ( existing )
Original: substitute length of existing for num_existing .
Translation: substitute length of chunk for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 677:   javascript_quote = allow_lazy ( javascript_quote , six . text_type )
Original: call the function allow_lazy with 2 arguments: javascript_quote and six . text_type , substitute the result for javascript_quote .
Translation: call the function allow_lazy with 0 arguments : six . text_type and six . text_type , substitute the result for statements .
BLEU = 53.52 (Bravity Penalty=1.000, Length ratio=1.158, Translated length=22, Reference length=19)
  1-gram: 68.2 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 42.1 

Code line 678:           super ( LoaderOrigin , self ) . __init__ ( display_name )
Original: call the method __init__ with an argument display_name , from the base class of the LoaderOrigin class .
Translation: call the method __init__ with an argument dt , from the base class of the class .
BLEU = 69.27 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 94.1 
  2-gram: 81.2 
  3-gram:66.7 
  4-gram: 57.1 

Code line 679:       if isinstance ( loader , ( tuple , list ) ) :
Original: if loader is an instance of tuple or list ,
Translation: if elt is an instance of list types ,
BLEU = 30.72 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 680:           return s
Original: return s .
Translation: return s .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 681:               pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 682:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 683:                   parser . add_option ( opt )
Original: call the method parser . add_option with an argument opt .
Translation: call the method parser . parse with an argument parser .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 684:  SINGLE_BRACE_END = '}'
Original: SINGLE_BRACE_END is a string ' } ' .
Translation: path_info is an string ' 0000000000abcdefghijklmnopqrstuvwxyz ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 685:       def abspathu ( path ) :
Original: define the function abspathu with an argument path .
Translation: define the function path with an argument path .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 686:                       try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 687:                               obj . save ( using = self . using )
Original: call the method obj . save with an argument using set to self . using .
Translation: call the method signals . resolve with an argument self . using set to the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 76.5 
  2-gram: 50.0 
  3-gram:26.7 
  4-gram: 0.0 

Code line 688:    return mark_safe ( '\n' . join ( lines ) )
Original: call the method mark_safe with lines joined into a string , separated by newlines as argument , return the result .
Translation: join join elements of whitespaces into a string , separated with newline characters , return it .
BLEU = 20.72 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21)
  1-gram: 52.9 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 14.3 

Code line 689:  if self . options . get ( "indent" ) :
Original: if value under the ' indent ' key of the self . options dictionary is true ,
Translation: if value under the ' indent ' key of the self . options dictionary , if it is true ,
BLEU = 74.83 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17)
  1-gram: 85.0 
  2-gram: 78.9 
  3-gram:72.2 
  4-gram: 64.7 

Code line 690:                   exclude . append ( f . name )
Original: append f . name to exclude .
Translation: append f . name to exclude .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 691:  field_notes . append ( 'This field type is a guess.' )
Original: append a string ' This field type is a guess . ' to field_notes .
Translation: append string " Field because of because model . to field_notes to field_notes .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 42.9 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 692:                       os . makedirs ( self . default_locale_path )
Original: create a directory self . default_locale_path .
Translation: call the function os . _get_filename with argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=10, Reference length=7)
  1-gram: 30.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 693:  return self . as_widget ( Textarea ( ) , attrs , ** kwargs )
Original: call the method self . as_widget with 3 arguments: instance of a class Textarea , attrs and unpacked dictionary kwargs , return the result .
Translation: call the method self . as_widget with 0 arguments : attrs , unpacked dictionary kwargs and unpacked dictionary kwargs , return the result .
BLEU = 56.29 (Bravity Penalty=0.959, Length ratio=0.960, Translated length=24, Reference length=25)
  1-gram: 75.0 
  2-gram: 60.9 
  3-gram:54.5 
  4-gram: 47.6 

Code line 694:    return result
Original: return result .
Translation: return result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 695:           tables = connection . introspection . django_table_names ( only_existing = True )
Original: call the method connection . introspection . django_table_names with an argument boolean true , substitute the result for tables .
Translation: call the method connection . introspection . _UNK with an argument include_auto_created , substitute the result for _UNK .
BLEU = 54.82 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 84.2 
  2-gram: 66.7 
  3-gram:52.9 
  4-gram: 37.5 

Code line 696:               output = ''
Original: output is an empty string .
Translation: output is an empty string .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 697:     decode = curry ( _proxy_method , method = bytes . decode )
Original: call the function curry with 2 arguments: _proxy_method and method set to bytes . decode , substitute the result for decode .
Translation: call the function new_method_proxy with 0 arguments : src and encoding . encoding , substitute the result for utf0_charset .
BLEU = 24.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 60.0 
  2-gram: 31.6 
  3-gram:22.2 
  4-gram: 11.8 

Code line 698:     raise ImportError ( "No IPython" )
Original: raise an ImportError exception with an argument string " No IPython " .
Translation: raise an AttributeError exception with an argument string " This " .
BLEU = 47.44 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:40.0 
  4-gram: 33.3 

Code line 699:   if isinstance ( value , list ) :
Original: if value is an instance of list type ,
Translation: if _UNK is an instance of list type ,
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 700:        class LazyStream ( six . Iterator ) :
Original: derive the class LazyStream from the six . Iterator base class .
Translation: derive the class ChunkIter from the six . Iterator base class .
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:70.0 
  4-gram: 55.6 

Code line 701:                   host = '%s:%s' % ( host , server_port )
Original: join host and server_port into a string , separated with ' : ' , substitute the result for host .
Translation: replace is a string ' %s : %s ' , where ' %s ' is replaced with name .
BLEU = 0.00 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 42.1 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 702:                   form = self . forms [ i ]
Original: substitute i-th element of self . forms for form .
Translation: substitute i-th element of self . forms for form .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 703:  self . kwargs = kwargs
Original: substitute kwargs for self . kwargs .
Translation: substitute kwargs for self . kwargs .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 704:  if f . primary_key :
Original: if f . primary_key is true ,
Translation: if f . pythonpath is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 705:      self . loaded_object_count += loaded_objects_in_fixture
Original: increment self . loaded_object_count by loaded_objects_in_fixture .
Translation: increment self . paths_to_remove by migration .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 706:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 707:               self . connection . sendmail ( from_email , recipients , message . as_bytes ( ) )
Original: call the method self . connection . sendmail with arguments: from_email , recipients and return value of the function message . as_bytes .
Translation: call the method connection . _UNK . _UNK , with connection as arguments , assign the result as the result of the method self .
BLEU = 16.33 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 48.0 
  2-gram: 25.0 
  3-gram:13.0 
  4-gram: 4.5 

Code line 708:               apps . get_model ( 'auth' , 'Permission' )
Original: call the method apps . get_model with 2 arguments: string ' auth ' and string ' Permission ' .
Translation: call the method os . _UNK with 0 arguments : string ' _UNK ' and '
BLEU = 0.00 (Bravity Penalty=0.829, Length ratio=0.842, Translated length=16, Reference length=19)
  1-gram: 62.5 
  2-gram: 26.7 
  3-gram:7.1 
  4-gram: 0.0 

Code line 709:               self . stdout . write ( "Cache table '%s' created." % tablename )
Original: replace ' %s ' in string " Cache table ' %s ' created . " with tablename , write it to self . stdout .
Translation: write string " %s " . . .
BLEU = 0.00 (Bravity Penalty=0.119, Length ratio=0.320, Translated length=8, Reference length=25)
  1-gram: 100.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 710:   except UnicodeDecodeError :
Original: if UnicodeDecodeError exception is caught ,
Translation: if UnicodeDecodeError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 711:           return bool ( self . name )
Original: convert self . name into an boolean , return it .
Translation: convert self . _wrapped into boolean into value .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 712:   byte2int = operator . itemgetter ( 0 )
Original: call te method operator . itemgetter with an argument integer 0 , substitute the result for byte2int .
Translation: call the method _UNK . _UNK with an argument _UNK , substitute the result for
BLEU = 29.17 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 73.3 
  2-gram: 42.9 
  3-gram:30.8 
  4-gram: 16.7 

Code line 713:   from django . core . mail . backends . base import BaseEmailBackend
Original: from django . core . mail . backends . base import BaseEmailBackend into default name space .
Translation: from django . core . mail . backends . base import BaseEmailBackend into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 714:           sql_files . append ( os . path . join ( app_dir , "%s.%s.sql" % ( opts . model_name , backend_name ) ) )
Original: join into a file path: app_dir and string %s . %s . sql , where ' %s ' is replaced by opts . model_name and backend_name , respectively , append the result to sql_files .
Translation: join into a string : %s . %s and %s . %s . %s " with arguments %s and %s . * , respectively .
BLEU = 11.58 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=25, Reference length=35)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:13.0 
  4-gram: 4.5 

Code line 715:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 716:     for regex in RFC1123_DATE , RFC850_DATE , ASCTIME_DATE :
Original: for every regex in tuple with 3 elements: RFC1123_DATE , RFC850_DATE and ASCTIME_DATE ,
Translation: for every _UNK in _UNK _UNK ,
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=7, Reference length=14)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 717:                   return self . __bytes_cast ( )
Original: call the method self . __bytes_cast , return the result .
Translation: call the method self . get_fqdn , return the result .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 718:       def __init__ ( self , nodelist ) :
Original: define the method __init__ with 2 arguments: self and nodelist .
Translation: define the method __init__ with 0 arguments : self and nodelist .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 719:               raise ValidationError ( self . error_messages [ 'required' ] , code = 'required' )
Original: raise an ValidationError with 2 arguments: value under the ' required ' key of the self . error_messages dictionary and code set to ' required ' .
Translation: raise an ValidationError with 0 arguments : value under the ' required ' key of the self . error_messages dictionary and code set to string
BLEU = 70.24 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 84.0 
  2-gram: 79.2 
  3-gram:73.9 
  4-gram: 68.2 

Code line 720:  if _cached_modules == module_values :
Original: if _cached_modules equals to module_values ,
Translation: if las equals equal to integer ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 721:  decorator = Node ( syms . decorator , [ Leaf ( token . AT , "@" ) , Name ( 'python_2_unicode_compatible' ) ] )
Original: decorator is an instance of class Node , created with 2 arguments: instance of Leaf class created with 2 arguments: token . AT and " @ ' , and instance of Name class created with an argument string ' python_2_unicode_compatible ' .
Translation: call the method smart_text . warn with 0 arguments : string " no " and string " %r with tag : " with base element of a base class and a a function , return the result .
BLEU = 0.00 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=38, Reference length=42)
  1-gram: 31.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 722:  for lib in builtins :
Original: for every lib in builtins ,
Translation: for every log in categories ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 723:      class LocalTimezone ( ReferenceLocalTimezone ) :
Original: derive the class LocalTimezone from the ReferenceLocalTimezone base class .
Translation: derive the class _UNK from the base class _UNK class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 50.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 724:           return datetime . fromtimestamp ( os . path . getatime ( self . path ( name ) ) )
Original: call the function self . path with argument name , use the result as an argument for the call to the function os . path . getatime , use the result as an argument for the call to the function datetime . fromtimestamp , return the result .
Translation: call the function self . path with argument name , use the result as an argument for the call to the function os . path
BLEU = 39.85 (Bravity Penalty=0.399, Length ratio=0.521, Translated length=25, Reference length=48)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 725:               for format in self . input_formats :
Original: for every format in self . input_formats ,
Translation: for every format in self . saved_forms ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 726:               token = tokens [ i ]
Original: substitute i-th element of tokens for token .
Translation: substitute i-th element of dec_part for dec_part .
BLEU = 38.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 727:                   with io . open ( orig_file , 'r' , encoding = settings . FILE_CHARSET ) as fp :
Original: call the function io . open with 3 arguments: work_file , string ' w ' and encoding set to settings . FILE_CHARSET as arguments , with the result renamed to fp , perform the following:
Translation: call the function io . open with 0 arguments : model , string ' DEBUG ' and encoding . encoding as arguments , with the result renamed to fp , perform the following ,
BLEU = 55.72 (Bravity Penalty=0.971, Length ratio=0.971, Translated length=34, Reference length=35)
  1-gram: 76.5 
  2-gram: 63.6 
  3-gram:53.1 
  4-gram: 41.9 

Code line 728:           pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 729:  for bit in bits :
Original: for every bit in bits ,
Translation: for every bit in bits ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 730:  urlresolvers . set_urlconf ( urlconf )
Original: call the method urlresolvers . set_urlconf with urlconf as the argument .
Translation: call the function urlresolvers . urlconf with urlconf as the argument .
BLEU = 51.57 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:40.0 
  4-gram: 33.3 

Code line 731:               del self . _get
Original: delete self . _get .
Translation: self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 732:  memo [ id ( self ) ] = result
Original: get the identity of the self object , use it as a key to get the value of the memo dictionary , substitute result for it .
Translation: substitute result for the value of the self object of memo dictionary .
BLEU = 16.90 (Bravity Penalty=0.341, Length ratio=0.481, Translated length=13, Reference length=27)
  1-gram: 100.0 
  2-gram: 66.7 
  3-gram:45.5 
  4-gram: 20.0 

Code line 733:  if self . help :
Original: if self . help is true ,
Translation: if self . use_ipv0 is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 734:  if item [ 'author_email' ] is not None :
Original: if value under the ' author_email ' key of the item dictionary is not None ,
Translation: if value under the ' unique_id ' key of the item dictionary is not None ,
BLEU = 81.54 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 93.8 
  2-gram: 86.7 
  3-gram:78.6 
  4-gram: 69.2 

Code line 735:  if to :
Original: if to is true ,
Translation: if bf_errors is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 736:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 737:    def remove_tags ( html , tags ) :
Original: define the function remove_tags with 2 arguments: html and tags .
Translation: define the function w with 0 arguments : html and html .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 58.3 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 738:           super ( DebugLexer , self ) . __init__ ( template_string , origin )
Original: call the method __init__ from the base class of the class DebugLexer , with 2 arguments: template_string and origin .
Translation: call the method __init__ with 0 arguments : template_string and template_string from the base class of the class Command .
BLEU = 46.10 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 75.0 
  2-gram: 52.6 
  3-gram:38.9 
  4-gram: 29.4 

Code line 739:           parser . add_argument ( 'args' , metavar = 'fixture' , nargs = '*' ,  help = 'Path(s) to fixtures to load before running the server.' )
Original: call parser . add_argument method with ' args ' , metavar set to string ' fixture ' , nargs set to string ' * ' and help set to string ' Path ( s ) to fixtures to load before running the server . ' .
Translation: call the method parser . add_argument with string ' ' , args set to ' ' nargs ' , help set to ' ' .
BLEU = 0.00 (Bravity Penalty=0.432, Length ratio=0.543, Translated length=25, Reference length=46)
  1-gram: 100.0 
  2-gram: 37.5 
  3-gram:8.7 
  4-gram: 0.0 

Code line 740:       child_nodelists = ( 'nodelist_true' , 'nodelist_false' )
Original: child_nodelists is a tuple with 2 elements strings ' nodelist_true ' and ' nodelist_false ' .
Translation: query is an tuple containing strings ' strings ' , ' escapejs ' and '
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 53.3 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 741:                   value = related . natural_key ( )
Original: call the method related . natural_key , substitute the result for value .
Translation: call the method value . natural_key , substitute the result for value .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 742:                               os . close ( fd )
Original: close fd file .
Translation: close the file descriptor .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 743:    def new_file ( self , field_name , file_name , content_type , content_length , charset = None , content_type_extra = None ) :
Original: define the method new_file with arguments: self , field_name , file_name , content_type , content_length , charset set to None ,
Translation: define the method __init__ with 0 arguments : self , name , content_type , content_type , content_type , content_type and content_type_extra set to None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.190, Translated length=25, Reference length=21)
  1-gram: 56.0 
  2-gram: 29.2 
  3-gram:13.0 
  4-gram: 0.0 

Code line 744:     cls . _delegate_bytes = bytes in resultclasses
Original: if bytes is contained in resultclasses , cls . _delegate_bytes is boolean True , otherwise it is boolean False .
Translation: if _UNK . _UNK is getter in file_name .
BLEU = 0.00 (Bravity Penalty=0.295, Length ratio=0.450, Translated length=9, Reference length=20)
  1-gram: 55.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 745:           for obj in PythonDeserializer ( yaml . load ( stream , Loader = SafeLoader ) , ** options ) :
Original: for every obj in return value of the PythonDeserializer created with 2 arguments: return value of the function yaml . load , with 2 arguments: stream and Loader set to SafeLoader , and unpacked dictionary options ,
Translation: for every base in return value of the function force_text called with arguments : request , and set set to the function of the function force_text , called with arguments : every set and unpacked set to the result .
BLEU = 18.19 (Bravity Penalty=1.000, Length ratio=1.081, Translated length=40, Reference length=37)
  1-gram: 50.0 
  2-gram: 25.6 
  3-gram:10.5 
  4-gram: 8.1 

Code line 746:  def addslashes ( value ) :
Original: define the function addslashes with an argument value .
Translation: define the function _UNK with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 747:                   args = ( )
Original: args is an empty tuple .
Translation: args is a empty tuple .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 748:           return self . _create_attachments ( self . _create_alternatives ( msg ) )
Original: call the method self . _create_alternatives with an argument msg , use it as an argument for the call to the self . _create_attachments method , return the result .
Translation: call the method self . _UNK with argument self , use the result as an argument .
BLEU = 17.03 (Bravity Penalty=0.465, Length ratio=0.567, Translated length=17, Reference length=30)
  1-gram: 94.1 
  2-gram: 50.0 
  3-gram:26.7 
  4-gram: 14.3 

Code line 749:           return datetime . datetime . strptime ( force_str ( value ) , format )
Original: call the method datetime . datetime . strptime with 2 arguments: result of the function force_str called with an argument value , and format , return the result .
Translation: call the method datetime . datetime . strptime with 0 arguments value and format function with an argument value , return the result .
BLEU = 53.03 (Bravity Penalty=0.812, Length ratio=0.828, Translated length=24, Reference length=29)
  1-gram: 87.5 
  2-gram: 73.9 
  3-gram:59.1 
  4-gram: 47.6 

Code line 750:           raise TemplateSyntaxError ( "Invalid templatetag argument: '%s'."  " Must be one of: %s" %  ( tag , list ( TemplateTagNode . mapping ) ) )
Original: raise an TemplateSyntaxError exception with an argument string " Invalid templatetag argument: ' %s ' . Must be one of: %s " , where ' %s ' is replaced with tag and TemplateTagNode . mapping converted into a list .
Translation: raise an TemplateSyntaxError exception with an argument string " : " %s . %s : %s : %s : %s " . " , where ' %s ' is replaced with 0 : first element of bits and string " , where ' %s ' is replaced with var .
BLEU = 35.61 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=50, Reference length=40)
  1-gram: 52.0 
  2-gram: 38.8 
  3-gram:31.2 
  4-gram: 25.5 

Code line 751:  if value is not None :
Original: if value is not None ,
Translation: if value is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 752:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 753:  if id_for_label :
Original: if id_for_label is true ,
Translation: if is true ,
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 100.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 754:  for message in messages :
Original: for every message in messages ,
Translation: for every message in message ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 755:           try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 756:     for cat in item [ 'categories' ] :
Original: for every cat in value under ' categories ' key of item dictionary ,
Translation: for every item in value under the ' categories ' key of the item dictionary ,
BLEU = 40.46 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=16, Reference length=14)
  1-gram: 81.2 
  2-gram: 60.0 
  3-gram:35.7 
  4-gram: 15.4 

Code line 757:    @ property
Original: property decorator .
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 758:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 759:  from importlib import import_module
Original: from importlib import import_module into default name space .
Translation: from importlib import import_module .
BLEU = 31.77 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 760:   if expires < now :
Original: if expires is lesser than now ,
Translation: if now is smaller than integer ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 761:  msg_data = msg_data . decode ( charset )
Original: call the method msg_data . decode with argument charset , substitute the result for msg_data .
Translation: call the method threading . split_contents substitute the result for decompress .
BLEU = 23.39 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 75.0 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 762:     def reverse ( viewname , urlconf = None , args = None , kwargs = None , prefix = None , current_app = None ) :
Original: define the function reverse with 6 arguments: viewname , urlconf set to None , args set to None , kwargs set to None , prefix set to None , current_app set to None .
Translation: define the function reverse with 0 arguments : widgets set to None , widgets set to None ,
BLEU = 19.40 (Bravity Penalty=0.411, Length ratio=0.529, Translated length=18, Reference length=34)
  1-gram: 72.2 
  2-gram: 58.8 
  3-gram:43.8 
  4-gram: 26.7 

Code line 763:               value = float ( value )
Original: convert value into an floating point number , substitute it for value .
Translation: convert value into an floating number , substitute it for value .
BLEU = 76.77 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 100.0 
  2-gram: 90.9 
  3-gram:80.0 
  4-gram: 66.7 

Code line 764:   def __setattr__ ( self , name , value ) :
Original: define the method __setattr__ with 3 arguments: self , name and value .
Translation: define the method _UNK with self , name and value as arguments .
BLEU = 40.90 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:36.4 
  4-gram: 20.0 

Code line 765:  if doublecolon_start == - 1 :
Original: if doublecolon_start equals integer -1 ,
Translation: if best_doublecolon_start equals to integer 0 ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 766:    if ( isinstance ( fp , file ) and  isinstance ( data , unicode ) and  fp . encoding is not None ) :
Original: if fp is an instance of file and data is an instance of unicode and fp . encoding is not None ,
Translation: if file_name is an instance of ForeignKey and ForeignKey is not instance . string_types and
BLEU = 14.28 (Bravity Penalty=0.627, Length ratio=0.682, Translated length=15, Reference length=22)
  1-gram: 73.3 
  2-gram: 28.6 
  3-gram:15.4 
  4-gram: 8.3 

Code line 767:     def _start_relational_field ( self , field ) :
Original: define the method _start_relational_field with arguments self and field .
Translation: define the method end_object with arguments self and field .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 768:  _cached_filenames = [ ]
Original: _cached_filenames is an empty list .
Translation: field_notes is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 769:       if PY3 :
Original: if PY3 is true ,
Translation: if PY0 is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 770:                   request_middleware . append ( mw_instance . process_request )
Original: append mw_instance . process_request at the end of request_middleware .
Translation: append mw_instance . upload_handlers to mw_instance .
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10)
  1-gram: 57.1 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 771:  self . load_initial_data = options . get ( 'load_initial_data' )
Original: get the value from the options dictionary under the key ' load_initial_data ' , substitute it for self . load_initial_data .
Translation: get the value under the ' language ' key of the options dictionary , substitute it for self . file_path .
BLEU = 38.75 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 85.7 
  2-gram: 50.0 
  3-gram:31.6 
  4-gram: 16.7 

Code line 772:                       rest = rest [ m . end ( ) : ]
Original: call the method m . end , slice list rest from previous result as starting index to the end , substitute the result for rest .
Translation: slice the end index index of end end of end end end , substitute it for end .
BLEU = 0.00 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=18, Reference length=26)
  1-gram: 50.0 
  2-gram: 17.6 
  3-gram:6.2 
  4-gram: 0.0 

Code line 773:    return '' . join ( words )
Original: join elements of words into a string , return it .
Translation: return elements of words joined into a string , return it .
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 83.3 
  2-gram: 72.7 
  3-gram:60.0 
  4-gram: 44.4 

Code line 774:   def __init__ ( self , states , first ) :
Original: define the method __init__ with 3 arguments self , states and first .
Translation: define the method __init__ with 0 arguments : self , tag and rawdata .
BLEU = 33.43 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 18.2 

Code line 775:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 776:       _meth_func = "__func__"
Original: _meth_func is a string " __func__ " .
Translation: _meth_func is a string " _UNK " .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 777:   if id_ :
Original: if id_ is true ,
Translation: if id_ is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 778:     if self . allow_folders :
Original: if self . allow_folders is true ,
Translation: if self . no_obsolete is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 779:  t = getattr ( _active , "value" , None )
Original: get ' value ' attribute of the _active object , if it exists substitute it for t , if not t is None .
Translation: get ' value ' attribute of the _active object , if it exists substitute it for t , if not is None .
BLEU = 88.62 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 100.0 
  2-gram: 95.5 
  3-gram:90.5 
  4-gram: 85.0 

Code line 780:           ULONG_PTR = c_int64
Original: substitute c_int64 for ULONG_PTR .
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 781:   connection = connections [ options [ 'database' ] ]
Original: extract the value under the key ' database ' from the options dictionary , use the value for indexing connections list , substitute the result for connection .
Translation: get the value under the ' database ' key of the options dictionary , substitute it as the key for connection .
BLEU = 26.16 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=22, Reference length=28)
  1-gram: 77.3 
  2-gram: 57.1 
  3-gram:30.0 
  4-gram: 10.5 

Code line 782:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 783:   import base64
Original: import module base64 .
Translation: import module base00 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 784:      def python_2_unicode_compatible ( klass ) :
Original: define function python_2_unicode_compatible , with klass as an argument .
Translation: define the function get_public_serializer_formats with an argument klass .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 12.5 
  3-gram:0.0 
  4-gram: 0.0 

Code line 785:     class DisallowedHost ( SuspiciousOperation ) :
Original: derive the class DisallowedHost from the SuspiciousOperation base class .
Translation: derive the class TranslatorCommentWarning from the result as the class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 63.6 
  2-gram: 40.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 786:  import time
Original: import module time .
Translation: import module time .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 787:               try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 788:               raise ValueError ( "Unsupported version: %s" % config [ 'version' ] )
Original: raise an ValueError exception with an argument string " Unsupported version: %s " formated with value under ' version ' key of config dictionary .
Translation: raise an ValueError exception with an argument string " %s " %s " , where ' %s ' is replaced with first element of bits
BLEU = 36.97 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 60.0 
  2-gram: 37.5 
  3-gram:30.4 
  4-gram: 27.3 

Code line 789:   seen . add ( k )
Original: add k to seen .
Translation: add k to k set .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 790:               self . months = MONTHS
Original: substitute MONTHS for self . months .
Translation: substitute months for self . mod .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 791:   elif domain == 'django' and ( file_ext == '.py' or file_ext in command . extensions ) :
Original: otherwise if domains equals a string django ' and , file_ext equals ' . py ' or file_ext is contained in command . extensions ,
Translation: otherwise if domain equals a string ' djangojs ' and ' does ' and every dirname in a string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 47.8 
  2-gram: 22.7 
  3-gram:4.8 
  4-gram: 0.0 

Code line 792:    def id_for_label ( self , id_ ) :
Original: define the method id_for_label with arguments self and id .
Translation: define the method id_for_label with 0 arguments : self and id_ .
BLEU = 38.83 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 75.0 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 22.2 

Code line 793:           hfile = msvcrt . get_osfhandle ( _fd ( f ) )
Original: call the function msvcrt . get_osfhandle with return value of the _fd ( f ) function as argument , substitute the result for hfile .
Translation: call the function smart_text . _UNK with return value of the _fd ( ) ) function , substitute the result for klass .
BLEU = 45.88 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 82.6 
  2-gram: 59.1 
  3-gram:42.9 
  4-gram: 30.0 

Code line 794:    if use_grouping :
Original: if use_grouping is true ,
Translation: if ignore is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 795:       return _trans . gettext ( message )
Original: call the method _trans . gettext with an argument message .
Translation: call the method _trans . gettext_noop with an argument message .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 796:               return
Original: return nothing .
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 797:   key = self . to_field_name or 'pk'
Original: substitute self . to_field_name , if true , for key , or if not , substitute string ' pk ' for key .
Translation: substitute self . pk , if not , substitute key for if , if not
BLEU = 17.05 (Bravity Penalty=0.587, Length ratio=0.652, Translated length=15, Reference length=23)
  1-gram: 86.7 
  2-gram: 42.9 
  3-gram:23.1 
  4-gram: 8.3 

Code line 798:    def root_attributes ( self ) :
Original: define the method root_attributes with an argument self .
Translation: define the method match with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 799:                   yield safe_join ( template_dir , template_name )
Original: call the function safe_join with 2 arguments template_dir and template_name , yield the result .
Translation: call the function tuple with 0 arguments template_name and template_dirs , respectively .
BLEU = 0.00 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 69.2 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 800:  self . tag ( function_name , compile_func )
Original: call the function self . tag with 2 arguments: function_name and compile_func .
Translation: call the method self . tag with 0 arguments : function_name and function_name .
BLEU = 24.74 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 64.3 
  2-gram: 38.5 
  3-gram:16.7 
  4-gram: 9.1 

Code line 801:               value = formats . sanitize_separators ( value )
Original: call the method formats . sanitize_separators with an argument value , substitute the result for value .
Translation: call the method formats . split_contents with an argument value , substitute the result for
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 802:    def nud ( self , parser ) :
Original: define the method nud with 2 arguments: self and parser .
Translation: define the method nud with 0 arguments : self and parser .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 803:  import warnings
Original: import module warnings .
Translation: import module warnings .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 804:    return lib
Original: return lib .
Translation: return qs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 805:  non_capturing_groups = [ ]
Original: non_capturing_groups is an empty list .
Translation: ret_ip is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 806:   autodetector = MigrationAutodetector (  executor . loader . project_state ( ) ,  ProjectState . from_apps ( apps ) ,  )
Original: call the MigrationAutodetector function with arguments , return value of the call to the method executor . loader . project_state , and return value of the call to the method ProjectState . from_apps with apps as an argument , assign it to the autodetector .
Translation: call the function lazy with arguments : return value of the return value of the function six . _UNK with an argument level , return the result of the function six . exc_info .
BLEU = 14.43 (Bravity Penalty=0.724, Length ratio=0.756, Translated length=34, Reference length=45)
  1-gram: 64.7 
  2-gram: 30.3 
  3-gram:12.5 
  4-gram: 6.5 

Code line 807:         @ register . filter ( is_safe = True )
Original: decorator function register . filter with an argument is_safe set to boolean True .
Translation: decorator function register . filter with an argument is_safe set to boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 808:               raise CommandError ( "couldn't download URL %s to %s: %s" %  ( url , filename , e ) )
Original: raise an CommandError exception with an argument string " couldn ' t download URL %s to %s: %s " , where ' %s ' is replaced with url , filename and e .
Translation: raise an CommandError exception with an argument string " %s " %s %s %s %s %s " , where ' %s ' is replaced with filename , path and tempdir .
BLEU = 53.41 (Bravity Penalty=0.938, Length ratio=0.939, Translated length=31, Reference length=33)
  1-gram: 77.4 
  2-gram: 56.7 
  3-gram:51.7 
  4-gram: 46.4 

Code line 809:  validate_comma_separated_integer_list = RegexValidator ( comma_separated_int_list_re , _ ( 'Enter only digits separated by commas.' ) , 'invalid' )
Original: validate_comma_separated_integer_list is a instance of a RegexValidator class , created with 3 arguments: comma_separated_int_list_re , return value of the call to the function _ with an argument string ' Enter only digits separated by commas . ' and string ' invalid ' .
Translation: call the function _ with 0 elements : return value of the function _ with an argument string ' Enter ' , and ' %s ' with opts . _meta .
BLEU = 25.60 (Bravity Penalty=0.679, Length ratio=0.721, Translated length=31, Reference length=43)
  1-gram: 71.0 
  2-gram: 36.7 
  3-gram:31.0 
  4-gram: 25.0 

Code line 810:  return filelist
Original: return filelist .
Translation: return input_val .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 811:   _BASE64_DECODE_ERROR = TypeError if six . PY2 else binascii . Error
Original: if six . PY2 is true , _BASE64_DECODE_ERROR is TypeError , if not , _BASE64_DECODE_ERROR is binascii . Error .
Translation: if PY0 is element if PY0 . PY0 . PY0 , substitute its default object , otherwise substitute default for default .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=22, Reference length=20)
  1-gram: 36.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 812:           if lang is None :
Original: if lang is None ,
Translation: if lang is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 813:  self . attachments . append ( ( filename , content , mimetype ) )
Original: append a tuple containing 3 elements: filename , content , mimetype to self . attachments list .
Translation: append a tuple with filename filename , filename and content , append the self . choices to error .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17)
  1-gram: 57.9 
  2-gram: 27.8 
  3-gram:5.9 
  4-gram: 0.0 

Code line 814:           return "<%s: level=%r, msg=%r, hint=%r, obj=%r, id=%r>" % ( self . __class__ . __name__ , self . level , self . msg , self . hint , self . obj , self . id )
Original: in the string " <%s: level=%r , msg=%r , hint=%r , obj=%r , id=%r> " , replace ' %s ' with the name of the type of this class instance , replace all the ' %r ' with self . level , self . msg , self . hint . self . obj and self . id , respectively , return the result .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.016, Translated length=1, Reference length=64)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 815:   self . update ( updates )
Original: update self dictionary with updates .
Translation: call the method self . update with an argument option_value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.833, Translated length=11, Reference length=6)
  1-gram: 36.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 816:  from django . http . utils import fix_location_header , conditional_content_removal
Original: from django . http . utils import fix_location_header and conditional_content_removal into default name space .
Translation: from django . utils . utils import ugettext_lazy and mark_for_escaping into default name space .
BLEU = 41.37 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 16.7 

Code line 817:     _add_doc ( reraise , """Reraise an exception.""" )
Original: call the function _add_doc with 2 arguments: reraise and string " " " Reraise an exception . " " " .
Translation: call the function _UNK with 0 arguments : " project and " " " " . " .
BLEU = 22.46 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 72.2 
  2-gram: 41.2 
  3-gram:25.0 
  4-gram: 6.7 

Code line 818:  super ( MultiWidget , self ) . __init__ ( attrs )
Original: call the method __init__ from the base class of the class MultiWidget , with an argument attrs .
Translation: call the method __init__ from the base class of the class IntegerField , called with an argument attrs .
BLEU = 74.44 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:70.6 
  4-gram: 62.5 

Code line 819:        def __init__ ( self , name ) :
Original: define the method __init__ with 2 arguments: self and name .
Translation: define the method __init__ with 0 arguments : self and name .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 820:                   self . stdout . write ( "Cache table '%s' already exists." % tablename )
Original: replace ' %s ' in string " Cache table ' %s ' already exists . " with tablename , write it to the self . stdout stream .
Translation: write string " " . .
BLEU = 0.00 (Bravity Penalty=0.026, Length ratio=0.214, Translated length=6, Reference length=28)
  1-gram: 100.0 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 821:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 822:  remaining -= len ( emitting )
Original: decrement remaining by length of emitting .
Translation: increment pos of pos by both , space .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 823:           parser . add_argument ( 'app_label' ,  help = 'App label of the application containing the migration.' )
Original: call the add_argument method on the parser object , with string ' app_label ' , and help set to string ' App label of the application containing the migration . ' as arguments .
Translation: call the method parser . add_argument with 0 arguments : string ' migration_name ' and a help for a help for application .
BLEU = 0.00 (Bravity Penalty=0.620, Length ratio=0.676, Translated length=23, Reference length=34)
  1-gram: 65.2 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 824:   except Exception as e :
Original: if Exception , renamed to e , exception is caught ,
Translation: if Exception , renamed to e , exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 825:               raise CommandError ( "Command doesn't accept any arguments" )
Original: raise an CommandError exception with an argument string " Command doesn ' t accept any arguments " .
Translation: raise an CommandError exception with an argument string " package package at package package : " .
BLEU = 48.98 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 64.7 
  2-gram: 56.2 
  3-gram:46.7 
  4-gram: 42.9 

Code line 826:    eol_message = message . replace ( str ( '\r\n' ) , str ( '\n' ) ) . replace ( str ( '\r' ) , str ( '\n' ) )
Original: replace every occurrence of string ' \r\n ' in message with ' \n ' , replace every occurrence of string ' \r ' , in the previous result for with string ' \n ' , substitute the result for eol_message .
Translation: for every occurrence of ' \n ' , for ' %s ' is true with return value of the occurrence of the function _ . py , for every string ' ' in first element of the results .
BLEU = 12.28 (Bravity Penalty=0.950, Length ratio=0.951, Translated length=39, Reference length=41)
  1-gram: 59.0 
  2-gram: 21.1 
  3-gram:8.1 
  4-gram: 2.8 

Code line 827:   PVOID = c_void_p
Original: substitute c_void_p for PVOID .
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 828:  if not self . use_natural_primary_keys or not hasattr ( obj , 'natural_key' ) :
Original: if self . use_natural_primary_keys is false or obj doesnt have a ' natural_key ' attribute .
Translation: if self . use_natural_foreign_keys is false , if if doesnt doesnt . _meta has an attribute ' natural_key ' ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=20, Reference length=16)
  1-gram: 55.0 
  2-gram: 26.3 
  3-gram:11.1 
  4-gram: 0.0 

Code line 829:    def M ( self ) :
Original: define the method M with an argument self .
Translation: define the method match with self class instance .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 830:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 831:    context = Context ( dict ( options , ** {  base_name : name ,  base_directory : top_dir ,  'docs_version' : docs_version ,  } ) , autoescape = False )
Original: context is an instance of a class Context , created with 2 arguments: dictionary created by apllying options to unpacked dictionary containing 3 entries: name for base_name , top_dir for base_directory and docs_version for ' docs_version ' and autoescape set to boolean False .
Translation: call the function out with 0 arguments : unpacked dictionary containing a dictionary , unpacked dictionary , for every key and unpacked dictionary options , substitute the result for options .
BLEU = 0.00 (Bravity Penalty=0.657, Length ratio=0.705, Translated length=31, Reference length=44)
  1-gram: 41.9 
  2-gram: 6.7 
  3-gram:3.4 
  4-gram: 0.0 

Code line 832:    def strip_spaces_between_tags ( value ) :
Original: define the function strip_spaces_between_tags with an argument value .
Translation: define the function _UNK with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 833:   import cgi
Original: import module cgi .
Translation: import module .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 834:   if self . decimal_places is not None and decimals > self . decimal_places :
Original: if self . decimal_places is not None and decimals is grater than self . decimal_places:
Translation: if self . max_digits is not None and length is not than self . max_digits ,
BLEU = 28.98 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 68.8 
  2-gram: 46.7 
  3-gram:28.6 
  4-gram: 7.7 

Code line 835:     def __enter__ ( self ) :
Original: define the method __enter__ with argument self .
Translation: define __enter__ method with self as the argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 836:  return cls ( file_dict [ 'filename' ] ,  file_dict [ 'content' ] ,  file_dict . get ( 'content-type' , 'text/plain' ) )
Original: call the method cls with 3 arguments: value under the ' filename ' key of file_dict , value under the ' content ' key of file_dict ,
Translation: return a tuple containing 0 elements : value under the ' _UNK ' key of the dictionary dictionary , called with an empty string , and empty list , return a list containing a value .
BLEU = 10.62 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=36, Reference length=27)
  1-gram: 33.3 
  2-gram: 14.3 
  3-gram:8.8 
  4-gram: 3.0 

Code line 837:  for form in self . extra_forms :
Original: for every form in self . extra_forms ,
Translation: for every form in self . empty_values ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 838:   except VariableDoesNotExist :
Original: if VariableDoesNotExist exception is caught ,
Translation: if VariableDoesNotExist exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 839:  directory_created = { }
Original: directory_created is an empty dictionary .
Translation: _translations is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 840:               value = ConvertingTuple ( value )
Original: value is an instance of ConvertingTuple class , created with an argument value .
Translation: value is an instance of ConvertingDict class , created with an argument value .
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 92.9 
  2-gram: 84.6 
  3-gram:75.0 
  4-gram: 63.6 

Code line 841:  d = self . config [ m . groups ( ) [ 0 ] ]
Original: call the method m . groups , use the first element of the result as key for obtaining value from self . config dictionary , substitute it for d .
Translation: call the method self . second , second element of first element of second element into config , substitute result for value .
BLEU = 0.00 (Bravity Penalty=0.738, Length ratio=0.767, Translated length=23, Reference length=30)
  1-gram: 69.6 
  2-gram: 27.3 
  3-gram:9.5 
  4-gram: 0.0 

Code line 842:      backend_name = connection . settings_dict [ 'ENGINE' ] . split ( '.' ) [ - 1 ]
Original: once split at the ' . ' value under the ' ENGINE ' key of the connection . settings_dict dictionary , substitute last element of the result for backend_name .
Translation: substitute value under ' under ' ' ' of ' under ' %s ' of dirname dictionary , substitute the first element of the result for sys . exc_info .
BLEU = 19.79 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=30, Reference length=30)
  1-gram: 60.0 
  2-gram: 24.1 
  3-gram:14.3 
  4-gram: 7.4 

Code line 843:   if ( self . max_digits is not None and self . decimal_places is not None  and whole_digits > ( self . max_digits - self . decimal_places ) ) :
Original:  if self . max_digits is not None and self . decimal_places is not None and whole_digits is grater than the difference of , self . max_digits and self . decimal_places ,
Translation: if self . expression is not None and self . stdout is not None and self . stdout is not equal to integer 0 : self . stdout and _UNK is not string ,
BLEU = 29.40 (Bravity Penalty=1.000, Length ratio=1.097, Translated length=34, Reference length=31)
  1-gram: 58.8 
  2-gram: 39.4 
  3-gram:25.0 
  4-gram: 12.9 

Code line 844:     x = 0
Original: x is integer 0 .
Translation: x is an integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 845:                               field_type = 'NullBooleanField('
Original: field_type is a string ' NullBooleanField ( '
Translation: url is a string ' ( ( ) ' .
BLEU = 29.07 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8)
  1-gram: 60.0 
  2-gram: 33.3 
  3-gram:25.0 
  4-gram: 14.3 

Code line 846:  from django . utils . regex_helper import normalize
Original: from django . utils . regex_helper import normalize into default name space .
Translation: from django . utils . utils import clean_ipv0_address into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 847:               handler . addQuickElement ( 'updated' , rfc3339_date ( item [ 'updateddate' ] ) )
Original: call the method handler . addQuickElement with 2 arguments: string ' updated ' and result of the function rfc3339_date , called with an argument value under the ' updateddate ' key of the item dictionary .
Translation: call the method handler . addQuickElement with 0 arguments : string ' _UNK ' and value under the ' title ' key of the item
BLEU = 33.03 (Bravity Penalty=0.644, Length ratio=0.694, Translated length=25, Reference length=36)
  1-gram: 80.0 
  2-gram: 62.5 
  3-gram:43.5 
  4-gram: 31.8 

Code line 848:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 849:       setattr ( Module_six_moves_urllib_robotparser , attr . name , attr )
Original: set attr . name attribute of Module_six_moves_urllib_robotparser object to attr .
Translation: set attr . name attribute of the attr object to attr .
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 83.3 
  2-gram: 72.7 
  3-gram:60.0 
  4-gram: 44.4 

Code line 850:                   t = self . waiting_readers
Original: substitute self . waiting_readers for t .
Translation: substitute self . t for t .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 851:   chars = allow_lazy ( chars )
Original: call the function allow_lazy with an argument chars , substitute the result for chars .
Translation: call the function allow_lazy with an argument force_str , substitute the result for value .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 852:           super ( HttpResponse , self ) . __init__ ( * args , ** kwargs )
Original: call the __init__ method from the base class of the HttpResponse class , with the arguments: unpacked list args and unpacked dictionary kwargs .
Translation: call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 52.76 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24)
  1-gram: 84.0 
  2-gram: 58.3 
  3-gram:43.5 
  4-gram: 36.4 

Code line 853:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 854:            if initial is not None :
Original: if initial is not None ,
Translation: if initial is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 855:     def validate_unique ( self ) :
Original: define the method validate_unique with an argument self .
Translation: define the method validate_unique with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 856:               file = tempfile . NamedTemporaryFile ( suffix = '.upload' )
Original: call the method tempfile . NamedTemporaryFile with argument suffix set to string ' . upload ' .
Translation: call the method tempfile . NamedTemporaryFile set to string ' . NamedTemporaryFile ' .
BLEU = 53.24 (Bravity Penalty=0.807, Length ratio=0.824, Translated length=14, Reference length=17)
  1-gram: 92.9 
  2-gram: 76.9 
  3-gram:58.3 
  4-gram: 45.5 

Code line 857:                       old_handler = None
Original: old_handler is None .
Translation: field_value is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 0.0 

Code line 858:                   raise ValidationError (  self . error_messages [ 'invalid_pk_value' ] ,  code = 'invalid_pk_value' ,  params = { 'pk' : pk } ,  )
Original: raise an ValidationError with 3 arguments: dictionary self . error_messages value under the key ' invalid_pk_value ' , code set to string ' invalid_pk_value and params with an entry: pk for ' pk ' .
Translation: raise an ValidationError with 0 arguments : value under the ' invalid_choice ' key of the self . error_messages dictionary , code set to string ' invalid_choice ' , and code set to a list containing an entry : ' for ' for self . extra_context .
BLEU = 22.84 (Bravity Penalty=1.000, Length ratio=1.343, Translated length=47, Reference length=35)
  1-gram: 55.3 
  2-gram: 30.4 
  3-gram:17.8 
  4-gram: 9.1 

Code line 859:  value = int ( value )
Original: convert value to an integer .
Translation: convert value into an integer , substitute it for value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.833, Translated length=11, Reference length=6)
  1-gram: 45.5 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 860:  for k in doomed :
Original: for every k in doomed ,
Translation: for every k in sorted_items ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 861:                   error_messages = self . fields [ field ] . error_messages
Original: get the value under the field key of self . fields dictionary , substitute error_messages field of the result for error_messages .
Translation: substitute value under the field key of the field . fields dictionary for field field .
BLEU = 30.44 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=16, Reference length=22)
  1-gram: 87.5 
  2-gram: 53.3 
  3-gram:35.7 
  4-gram: 23.1 

Code line 862:    def csrf ( request ) :
Original: define the function csrf with an argument request .
Translation: define the function get_language_from_path with an argument request .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 863:           return locale . lower ( )
Original: convert locale to lowercase and return it .
Translation: convert extra_classes to lowercase , return it .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 864:  return '\n' . join ( statements )
Original: join statements in a string separated by newline , return the result .
Translation: join statements into a string , separated by newlines , return it .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 69.2 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 865:  return func
Original: return func .
Translation: return func .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 866:  xreadlines = property ( lambda self : self . file . xreadlines )
Original: define lambda function that returns self . file . xreadlines field , use it as an argument for property function , put the result in xreadlines .
Translation: define lambda function that returns self . file . field field , use it as an argument for property function , put the result in
BLEU = 82.11 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 96.0 
  2-gram: 91.7 
  3-gram:87.0 
  4-gram: 81.8 

Code line 867:               return [ self [ k ] for k in self . keyOrder ]
Original: append value under k key of self dictionary to a list , for every k in self . keyOrder , return the result .
Translation: append a value under the k key of self dictionary , if k is a list .
BLEU = 20.30 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24)
  1-gram: 82.4 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 14.3 

Code line 868:  if value is None :
Original: if value is None ,
Translation: if value is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 869:  if isinstance ( stream_or_string , bytes ) :
Original: if stream_or_string is an instance of bytes ,
Translation: if stream_or_string is instance of bytes type ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 0.0 

Code line 870:    return False
Original: return boolean False .
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 871:   except ImportError :
Original: if ImportError exception is caught ,
Translation: except ImportError .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 872:               found = self . importer ( used )
Original: call the method self . importer with an argument used , substitute the result for found .
Translation: call the method self . importer with argument exc , substitute the result for extra_classes
BLEU = 57.82 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 873:               self . validators . remove ( self . _regex_validator )
Original: remove self . _regex_validator from self . validators .
Translation: call the method self . validators with an argument self . _callback_strs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.444, Translated length=13, Reference length=9)
  1-gram: 46.2 
  2-gram: 25.0 
  3-gram:9.1 
  4-gram: 0.0 

Code line 874:    return self . _client
Original: return self . _client .
Translation: return self . _client .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 875:    os . chmod ( path , stat . S_IWRITE )
Original: change access mode of path to stat . S_IWRITE mode .
Translation: call the os . os . _UNK with arguments os and msgs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 15.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 876:  for table_name in connection . introspection . table_names ( cursor ) :
Original: for every table_name in return value of the method connection . introspection . table_names called with an argument cursor ,
Translation: for every connection in return value of the method connection . introspection . table_names with argument every the result ,
BLEU = 57.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 80.0 
  2-gram: 57.9 
  3-gram:50.0 
  4-gram: 47.1 

Code line 877:    elif bmatch :
Original: otherwise if bmatch is true ,
Translation: otherwise if unpack_ipv0 is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 878:   return _serializers [ format ] . Serializer
Original: get the value under the format key of the _serializers dictionary , return the Serializer filed of the result .
Translation: get the _serializers dictionary _serializers under the format key of the _serializers .
BLEU = 34.57 (Bravity Penalty=0.584, Length ratio=0.650, Translated length=13, Reference length=20)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 879:           if close :
Original: if close is True ,
Translation: if file_ is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 880:           __str__ = serialize
Original: substitute serialize for __str__ .
Translation: substitute _iteritems for __str__ .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 881:               try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 882:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 883:                           idx = m . groups ( ) [ 0 ]
Original: call the method m . groups , substitute the first element of the result for idx .
Translation: call the method m . split_contents , substitute the result for second element of styles .
BLEU = 38.00 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 81.2 
  2-gram: 60.0 
  3-gram:35.7 
  4-gram: 15.4 

Code line 884:  param = elt [ 1 ]
Original: substitute second element of elt for param .
Translation: substitute second element of definition for definition .
BLEU = 38.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 885:    def _get_choices ( self ) :
Original: define the method _get_choices with an argument self .
Translation: define the method _get_choices with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 886:   from django . utils . datastructures import MultiValueDict
Original: from django . utils . datastructures import MultiValueDict into default name space .
Translation: from django . utils . datastructures import MultiValueDict into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 887:    def __del__ ( self ) :
Original: define __del__ method with self as the argument .
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 888:               return result
Original: return result .
Translation: return result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 889:  item . update ( kwargs )
Original: update dictionary item with an argument kwargs .
Translation: update dictionary dictionary with item .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8)
  1-gram: 83.3 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 890:           lang_code = request . session . get ( LANGUAGE_SESSION_KEY )
Original: get the value under the LANGUAGE_SESSION_KEY key of the request . session dictionary , substitute it for lang_code .
Translation: get the value under the lang_code . _UNK key of the META dictionary , substitute it for lang_code .
BLEU = 57.78 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 84.2 
  2-gram: 66.7 
  3-gram:52.9 
  4-gram: 37.5 

Code line 891:  upto = 0
Original: upto is integer 0 .
Translation: best_doublecolon_len is an integer 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 892:     raise CommandError ( "couldn't handle %s template %s." %  ( self . app_or_project , template ) )
Original: raise an CommandError exception with an argument string " couldn ' t handle %s template %s . " , replace ' %s ' with self . app_or_project and template .
Translation: raise a CommandError with an argument " %s . %s " %s %s %s " . " with arguments %s " %s " , where ' %s ' is replaced with self . dirpath and dirs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.233, Translated length=37, Reference length=30)
  1-gram: 51.4 
  2-gram: 25.0 
  3-gram:8.6 
  4-gram: 0.0 

Code line 893:   def _text_words ( self , length , truncate ) :
Original: define the method _text_words with 3 arguments: self , length and truncate .
Translation: define the method _UNK with 0 arguments : self , length and truncate .
BLEU = 45.72 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 53.8 
  3-gram:41.7 
  4-gram: 27.3 

Code line 894:      class CallbackFilter ( logging . Filter ) :
Original: derive the class CallbackFilter from logging . Filter base class .
Translation: derive the class _UNK from logging . _UNK base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 895:  for char in fmt :
Original: for every char in fmt ,
Translation: for every __ in rules ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 896:   for state , rules in states . items ( ) :
Original: call the method states . items , for every state and rules in the result ,
Translation: for every _UNK and _UNK in return value of the method _UNK . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 53.3 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 897:           return list ( reversed ( modules ) )
Original: reverse the order of modules elements , put them into a list , return it .
Translation: call the function representation with an argument , return the list of the result .
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 40.0 
  2-gram: 7.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 898:               return int ( calendar . timegm ( self . data . utctimetuple ( ) ) )
Original: call the method self . data . utctimetuple , use the result as an argument for the call to the function calendar . timegm , return result converted into an integer .
Translation: call the method self . _UNK . _UNK , return the result . _UNK called with an argument data , return the result .
BLEU = 16.72 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=24, Reference length=32)
  1-gram: 75.0 
  2-gram: 30.4 
  3-gram:13.6 
  4-gram: 9.5 

Code line 899:   if arg is None :
Original: if arg is None
Translation: if arg is None ,
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 900:    @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 901:  return '\n' . join ( statements )
Original: join statements into a string , separated by newlines , return it .
Translation: join statements into a string , separated by newlines , return it .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 902:       def __init__ ( self , max_length = None , min_length = None , * args , ** kwargs ) :
Original: define the method __init__ with 5 arguments: self , max_length set to None , min_length set to None , unpacked list args , and unpacked dictionary kwargs .
Translation: define the method __init__ with 0 arguments : self , min_value set to None , min_value set to None , unpacked dictionary args , unpacked dictionary kwargs .
BLEU = 45.53 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=28, Reference length=28)
  1-gram: 78.6 
  2-gram: 59.3 
  3-gram:38.5 
  4-gram: 24.0 

Code line 903:                 location = '//%s' % self . get_full_path ( )
Original: call the method self . get_full_path , append the result to string ' // ' , substitute it for location .
Translation: replace the ' _UNK ' in it , substitute the result for self . _UNK .
BLEU = 0.00 (Bravity Penalty=0.732, Length ratio=0.762, Translated length=16, Reference length=21)
  1-gram: 75.0 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 904:   except KeyError :
Original: if KeyError exception is caught ,
Translation: except KeyError exception is caught ,
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 905:     finally :
Original: finally perform ,
Translation: finally perform ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 906:  self . app_label = 'django_cache'
Original: self . app_label is a string ' django_cache ' .
Translation: self . app_label is a empty string .
BLEU = 43.80 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 907:                       dirnames . remove ( dirname )
Original: remove dirname from the dirnames .
Translation: remove dirname from the dirnames .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 908:            def split_url ( url ) :
Original: define the function split_url with an argument url .
Translation: define the function _UNK with an argument url .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 909:               return data
Original: return data .
Translation: return data .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 910:  from django . conf import settings
Original: from django . conf import settings into default name space .
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 911:  return RegexURLResolver ( r'^/' , [ ns_resolver ] )
Original: return an instance of a class RegexURLResolver created with arguments: raw string ' ^/ ' and a list containing an element ns_resolver .
Translation: return an instance of a class created with 0 arguments : string ' _UNK ' and empty dictionary .
BLEU = 27.57 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23)
  1-gram: 68.4 
  2-gram: 44.4 
  3-gram:23.5 
  4-gram: 18.8 

Code line 912:                   attrs = attrs or { }
Original: if attrs is false , make attrs an empty dictionary .
Translation: if attrs is not attrs , attrs it to attrs .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 54.5 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 913:     NamedTemporaryFile = TemporaryFile
Original: substitute TemporaryFile for NamedTemporaryFile .
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 914:                        file_name = disposition . get ( 'filename' )
Original: get the value under the ' filename ' key of the disposition dictionary , substitute it for file_name .
Translation: get the value under the ' filename ' key of the func dictionary , substitute it for filter_name .
BLEU = 74.44 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:70.6 
  4-gram: 62.5 

Code line 915:                initial_forms = len ( self . initial ) if self . initial else 0
Original: if self . initial is true , substitute the length of self . initial for initial_forms , if not , initial_forms is integer 0 .
Translation: if initial , initial initial for self . initial if self . otherwise substitute boolean True , otherwise otherwise is boolean False .
BLEU = 0.00 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25)
  1-gram: 60.9 
  2-gram: 22.7 
  3-gram:9.5 
  4-gram: 0.0 

Code line 916:           return self . level >= ERROR
Original: return boolean True if self . level is greater than or equals to ERROR , otherwise return boolean False .
Translation: if the value self . verbosity , if the asvar doesnt .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=12, Reference length=20)
  1-gram: 41.7 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 917:  if transfer_encoding is not None :
Original: if transfer_encoding is not None ,
Translation: if formfield_callback is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 918:           try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 919:  def timeuntil_filter ( value , arg = None ) :
Original: define the function timeuntil_filter with 2 arguments value and arg set to None .
Translation: define the function _UNK with 0 arguments value and arg set to None .
BLEU = 62.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 85.7 
  2-gram: 69.2 
  3-gram:58.3 
  4-gram: 45.5 

Code line 920:  leave_locale_alone = True
Original: leave_locale_alone is boolean True
Translation: leave_locale_alone is boolean True .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 921:  models = 'models'
Original: models is a string ' models '
Translation: models is an string ' StringIO ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 922:           for node in self . nodelist_loop :
Original: for every node in self . nodelist_loop ,
Translation: for every node in self . nodelist_loop ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 923:  self . max_expr = max_expr
Original: substitute max_expr for self . max_expr .
Translation: substitute var_name for self . _cached_loaders .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 924:  i = i + 1
Original: increment i by integer 1 , substitute the result for i .
Translation: increment i by 0 , substitute the result for i .
BLEU = 64.07 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 925:     elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
Original: otherwise if field . rel is true and field . rel is an instance of the models . ManyToOneRel object ,
Translation: otherwise if field . field is true and field . rel is an instance of models . _UNK ,
BLEU = 59.43 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21)
  1-gram: 89.5 
  2-gram: 72.2 
  3-gram:58.8 
  4-gram: 50.0 

Code line 926:               val = None
Original: val is None .
Translation: val is None .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 927:           iteritems = _iteritems
Original: substitute _iteritems for iteritems .
Translation: substitute _iteritems for iteritems .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 928:               self . connection = connection_class ( self . host , self . port , ** connection_params )
Original: self . connection is a instance of a class contained in connection_class , instantiated with arguments: self . host , self . port , and unpacked dictionary connection_params .
Translation: call the method self . _UNK with self . port and self . port , substitute the result for self . sep .
BLEU = 11.62 (Bravity Penalty=0.770, Length ratio=0.793, Translated length=23, Reference length=29)
  1-gram: 47.8 
  2-gram: 22.7 
  3-gram:9.5 
  4-gram: 5.0 

Code line 929:                   lib = get_library ( taglib )
Original: call the function get_library with an argument taglib , substitute the result for lib .
Translation: call the function get_library with an argument taglib , substitute the result for lib .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 930:   local_attrs = self . build_attrs ( id = field % id_ )
Original: call the method self . build_attrs with an argument id set to field modulus id_ , substitute the result for local_attrs .
Translation: call the method self . _UNK with an argument string ' id ' , substitute the result for id .
BLEU = 39.45 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 75.0 
  2-gram: 52.6 
  3-gram:38.9 
  4-gram: 23.5 

Code line 931:                   if path not in self . _js :
Original: if path is not contained in self . _js ,
Translation: if file is not contained in self .
BLEU = 55.07 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 932:    if options [ "daemonize" ] is None :
Original: if value under the ' daemonize ' of options dictionary is None ,
Translation: if value under the ' _UNK ' key of options dictionary is true ,
BLEU = 46.83 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 78.6 
  2-gram: 53.8 
  3-gram:41.7 
  4-gram: 27.3 

Code line 933:  return FormSet
Original: return FormSet .
Translation: return FormSet .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 934:       def curry ( _curried_func , * args , ** kwargs ) :
Original: define the function curry with 3 arguments: _curried_func , unpacked list args and unpacked dictionary kwargs .
Translation: define the function _UNK with _UNK _UNK , _UNK list args and unpacked dictionary kwargs .
BLEU = 45.02 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 75.0 
  2-gram: 53.3 
  3-gram:42.9 
  4-gram: 30.8 

Code line 935:  token = parser . next_token ( )
Original: call the method parser . next_token , substitute the result for token .
Translation: call the method parser . next_token , substitute the result for token .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 936:     @ register . filter ( is_safe = False )
Original: decorator function register . filter with an argument is_safe set to boolean False .
Translation: decorator function register . filter with an argument is_safe set to boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 937:   func ( path )
Original: call the function func with an argument path .
Translation: call the function function with an argument func .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 938:  return mark_safe ( formats . number_format ( number , abs ( p ) ) )
Original: call the method formats . number_format with 2 arguments: number and absolute value of p , use the result as an argument for the call to the mark_safe function , return the result .
Translation: call the method _trans . number_format with 0 arguments : number and number , use the result as an argument for the call to the
BLEU = 40.52 (Bravity Penalty=0.698, Length ratio=0.735, Translated length=25, Reference length=34)
  1-gram: 80.0 
  2-gram: 66.7 
  3-gram:52.2 
  4-gram: 40.9 

Code line 939:     def _add_local_translations ( self ) :
Original: define the method _add_local_translations with an argument self .
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 940: from django . utils . six . moves import html_parser as _html_parser
Original: from django . utils . six . moves import html_parser as _html_parse into default name space .
Translation: from django . utils . utils . moves import _dummy_thread as default into default name space .
BLEU = 51.18 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 82.4 
  2-gram: 62.5 
  3-gram:46.7 
  4-gram: 28.6 

Code line 941:    def get_objects ( ) :
Original: define the function get_objects .
Translation: define the function _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 942:                       cls . __unicode__ = cls . __text_cast
Original: substitute cls . __text_cast for cls . __text_cast .
Translation: substitute cls . cls for cls . __name__ .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 943:   if self . verbosity >= 2 :
Original: if self . verbosity is greater or equal to integer 2 ,
Translation: if self . verbosity is greater or equal to integer 0 ,
BLEU = 82.65 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:80.0 
  4-gram: 77.8 

Code line 944:  month_field = '%s_month'
Original: month_field is a string ' %s_month ' .
Translation: COMMENT_TAG_END is a string ' _UNK ' .
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 945:    def __hash__ ( self ) :
Original: define the method __hash__ with an argument self .
Translation: define the method __hash__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 946:           self . _archive . close ( )
Original: call the method self . _archive . close .
Translation: call the method self . _archive . close .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 947:  from django . utils . formats import localize
Original: from django . utils . formats import localize into default name space .
Translation: from django . utils . utils import localize into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 948:  def __init__ ( self , data = None , files = None , auto_id = 'id_%s' , prefix = None ,  initial = None , error_class = ErrorList ) :
Original: define the method __init__ with 7 arguments: self , data set to None , files set to None , auto_id set to an string ' id_%s ' ,
Translation: define the method __init__ with 0 arguments : self , data , files set to None , files set to None , prefix set to None , prefix set to None , prefix set to None and html set to None .
BLEU = 31.49 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=42, Reference length=28)
  1-gram: 47.6 
  2-gram: 36.6 
  3-gram:27.5 
  4-gram: 20.5 

Code line 949:     def handle_inspection ( self , options ) :
Original: define the method handle_inspection with 2 argument: self and options .
Translation: define the method _UNK with arguments self and options .
BLEU = 35.54 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 14.3 

Code line 950:  from django . utils . safestring import SafeData , EscapeData
Original: from django . utils . safestring import SafeData and EscapeData into default name space .
Translation: from django . utils . safestring import SafeData and SafeData into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 951:   def serialize ( self , queryset , ** options ) :
Original: define the method serialize with 3 arguments: self , queryset and unpacked dictionary options .
Translation: define the method handle_label with self class instance , queryset and dictionary options as arguments .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 68.8 
  2-gram: 33.3 
  3-gram:14.3 
  4-gram: 0.0 

Code line 952:  return value . lower ( )
Original: convert value to lowercase and return the result .
Translation: convert value to lowercase , return it .
BLEU = 33.76 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 953:   except ValueError :
Original: if ValueError exception is caught ,
Translation: if ValueError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 954:               filenames . append ( filename )
Original: append filename to filenames .
Translation: append filename to filename .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 955:               piece += elt [ 0 ]
Original: increment piece by firs element of elt .
Translation: increment third element of version dictionary .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 956:  for base in reversed ( new_class . __mro__ ) :
Original: for every base in new_class . __mro__ in reversed order ,
Translation: for every base in return order of six . declared_fields ,
BLEU = 26.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 63.6 
  2-gram: 30.0 
  3-gram:22.2 
  4-gram: 12.5 

Code line 957: import os
Original: import module os .
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 958:   t = getattr ( _active , "value" , None )
Original: get ' value ' attribute of the _active object , if it exists substitute it for t , if not t is None .
Translation: get ' value ' attribute of the _active object , if it exists substitute it for t , if not is None .
BLEU = 88.62 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 100.0 
  2-gram: 95.5 
  3-gram:90.5 
  4-gram: 85.0 

Code line 959:    from django . core . validators import EMPTY_VALUES
Original: from django . core . validators import EMPTY_VALUES into default name space .
Translation: from django . core . checks import AmbiguityError into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 960:  del self . _expire_info [ key ]
Original: delete the value under the key key of self . _expire_info dictionary .
Translation: delete the value under the key key of self . _expire_info .
BLEU = 84.96 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 100.0 
  2-gram: 90.9 
  3-gram:90.0 
  4-gram: 88.9 

Code line 961:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 962:                       m2m_convert = lambda v : smart_text ( field . rel . to . _meta . pk . to_python ( v ) )
Original: m2m_convert is a lambda function with an argument v , return value is the result of the function smart_text called with an argument: return value of the method field . rel . to . _meta . pk . to_python called with an argument v .
Translation: call the function smart_text with an argument settings . pk as argument , for every return value of the return value of the method obj . _meta . to_python with an argument obj .
BLEU = 19.46 (Bravity Penalty=0.724, Length ratio=0.756, Translated length=34, Reference length=45)
  1-gram: 76.5 
  2-gram: 48.5 
  3-gram:21.9 
  4-gram: 6.5 

Code line 963:     @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 964:   return media
Original: return media .
Translation: return media .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 965:    def _handle_fk_field_node ( self , node , field ) :
Original: define the method _handle_fk_field_node with arguments self , node and field .
Translation: define the method _UNK with self , field and field .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 81.8 
  2-gram: 50.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 966:   if end < 0 :
Original: if end is lesser than integer 0 ,
Translation: if end is lesser than end ,
BLEU = 55.78 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 967:  os . umask ( umask )
Original: call the method os . umask with an argument umask .
Translation: call the function os . umask with argument umask .
BLEU = 38.31 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 66.7 
  3-gram:37.5 
  4-gram: 14.3 

Code line 968:  html_gunk_re = re . compile ( r'(?:<br clear="all">|<i><\/i>|<b><\/b>|<em><\/em>|<strong><\/strong>|<\/?smallcaps>|<\/?uppercase>)' , re . IGNORECASE )
Original: call the function re . compile with 2 arguments: raw string ' ( ?:<br clear= " all " >|<i><\/i>|<b><\/b>|<em><\/em>|<strong><\/strong>|<\/?smallcaps>|<\/?uppercase> ) ' and re . IGNORECASE , substitute the result for html_gunk_re .
Translation: call the function re . compile with 0 arguments : raw string ' ? ? ? : ? ? ? ? ? ? " . * ' , substitute the result for _UNK .
BLEU = 32.43 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=34, Reference length=32)
  1-gram: 55.9 
  2-gram: 36.4 
  3-gram:28.1 
  4-gram: 19.4 

Code line 969:                   compiled_regex = re . compile ( regex , re . UNICODE )
Original: call the function re . compile with arguments regex and re . UNICODE , substitute the result for compiled_regex .
Translation: call the function re . compile with 0 arguments : re . UNICODE and re .
BLEU = 40.76 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=16, Reference length=20)
  1-gram: 81.2 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 30.8 

Code line 970:  obj = Node ( connector = self . connector , negated = self . negated )
Original: obj is an instance of Node class , created with 2 arguments: connector set to self . connector and negated set to self . negated .
Translation: instantiate iterator class created , created with self . instance and encoding set to use_tz , substitute the result for negated .
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26)
  1-gram: 54.5 
  2-gram: 23.8 
  3-gram:5.0 
  4-gram: 0.0 

Code line 971:    kwargs . update ( self . default_args )
Original: call the method kwargs . update with an argument self . default_args .
Translation: update self . namespaces dictionary with kwargs .
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13)
  1-gram: 75.0 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 972:               if not only_initial :
Original: if only_initial is false ,
Translation: if only_initial is false ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 973:  statements = sql_destroy_indexes ( app_config , self . style , connection )
Original: call the function sql_destroy_indexes with 3 arguments: app_config , self . style and connection , substitute the result for statements .
Translation: call the function sql_all with 0 arguments : self . style and connection , substitute the result for statements .
BLEU = 61.71 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 80.0 
  2-gram: 68.4 
  3-gram:61.1 
  4-gram: 52.9 

Code line 974:   except ValidationError as e :
Original: if ValidationError renamed to e , exception is caught ,
Translation: if ValidationError , renamed to e , exception is caught ,
BLEU = 74.19 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 62.5 

Code line 975:                    filename = traceback . extract_tb ( tb ) [ - 1 ] [ 0 ]
Original: call the traceback . extract_tb method with argument tb , substitute the first element of last row of the result to filename .
Translation: call the function _UNK . _UNK with first element of bits as an argument , substitute the result for second .
BLEU = 0.00 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 61.9 
  2-gram: 30.0 
  3-gram:10.5 
  4-gram: 0.0 

Code line 976:        class metaclass ( meta ) :
Original: derive the class metaclass form the meta base class .
Translation: derive the class DateTimeBaseInput from the base class FileProxyMixin .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 70.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 977:           return "UTC"
Original: return a string " UTC " .
Translation: return an string " space .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 978:   last_bit = self . template_string [ upto : ]
Original: substitute elements of self . template_string list from upto index to the end for last_lit .
Translation: substitute first list of first element of self . template_string .
BLEU = 17.13 (Bravity Penalty=0.635, Length ratio=0.688, Translated length=11, Reference length=16)
  1-gram: 63.6 
  2-gram: 30.0 
  3-gram:22.2 
  4-gram: 12.5 

Code line 979:  @ stringfilter
Original: decorator stringfilter ,
Translation: decorator stringfilter ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 980:   except ValueError :
Original: if ValueError exception is caught ,
Translation: if ValueError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 981:   return [ source [ 0 ] ] , [ params ]
Original: return a list containing first element of source and a list containing params .
Translation: return a tuple containing elements of source and source are element .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 982:  self . prog_name = os . path . basename ( self . argv [ 0 ] )
Original: call the function os . path . basename with first element of self . argv as an argument , substitute the result for self . prog_name .
Translation: call the method os . path . path into a argument , substitute the result for self . locale_paths .
BLEU = 36.00 (Bravity Penalty=0.705, Length ratio=0.741, Translated length=20, Reference length=27)
  1-gram: 75.0 
  2-gram: 57.9 
  3-gram:44.4 
  4-gram: 35.3 

Code line 983:                   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 984:   qs = qs . using ( form . instance . _state . db )
Original: call the method qs . using with an argument form . instance . _state . db , substitute the result for qs .
Translation: call the method instance . _UNK with an argument form . _UNK . _UNK .
BLEU = 22.20 (Bravity Penalty=0.587, Length ratio=0.652, Translated length=15, Reference length=23)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:30.8 
  4-gram: 16.7 

Code line 985:  translation . _info = { }
Original: translation . _info is an empty dictionary .
Translation: trans_real . _UNK is an empty dictionary .
BLEU = 54.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 986:  PREV , NEXT , KEY , RESULT = 0 , 1 , 2 , 3
Original: substitute integers 0 , 1 , 2 and 3 for PREV , NEXT , KEY and RESULT , respectivley .
Translation: import , expects_localtime , now , now are equal , integer_types and integer 000 , 0 and 0 .
BLEU = 0.00 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 47.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 987:                               comment_notes . append ( 'AutoField?' )
Original: append string ' AutoField? ' to comment_notes .
Translation: append name from ' _ ' .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 988:  import sys
Original: import module sys .
Translation: import module sys .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 989:    def decr_version ( self , key , delta = 1 , version = None ) :
Original: define the method decr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None .
Translation: define the method _UNK with self , key , key , version defaulting to integer 0 and version defaulting to None as arguments .
BLEU = 36.22 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23)
  1-gram: 79.2 
  2-gram: 47.8 
  3-gram:31.8 
  4-gram: 14.3 

Code line 990:               exc_info = ( None , record . getMessage ( ) , None )
Original: exc_info is an tuple with 3 elements: None , result of method record . getMessage and None .
Translation: to_unicode is a tuple containing elements : fdel . _UNK and None .
BLEU = 0.00 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=13, Reference length=18)
  1-gram: 46.2 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 991:    def __str__ ( self ) :
Original: define the method __str__ with an argument self .
Translation: define the method __str__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 992:  return _get_timezone_name ( get_default_timezone ( ) )
Original: call the function get_default_timezone , use the result as an argument for the call to the function _get_timezone_name , return the result .
Translation: call the function get_default_timezone , return the result in the result .
BLEU = 24.88 (Bravity Penalty=0.400, Length ratio=0.522, Translated length=12, Reference length=23)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:60.0 
  4-gram: 33.3 

Code line 993:  import sys
Original: import module sys .
Translation: import module sys .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 994:    class BadSerializer ( object ) :
Original: derive the class BadSerializer from the object base class .
Translation: derive the class _UNK from the object base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 995:   except LookupError :
Original: if LookupError exception is caught ,
Translation: if LookupError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 996:       def as_string ( self , unixfrom = False ) :
Original: define the method as_string with arguments self and unixfrom set to boolean False .
Translation: define the method flatten with 0 arguments : self and commit set to boolean False .
BLEU = 35.22 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=16, Reference length=14)
  1-gram: 75.0 
  2-gram: 46.7 
  3-gram:28.6 
  4-gram: 15.4 

Code line 997:  self . old_method_name = old_method_name
Original: substitute old_method_name for self . old_method_name .
Translation: substitute id for self . id .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 998:           full_path = self . path ( name )
Original: substitute result of the self . path function with argument name for full_path .
Translation: call the self . path . _UNK with argument name , substitute the result for
BLEU = 26.64 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 73.3 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 8.3 

Code line 999:    def handle ( self , ** options ) :
Original: define the method handle with arguments self and unpacked dictionary options .
Translation: define the method handle with self class instance and dictionary options as arguments .
BLEU = 34.23 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 78.6 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 18.2 

Code line 1000:           stream_or_string = stream_or_string . read ( )
Original: call the stream_or_string . read function , substitute the result for stream_or_string .
Translation: call the method bytes . read , substitute the result for bytes .
BLEU = 38.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:27.3 
  4-gram: 20.0 

Code line 1001:               return [ ]
Original: return an empty list .
Translation: return an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1002:   except ( ValueError , TypeError ) :
Original: if ValueError or TypeError exceptions are caught ,
Translation: if TypeError or TypeError exceptions are caught ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 1003:   elif token . token_type == 1 :
Original: otherwise if token . token_type equals integer 1 ,
Translation: otherwise if token . token_type equals integer 0 ,
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1004:                  Image . open ( file ) . verify ( )
Original: call the method Image . open with an argument file , on the result call the verify method
Translation: call the function fp . _UNK on the result fh .
BLEU = 0.00 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=11, Reference length=18)
  1-gram: 54.5 
  2-gram: 30.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1005:  if len ( list_ ) == 0 :
Original: is length of list_ equals integer 0 ,
Translation: if length of list_ equals integer 0 ,
BLEU = 84.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 85.7 
  3-gram:83.3 
  4-gram: 80.0 

Code line 1006:   return [ first_item , second_item ] , old_style_list
Original: return list with 2 elements: first_item and second_item , and old_style_list .
Translation: return a list with 0 elements : elements and a list wrapper .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 38.5 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1007:     def get_str_from_wsgi ( environ , key , default ) :
Original: define the get_str_from_wsgi function with environ , key and default as arguments .
Translation: define the function _UNK with 0 arguments : key , key and default .
BLEU = 24.02 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 30.8 
  3-gram:16.7 
  4-gram: 9.1 

Code line 1008:   except NotImplementedError :
Original: if NotImplementedError exception ,
Translation: if NotImplementedError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=6, Reference length=4)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1009:   value = int ( s , 36 )
Original: convert s to integer of base 36 , substitute it for value .
Translation: convert s and integer 0 , substitute it for s .
BLEU = 25.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13)
  1-gram: 72.7 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 12.5 

Code line 1010:    def clean ( self , value ) :
Original: define the method clean with 2 arguments: self and value .
Translation: define the method clean with arguments self and value .
BLEU = 59.54 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1011:               print ( "Running pre-migrate handlers for application %s" % app_config . label )
Original: replace ' %s ' in string " Running pre-migrate handlers for application %s " with app_config . label , print it to the standard output .
Translation: replace ' %s ' in string " for %s . label for " %s " for app_config .
BLEU = 27.60 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=18, Reference length=26)
  1-gram: 77.8 
  2-gram: 52.9 
  3-gram:31.2 
  4-gram: 26.7 

Code line 1012:    def __bool__ ( self ) :
Original: define the method __bool__ with argument self .
Translation: define the method __bool__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1013:                   if extend is True :
Original: if extend is boolean True ,
Translation: if tried is boolean True ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1014:                       i = open_tags . index ( tagname )
Original: get the index of the first occurrence of tagname , substitute it for i .
Translation: substitute the occurrence of the occurrence of the result for top .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=12, Reference length=15)
  1-gram: 66.7 
  2-gram: 18.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1015:  domain = domain . encode ( 'idna' ) . decode ( 'ascii' )
Original: call the decode function with argument string ' ascii ' on the return value of the method domain . encode with argument string ' idna ' substitute the result for domain .
Translation: call the method m . encode with an argument string ' ascii ' , call the method decode on the result with an argument string
BLEU = 20.59 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32)
  1-gram: 76.0 
  2-gram: 45.8 
  3-gram:17.4 
  4-gram: 9.1 

Code line 1016:  from django . utils . encoding import force_text , iri_to_uri
Original: from django . utils . encoding import force_text and iri_to_uri into default name space .
Translation: from django . utils . encoding import force_text and force_text into default name space .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1017:                           out . write ( ' # %s' % line )
Original: substitute ' %s ' in string ' # %s ' with line , write it to out file .
Translation: append %s to ' %s ' , with it as the result .
BLEU = 0.00 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19)
  1-gram: 69.2 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 1018:                       self . stdout . write ( "Resetting sequences\n" )
Original: write a string " Resetting sequences\n " to self . stdout stream .
Translation: write string " _UNK " to the self . stdout stream .
BLEU = 38.39 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 83.3 
  2-gram: 54.5 
  3-gram:30.0 
  4-gram: 22.2 

Code line 1019:  import cgi
Original: import module cgi .
Translation: import module .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4)
  1-gram: 100.0 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1020:                   EventHandler . modified_code = FILE_MODIFIED
Original: EventHandler . modified_code is FILE_MODIFIED .
Translation: substitute tempfile for tempfile . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 28.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1021:  from django . utils import six
Original: from django . utils import six into default name space .
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1022:    def __iter__ ( self ) :
Original: define the method __iter__ with an argument self .
Translation: define the method __iter__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1023:    class Command ( AppCommand ) :
Original: derive class Command from the base class AppCommand .
Translation: derive the class Command from the AppCommand base class .
BLEU = 34.57 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 90.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 14.3 

Code line 1024:    if new_name . find ( '__' ) >= 0 :
Original: call the method new_name . find , with an argument string ' __ ' , if it evaluates to greater or equal than integer 0 ,
Translation: if result of the method _ . group with an argument string ' __ ' or result is greater than equal to integer 0 ,
BLEU = 32.76 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 76.0 
  2-gram: 37.5 
  3-gram:26.1 
  4-gram: 18.2 

Code line 1025:           return cls ( date . year , date . month , date . day ,  time . hour , time . minute , time . second ,  time . microsecond , time . tzinfo )
Original: call the function cls with 8 arguments: date . year , date . month , date . day , time . hour , time . minute , time . second , time . microsecond , and time . tzinfo , return the result .
Translation: return year . year with 0 , sum . year . year , tzinfo . year is classes . year , d . year , d . year , d , return 0 .
BLEU = 0.00 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=34, Reference length=44)
  1-gram: 52.9 
  2-gram: 9.1 
  3-gram:3.1 
  4-gram: 0.0 

Code line 1026:  MIMEMultipart . __init__ ( self , _subtype , boundary , _subparts , ** _params )
Original: call the method MIMEMultipart . __init__ with 5 arguments: self , _subtype , boundary , _subparts and unpacked dictionary _params .
Translation: call the method __init__ . __init__ with 0 arguments : self , _UNK , _UNK , _UNK and _UNK .
BLEU = 0.00 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 60.0 
  2-gram: 26.3 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1027:   if filename . endswith ( extensions ) or filename in extra_files :
Original: if filename ends with extensions or filename is contained in extra_files ,
Translation: if filename ends with filename or filename or bit ,
BLEU = 26.58 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 14.3 

Code line 1028:                       result = middleware . process_request ( request )
Original: call the method middleware . process_request with an argument request , substitute the result for result .
Translation: call the method middleware . dumps with an argument request , substitute the result for
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1029:       def render ( self , context ) :
Original: define the method render with 2 arguments: self and context .
Translation: define the method render with 0 arguments : self and context .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1030:                               continue
Original: skip this loop execution .
Translation: skip this loop iteration .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1031:           return ''
Original: return an empty string .
Translation: return an empty string ,
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1032:     def get_bytes_from_wsgi ( environ , key , default ) :
Original: define the function get_bytes_from_wsgi with environ , key and default as arguments .
Translation: define the function cache_key with 0 arguments : key , key and default .
BLEU = 28.11 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 71.4 
  2-gram: 38.5 
  3-gram:25.0 
  4-gram: 9.1 

Code line 1033:    class _OFFSET ( Structure ) :
Original: derive the class _OFFSET from the Structure base class .
Translation: derive the class _UNK from the base class .
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1034:       return _trans . ngettext ( singular , plural , number )
Original: call the method _trans . ngettext with 3 arguments singular , plural and number .
Translation: call the method _trans . ngettext with 0 arguments : singular , plural and number .
BLEU = 68.65 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 87.5 
  2-gram: 73.3 
  3-gram:64.3 
  4-gram: 53.8 

Code line 1035:               return '0'
Original: return an string ' 0 ' .
Translation: return string ' 0 ' .
BLEU = 67.32 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 100.0 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1036:               self . stdout . write ( "Loading '%s' fixtures..." % fixture_name )
Original: call the method self . stdout . write with an argument string " Loading ' %s ' fixtures . . . " , where ' %s ' is replaced with fixture_name .
Translation: call the self . stdout . write . write method with a string " . .
BLEU = 12.53 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=16, Reference length=32)
  1-gram: 87.5 
  2-gram: 46.7 
  3-gram:21.4 
  4-gram: 15.4 

Code line 1037:                        field_value = [ getInnerText ( k ) . strip ( ) for k in keys ]
Original: call the function getInnerText with argument k , on the result call the method strip , for every k in keys , append the results to field_value list .
Translation: call the function getInnerText with argument k , for every k in return value of the method c . iteritems , for every key of
BLEU = 38.07 (Bravity Penalty=0.852, Length ratio=0.862, Translated length=25, Reference length=29)
  1-gram: 64.0 
  2-gram: 50.0 
  3-gram:39.1 
  4-gram: 31.8 

Code line 1038:               if os . fork ( ) > 0 :
Original: fork a child process , if the result equals integer 0 ,
Translation: if call the function os . _UNK ,
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=8, Reference length=12)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1039:   if not locale_dir :
Original: if locale_dir is false ,
Translation: if locale_dir is false ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1040:           parser . add_argument ( 'args' , metavar = 'app_label[.ModelName]' , nargs = '*' ,  help = 'Restricts dumped data to the specified app_label or app_label.ModelName.' )
Original: call the method parser . add_argument with 4 arguments: string ' args ' , metavar set to string ' app_label [ . ModelName ] ' , nargs set to ' * ' and help is a string ' Restricts dumped data to the specified app_label or app_label . ModelName . ' .
Translation: call the method parser . add_argument with 0 arguments : string ' _UNK ' , ' _UNK ' , help set to string ' _UNK ' . . .
BLEU = 16.65 (Bravity Penalty=0.452, Length ratio=0.558, Translated length=29, Reference length=52)
  1-gram: 79.3 
  2-gram: 46.4 
  3-gram:25.9 
  4-gram: 19.2 

Code line 1041:               self . writer_leaves ( )
Original: call the method self . writer_leaves .
Translation: call the method self . _UNK .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1042:     templatetags_modules = [ ]
Original: templatetags_modules is an empty list .
Translation: field_value is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1043:  from django . forms import Form
Original: from django . forms import Form into default name space .
Translation: from django . forms import Field into default name space .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1044:  cursor = connection . cursor ( )
Original: call the connection . cursor method , substitute the result for cursor .
Translation: call the method connection . cursor , substitute the result for cursor .
BLEU = 63.60 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1045:  return self . forms [ self . initial_form_count ( ) : ]
Original: call the self . initial_form_count method , return the sublist of self . forms , using previous result as start index to the end .
Translation: call the self . forms method from the self . forms ( return the result .
BLEU = 15.41 (Bravity Penalty=0.570, Length ratio=0.640, Translated length=16, Reference length=25)
  1-gram: 81.2 
  2-gram: 40.0 
  3-gram:21.4 
  4-gram: 7.7 

Code line 1046:  g . flatten ( self , unixfrom = unixfrom )
Original: call the method g . flatten with arguments self and unixfrom set to unixfrom .
Translation: call the method expression . flatten with arguments self and unixfrom set to unixfrom .
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1047:      for opt in [ 'fields' , 'exclude' , 'localized_fields' ] :
Original: for every opt in list containing 3 elements: strings ' fields ' , ' exclude ' and ' localized_fields ' ,
Translation: for every attr in strings containing 0 entries : ' source ' and ' opts ' ,
BLEU = 0.00 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21)
  1-gram: 64.7 
  2-gram: 25.0 
  3-gram:6.7 
  4-gram: 0.0 

Code line 1048:    def close ( self ) :
Original: define the method close with argument self .
Translation: define the method close with argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1049:     class DisallowedRedirect ( SuspiciousOperation ) :
Original: derive the class DisallowedRedirect from the SuspiciousOperation base class .
Translation: derive the class _UNK from the SyndicationFeed base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1050:                   del self . _cache [ key ]
Original: delete the value under key key of self . _cache dictionary .
Translation: delete the value under the key key of self . _cache dictionary .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1051:  return ''
Original: return an empty string .
Translation: return an empty string ,
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1052:    def _list_cache_files ( self ) :
Original: define the method _list_cache_files with argument self .
Translation: define the method _ipython_pre_000 with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1053:   if not url_fields [ 1 ] :
Original: if second element of url_fields is false ,
Translation: if first element of the url_fields is false ,
BLEU = 36.89 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1054:                   filename = file . name
Original: substitute file . name for filename .
Translation: substitute file . name for filename .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1055:   elif '=' in part :
Original: otherwise if ' = ' is contained in part ,
Translation: if if character is contained in string ' ,
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1056:     elif maxsize is None :
Original: otherwise if maxsize is None ,
Translation: otherwise if maxsize is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1057:    def extract ( self , filename ) :
Original: define the function with arguments self and filename .
Translation: define the method extract with 0 arguments : self and filename .
BLEU = 27.09 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=12, Reference length=9)
  1-gram: 66.7 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 11.1 

Code line 1058:   os . setsid ( )
Original: call the method os . setsid .
Translation: call the method os . _UNK .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1059:   if i > sys . maxint :
Original: if i is greater than sys . maxint ,
Translation: if i is greater than sys . _UNK ,
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1060:     def utcoffset ( self , dt ) :
Original: define the method utcoffset with 2 arguments: self and dt .
Translation: define the method utcoffset with 0 arguments self and dt .
BLEU = 58.77 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 37.5 

Code line 1061:           if self . _wrapped is empty :
Original: if self . _wrapped is empty ,
Translation: if self . _wrapped is contained in empty ,
BLEU = 51.33 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 77.8 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1062:                   attr_list [ 3 ] |= termios . ECHO
Original: perform binary or for operands: fourth element of_attr_list and termios . ECHO , store the result in fourth element of attr_list .
Translation: substitute first element of bits . _UNK and bits .
BLEU = 0.00 (Bravity Penalty=0.301, Length ratio=0.455, Translated length=10, Reference length=22)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1063:    if self . empty :
Original: if self . empty is true ,
Translation: if self . files is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1064:                    raise TemplateSyntaxError (  "'%s' received unexpected keyword argument '%s'" %  ( name , param ) )
Original: raise an TemplateSyntaxError exception with an argument " ' %s ' received unexpected keyword argument ' %s ' " , where ' %s ' are replaced with name and param .
Translation: raise an TemplateSyntaxError exception with an argument string " ' %s ' %s ' %s ' %s " " , where ' %s ' with name and name of name .
BLEU = 49.39 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=31, Reference length=31)
  1-gram: 77.4 
  2-gram: 60.0 
  3-gram:44.8 
  4-gram: 28.6 

Code line 1065:  ret = UnlockFileEx ( hfile , 0 , 0 , 0xFFFF0000 , byref ( overlapped ) )
Original: call the LockFileEx function with 5 arguments: hfile , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret .
Translation: call the function lazy with 0 arguments : tuple _UNK elements , integer 0 elements and _UNK , substitute the result for _UNK .
BLEU = 14.28 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=24, Reference length=36)
  1-gram: 58.3 
  2-gram: 30.4 
  3-gram:18.2 
  4-gram: 9.5 

Code line 1066:  from django . utils . six . moves import xrange
Original: from django . utils . six . moves import xrange into default name space .
Translation: from django . utils . six . moves import into default name space .
BLEU = 80.52 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 100.0 
  2-gram: 92.3 
  3-gram:83.3 
  4-gram: 72.7 

Code line 1067:  msguniq_options = [ '--to-code=utf-8' ]
Original: msguniq_options is an list with elements: string ' --to-code=utf-8 ' .
Translation: msgmerge_options is a list containing an element : ' .
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 50.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1068:                               t = select_template ( file_name )
Original: call the function select_template with an argument file_name , substitute the result for t .
Translation: call the function timedelta with an argument t , substitute the result for t .
BLEU = 57.74 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 33.3 

Code line 1069:   touch_import ( 'django.utils.encoding' , 'python_2_unicode_compatible' , decorated )
Original: call the function touch_import with 3 arguments: string ' django . utils . encoding ' , string ' python_2_unicode_compatible ' and decorated .
Translation: call the function . . function with 0 arguments : string ' %s ' , ' and opts . encoding .
BLEU = 0.00 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23)
  1-gram: 66.7 
  2-gram: 30.0 
  3-gram:5.3 
  4-gram: 0.0 

Code line 1070:  yield ''
Original: yield and empty string as the result .
Translation: yield and empty string as the result .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1071:  if self . parent_instance is not None :
Original: if self . parent_instance is not None ,
Translation: if self . decimal_places is not None ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 1072:  if not dklen :
Original: if dklen is false ,
Translation: if dklen is false ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1073:    def __getitem__ ( self , idx ) :
Original: define the method __getitem__ with 2 arguments: self and idx .
Translation: define the method __getitem__ with 0 arguments : self and idx .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1074:    class Command ( BaseCommand ) :
Original: derive the class Command from the BaseCommand base class .
Translation: derive the class Command from the BaseCommand class .
BLEU = 71.89 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 100.0 
  2-gram: 87.5 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1075:           httpd_cls = WSGIServer
Original: substitute WSGIServer for httpd_cls .
Translation: substitute silent for prefix .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1076:   termios . tcsetattr ( fd , termios . TCSANOW , attr_list )
Original: call the method termios . tcsetattr with fd , termios . TCSANOW and attr_list , as arguments .
Translation: call the method module . _UNK with 0 arguments : command . _UNK and module . _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 50.0 
  2-gram: 11.8 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1077:           pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1078:               if isinstance ( sep , unicode ) :
Original: if sep is an instance of unicode ,
Translation: if s is an instance of unicode ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 1079:  ugettext_lazy = lazy ( ugettext , six . text_type )
Original: call the function lazy with 2 arguments: ugettext and six . text_type , substitute ugettext_lazy .
Translation: call the function allow_lazy with 0 arguments : six . text_type , substitute the result for six . text_type .
BLEU = 25.35 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=20, Reference length=16)
  1-gram: 50.0 
  2-gram: 31.6 
  3-gram:22.2 
  4-gram: 11.8 

Code line 1080:    if field not in self . fields :
Original: if field is not contained in self . fields ,
Translation: if field is not contained in self . fields ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1081:               activate ( self . old_language )
Original: call the method activate with an argument self . old_language .
Translation: call the method _UNK with an argument self . _UNK .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1082:   return copy . deepcopy ( self . _wrapped , memo )
Original: call the method copy . deepcopy with 2 arguments: self . _wrapped and memo , return the result .
Translation: call the method copy . deepcopy with 0 arguments : self and self . _wrapped , return the result .
BLEU = 54.64 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 80.0 
  2-gram: 63.2 
  3-gram:50.0 
  4-gram: 35.3 

Code line 1083:     return (  format_html_join ( '' , ' {0}="{1}"' , sorted ( attrs . items ( ) ) ) +  format_html_join ( '' , ' {0}' , sorted ( boolean_attrs ) )  )
Original: call the function format_html_join twice , first time with 3 elements: an empty string , string ' { 0 } = " { 1 } " ' and sorted return value of the items of the attrs dictionary , and second time with 3 arguments: an empty string , string ' { 0 } ' , and sorted list of boolean_attrs elements , concatenate the results and return the resulting list .
Translation: return a tuple containing tuple strings tuple tuple of tuple containing 0 elements : string ' _UNK ' , and result of a function _ called with an empty string , and every element of the result .
BLEU = 5.24 (Bravity Penalty=0.409, Length ratio=0.528, Translated length=38, Reference length=72)
  1-gram: 52.6 
  2-gram: 21.6 
  3-gram:8.3 
  4-gram: 2.9 

Code line 1084:     def code_changed ( ) :
Original: define the function code_changed .
Translation: define the function _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1085:   connection = connections [ options . get ( 'database' ) ]
Original: get the value under the ' database ' key of the options dictionary , use the result as a key to get the value from the connections dictionary , substitute the result for connection .
Translation: get the value under the ' database ' key of the options dictionary , substitute it for database .
BLEU = 33.50 (Bravity Penalty=0.431, Length ratio=0.543, Translated length=19, Reference length=35)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:76.5 
  4-gram: 68.8 

Code line 1086: import inspect
Original: import module inspect .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1087:  def default ( self , o ) :
Original: define the method defalt with arguments self and o .
Translation: define the method requires_system_checks with 0 arguments self and name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 72.7 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 1088:    for locale in locales :
Original: for every locale in locales ,
Translation: for every locales in locales ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1089:               raise StopIteration ( )
Original: raise an StopIteration .
Translation: raise an StopIteration exception .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1090:    db_name = connection . creation . create_test_db ( verbosity = verbosity , autoclobber = not interactive , serialize = False )
Original: call the method connection . creation . create_test_db with verbosity set to verbosity , autoclobber set to inverse value of interactive , serialize set to boolean False , substitute the return value for db_name .
Translation: call the method connection . _UNK with 0 arguments : _UNK , _UNK set to interactive , interactive set to reset_sequences , substitute the result for pickle .
BLEU = 17.65 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=28, Reference length=35)
  1-gram: 64.3 
  2-gram: 33.3 
  3-gram:15.4 
  4-gram: 8.0 

Code line 1091:  def namespace_dict ( self ) :
Original: define the method namespace_dict with an argument self .
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1092:  for field in _parse_date_fmt ( ) :
Original: for every field in return value of the function _parse_date_fmt ,
Translation: for every field in return value of the function _parse_date_fmt ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1093:     def get_random_string ( length = 12 ,  allowed_chars = 'abcdefghijklmnopqrstuvwxyz'  'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' ) :
Original: define the function constant_time_compare with 2 arguments: length set to integer 12 ,
Translation: define the function _UNK with 0 arguments : set set to integer tuple and integers set to a tuple .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.538, Translated length=20, Reference length=13)
  1-gram: 35.0 
  2-gram: 21.1 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1094:    def make_key ( self , key , version = None ) :
Original: define the function make_key with self class instance , key and version set to None as arguments .
Translation: define the method make_key with self class instance , key and version defaulting to None as arguments .
BLEU = 68.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 88.9 
  2-gram: 76.5 
  3-gram:62.5 
  4-gram: 53.3 

Code line 1095:           self . path , self . match , self . recursive = path , match , recursive
Original: substitute path , match and recursive for self . path , self . match and self . recursive .
Translation: substitute self . path and expression , self . path , expression and self . path .
BLEU = 25.59 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 43.8 
  3-gram:26.7 
  4-gram: 7.1 

Code line 1096:                           limit_choices_to = limit_choices_to ( )
Original: call the function limit_choices_to , substitute the result for limit_choices_to .
Translation: call the limit_choices_to function , substitute the result for boundary .
BLEU = 44.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 1097:  i = i % j
Original: i is the reminder of the division of i by j .
Translation: substitute i for i for i , substitute it for i .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1098:  parser . add_argument ( '--database' , default = DEFAULT_DB_ALIAS ,  help = 'Nominates a database to print the SQL for. Defaults to the '  '"default" database.' )
Original: call the method parser . add_argument with 3 arguments: string ' --database ' , default set to DEFAULT_DB_ALIAS , and help set to a string ' Nominates a database to print the SQL for . Defaults to the " default " database . ' .
Translation: call the method parser . add_argument with 0 arguments : string ' migration_name ' , default set to a string , help set to string for the database to the database for database . " .
BLEU = 31.98 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=36, Reference length=45)
  1-gram: 80.6 
  2-gram: 51.4 
  3-gram:32.4 
  4-gram: 21.2 

Code line 1099:  errors = [ ]
Original: errors is an empty list .
Translation: errors is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1100:    def invalid_block_tag ( self , token , command , parse_until = None ) :
Original: define the method invalid_block_tag with 4 arguments: self , token , command and parse_until as None .
Translation: define the method __init__ with 0 arguments : self , command , token and token set to None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17)
  1-gram: 63.2 
  2-gram: 33.3 
  3-gram:5.9 
  4-gram: 0.0 

Code line 1101:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1102:               data [ Model . _meta . pk . attname ] = Model . _meta . pk . to_python ( d . get ( "pk" , None ) )
Original: call the method Model . _meta . pk . to_python with one argument: value under the ' pk ' key of dictionary d , or None if previous doesnt exists , substitute the result for the value under the Model . _meta . pk . attname key of data dictionary .
Translation: call the method pk . pk . pk . pk . pk , pk the key as an empty dictionary , substitute the result for value under the ' pk ' key of the data dictionary .
BLEU = 29.13 (Bravity Penalty=0.685, Length ratio=0.725, Translated length=37, Reference length=51)
  1-gram: 81.1 
  2-gram: 52.8 
  3-gram:37.1 
  4-gram: 20.6 

Code line 1103:   def __init__ ( self , * args , ** kwargs ) :
Original: define the method __init__ with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
Translation: define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 71.60 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 83.3 
  2-gram: 76.5 
  3-gram:68.8 
  4-gram: 60.0 

Code line 1104:           if self . feed [ 'language' ] is not None :
Original: if value under the ' language ' key of the self . feed dictionary is not None ,
Translation: if value under the ' language ' key of the self . feed dictionary is not None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1105:    def id_for_label ( self , id_ ) :
Original: define the method id_for_label with 2 arguments: self and id_ .
Translation: define the method id_for_label with 0 arguments : self and id_ .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1106:  if os . path . isfile ( f ) :
Original: if f is a file ,
Translation: if potfile is a file ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1107:      if opts . managed :
Original: if opts . managed is true ,
Translation: if opts . USE_I00N is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1108:               return None
Original: return None .
Translation: return None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1109:       return "'%s'" % dirname if dirname else 'absolute path'
Original: if dirname is true , return dirname converted to a string and surounded by single quotes , if not return string ' absolute path ' .
Translation: if domain into a string " %s " , where ' %s ' is replaced with path , if not path into a string .
BLEU = 0.00 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 52.0 
  2-gram: 12.5 
  3-gram:4.3 
  4-gram: 0.0 

Code line 1110:                   raise CommandError ( "%r is not a valid port number." % self . port )
Original: raise an CommandError exception with an argument string " %r is not a valid port number . " , where ' %r ' is repaced with self . port .
Translation: raise a CommandError with an argument string " Enter not a valid valid valid expression : " . " , where ' %s ' is
BLEU = 29.67 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=25, Reference length=30)
  1-gram: 68.0 
  2-gram: 45.8 
  3-gram:30.4 
  4-gram: 18.2 

Code line 1111:           database = options . get ( 'database' )
Original: substitute value under the ' database ' key of the options dictionary for database .
Translation: get the value under the ' database ' key of the options dictionary , substitute it for options .
BLEU = 57.37 (Bravity Penalty=1.000, Length ratio=1.267, Translated length=19, Reference length=15)
  1-gram: 73.7 
  2-gram: 55.6 
  3-gram:52.9 
  4-gram: 50.0 

Code line 1112:               pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1113:  result = c ( ** kwargs )
Original: call the function c with an argument unpacked dictionary kwargs , substitute the result for result .
Translation: call the function out with an argument dictionary , substitute the result for result .
BLEU = 51.47 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 33.3 

Code line 1114:                       if hasattr ( middleware , 'process_template_response' ) :
Original: if middleware has an attribute ' process_response ' ,
Translation: if middleware has an attribute ' process_response ' ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1115:  return re_newlines . sub ( '\n' , text )
Original: call the method re_newlines . sub with 2 arguments: ' \n ' and text , return the result .
Translation: call the method sub with 0 arguments : string ' _UNK ' and return result .
BLEU = 0.00 (Bravity Penalty=0.829, Length ratio=0.842, Translated length=16, Reference length=19)
  1-gram: 68.8 
  2-gram: 33.3 
  3-gram:7.1 
  4-gram: 0.0 

Code line 1116:  if '/' in path and ( ( '\\' in path and path . find ( '/' ) < path . find ( '\\' ) )  or '\\' not in path ) :
Original: if ' / ' is contained in path , and only if ' \\ ' is contained in path and index of the first occurrence of ' / ' in path is lesser than , index of the first occurrence of ' \\ ' in path , or alternatively if ' \\ ' is not contained in path ,
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.017, Translated length=1, Reference length=59)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1117:                both_before = [  Tok ( "comment" , r"/\*(.|\n)*?\*/" ) ,  Tok ( "linecomment" , r"//.*?$" ) ,  Tok ( "ws" , r"\s+" ) ,  Tok ( "keyword" , literals ( """                            break case catch class const continue debugger                            default delete do else enum export extends                            finally for function if import in instanceof                            new return super switch this throw try typeof                            var void while with                            """ , suffix = r"\b" ) , next = 'reg' ) ,  Tok ( "reserved" , literals ( "null true false" , suffix = r"\b" ) , next = 'div' ) ,  Tok ( "id" , r"""                   ([a-zA-Z_$   ]|\\u[0-9a-fA-Z]{4})   # first char                   ([a-zA-Z_$0-9]|\\u[0-9a-fA-F]{4})*  # rest chars                   """ , next = 'div' ) ,  Tok ( "hnum" , r"0[xX][0-9a-fA-F]+" , next = 'div' ) ,  Tok ( "onum" , r"0[0-7]+" ) ,  Tok ( "dnum" , r"""                     (   (0|[1-9][0-9]*)     # DecimalIntegerLiteral                         \.                  # dot                         [0-9]*              # DecimalDigits-opt                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     |                         \.                  # dot                         [0-9]+              # DecimalDigits                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     |                         (0|[1-9][0-9]*)     # DecimalIntegerLiteral                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     )                     """ , next = 'div' ) ,  Tok ( "punct" , literals ( """                          >>>= === !== >>> <<= >>= <= >= == != << >> &&                          || += -= *= %= &= |= ^=                          """ ) , next = "reg" ) ,  Tok ( "punct" , literals ( "++ -- ) ]" ) , next = 'div' ) ,  Tok ( "punct" , literals ( "{ } ( [ . ; , < > + - * % & | ^ ! ~ ? : =" ) , next = 'reg' ) ,  Tok ( "string" , r'"([^"\\]|(\\(.|\n)))*?"' , next = 'div' ) ,  Tok ( "string" , r"'([^'\\]|(\\(.|\n)))*?'" , next = 'div' ) ,  ]
Original: both_before is a list containing 14 elements , all of them are instances of Tok class , created with 2 arguments , a string and a raw string .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.034, Translated length=1, Reference length=29)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1118:     def no_style ( ) :
Original: define function no_style , without input arguments .
Translation: define the function fn .
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1119:           if proto >= 2 :
Original: if proto is greater than or equal to integer 2 ,
Translation: if _UNK is greater or equal to integer 0 ,
BLEU = 30.37 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:25.0 
  4-gram: 14.3 

Code line 1120:    def __deepcopy__ ( self , memo ) :
Original: define the method __deepcopy__ with arguments self and memo .
Translation: define the method __deepcopy__ with arguments self and memo .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1121:  from django . utils . _os import safe_join
Original: from django . utils . _os import safe_join into default name space .
Translation: from django . utils . models import upath into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1122:  for refto , refs in references . items ( ) :
Original: for every refto and refs in return value of references . items method .
Translation: for every refto and boundary in return value of the method references . items ,
BLEU = 41.37 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 16.7 

Code line 1123:  self . path_info = path_info
Original: substitute path_info for self . path_info .
Translation: substitute resolver_match for self . _encoding .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1124:  for app_label , app_migrations in changes . items ( ) :
Original: for every app_label and app_migrations in result of the method changes . items ,
Translation: for every app_label and _UNK in return value of the method _UNK . _UNK ,
BLEU = 26.01 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 66.7 
  2-gram: 35.7 
  3-gram:23.1 
  4-gram: 8.3 

Code line 1125:    def get_internal_wsgi_application ( ) :
Original: define the funtion get_internal_wsgi_application .
Translation: define the function is_valid_ipv0_address .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1126:   except VariableDoesNotExist :
Original: if VariableDoesNotExist exception is caught ,
Translation: if VariableDoesNotExist exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1127:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1128:       BaseRunserverCommand = Command
Original: substitute Command for BaseRunserverCommand .
Translation: substitute _UNK for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1129:           l = lambda x : self . make_key ( x , version = version )
Original: l is lambda function with argument x , that calls the method self . make_key with x and version set to version as arguments .
Translation: call the function force_str with lambda function x , use the result as an argument for x , if value is greater than the result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25)
  1-gram: 40.0 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1130:           return _curried_func ( * ( args + moreargs ) , ** dict ( kwargs , ** morekwargs ) )
Original: call the function _curried_func with 2 arguments: list moreargs appended to args and unpacked , unpacked dictionary created with elements of morekwargs dictionary through the kwargs mapping , return the result .
Translation: call the function _UNK with _UNK args , _UNK _UNK args of args args , and _UNK _UNK _UNK elements _UNK elements , return the
BLEU = 0.00 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32)
  1-gram: 48.0 
  2-gram: 16.7 
  3-gram:8.7 
  4-gram: 0.0 

Code line 1131:    except UnicodeEncodeError :
Original: if the UnicodeEncodeError exception is caught ,
Translation: if UnicodeEncodeError exception is caught ,
BLEU = 67.32 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 100.0 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1132:  return j
Original: return j .
Translation: return j .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1133:               yield subwidget
Original: yield subwidget , as the result of the generator .
Translation: yield one .
BLEU = 0.00 (Bravity Penalty=0.097, Length ratio=0.300, Translated length=3, Reference length=10)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1134:    if isinstance ( nodelist , NodeList ) and not isinstance ( node , TextNode ) :
Original: if nodelist is an instance of NodeList and node is not an instance of TextNode class .
Translation: if content is an instance of Node and Node or nodelist ,
BLEU = 16.08 (Bravity Penalty=0.659, Length ratio=0.706, Translated length=12, Reference length=17)
  1-gram: 58.3 
  2-gram: 27.3 
  3-gram:20.0 
  4-gram: 11.1 

Code line 1135:  tried_modules = [ ]
Original: tried_modules is an empty list .
Translation: skipped is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1136:           return s
Original: return s .
Translation: return s .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1137:  ret = LockFileEx ( hfile , flags , 0 , 0 , 0xFFFF0000 , byref ( overlapped ) )
Original: call the LockFileEx function with 6 arguments: hfile , flags , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret .
Translation: call the function _UNK with 0 arguments : _UNK elements , integer integer 0 elements , size and _UNK , substitute the result for _UNK
BLEU = 12.69 (Bravity Penalty=0.595, Length ratio=0.658, Translated length=25, Reference length=38)
  1-gram: 60.0 
  2-gram: 29.2 
  3-gram:13.0 
  4-gram: 9.1 

Code line 1138:  from django . utils . deconstruct import deconstructible
Original: from django . utils . deconstruct import deconstructible into default name space .
Translation: from django . utils . utils import escape into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1139:   prefix_norm , prefix_args = normalize ( urlquote ( _prefix ) ) [ 0 ]
Original: call the function urlquote with an argument _prefix , use the result as an argument for the call to the normalize function , substitute the fitst element of the result for prefix_norm and prefix_args , respectively .
Translation: call the function _helper with an argument kwargs , substitute the result for the result and params , without the result and params .
BLEU = 0.00 (Bravity Penalty=0.582, Length ratio=0.649, Translated length=24, Reference length=37)
  1-gram: 70.8 
  2-gram: 43.5 
  3-gram:18.2 
  4-gram: 0.0 

Code line 1140:           if block_name in parser . __loaded_blocks :
Original: if block_name is contained in parser . __loaded_blocks ,
Translation: if child is contained in settings . empty_values ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1141:               if can_fail :
Original: if can_fail is true ,
Translation: if can _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1142:    get_git_changeset . cache = changeset
Original: substitute changeset for get_git_changeset . cache .
Translation: substitute cache for cache . cache .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1143:  for name in formatters :
Original: for every name in formatters ,
Translation: for every name in name ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1144:     def conditional_content_removal ( request , response ) :
Original: define the function conditional_content_removal with request and response as the arguments .
Translation: define function function with response and response as arguments .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 80.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1145:  def __wrapper__ ( * args , ** kw ) :
Original: define the function __wrapper__ with 2 arguments: unpacked list args and unpacked dictionary kw .
Translation: define the function kw with 0 arguments : unpacked list args and unpacked dictionary kw .
BLEU = 54.24 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 75.0 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 38.5 

Code line 1146:    if filename not in _error_files :
Original: if filename is not contained in _error_files ,
Translation: if filename is contained in _serializers ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 85.7 
  2-gram: 50.0 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1147:           return self . _encoding
Original: return self . _encoding .
Translation: return self . _encoding .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1148:    def __len__ ( self ) :
Original: define the method __len__ with an argument self .
Translation: define the method __len__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1149:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1150:                       bit = next ( bits )
Original: call the method next with an argument bits , substitute the result for bit .
Translation: call the function bits with bits , bits , substitute the result for bits .
BLEU = 38.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:30.8 
  4-gram: 25.0 

Code line 1151:  return _i18n_cache_key_suffix ( request , cache_key )
Original: call the function _i18n_cache_key_suffix with request and cache_key as arguments , return the result .
Translation: call the function cache_key with request and cache_key as arguments .
BLEU = 41.95 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 90.9 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 37.5 

Code line 1152:  if callable ( initial_value ) :
Original: if initial_value is an callable object ,
Translation: if _UNK is callable object , substitute it for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.571, Translated length=11, Reference length=7)
  1-gram: 45.5 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1153:  self . html_initial_name = form . add_initial_prefix ( name )
Original: call the method form . add_initial_prefix with an argument name , substitute the result for self . html_initial_name .
Translation: call the method self . add_prefix with an argument name , substitute the result for self . _UNK .
BLEU = 63.75 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 84.2 
  2-gram: 66.7 
  3-gram:58.8 
  4-gram: 50.0 

Code line 1154:  from django . core . exceptions import SuspiciousFileOperation
Original: from django . core . exceptions import SuspiciousFileOperation into default name space .
Translation: from django . core . exceptions import ImproperlyConfigured into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1155:      return self . _get_scheme ( )
Original: call the method self . _get_scheme , return the result .
Translation: return the object of the method self .
BLEU = 28.26 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:33.3 
  4-gram: 20.0 

Code line 1156:               self . _delete ( fname )
Original: call self . _delete method with argument fname .
Translation: call the method self . _delete with argument fname .
BLEU = 40.46 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9)
  1-gram: 90.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 14.3 

Code line 1157:    url = hashlib . md5 ( force_bytes ( iri_to_uri ( request . build_absolute_uri ( ) ) ) )
Original: call iri_to_uri with return value of the request . build_absolute_uri method , us the result as the argument for the call to the force_bytes function , use the result as the argument for the call to the hashlib . mdb function , store the result in url .
Translation: call the function force_bytes . force_bytes and request . encoding function with request as the argument .
BLEU = 0.00 (Bravity Penalty=0.161, Length ratio=0.354, Translated length=17, Reference length=48)
  1-gram: 76.5 
  2-gram: 18.8 
  3-gram:6.7 
  4-gram: 0.0 

Code line 1158:      class RegexField ( CharField ) :
Original: derive the class RegexField from the base class CharField class .
Translation: derive the class CharField from the base class CharField class .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1159:               try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1160:      class EmailMultiAlternatives ( EmailMessage ) :
Original: derive the class EmailMultiAlternatives from the EmailMessage base class .
Translation: derive the class MinValueValidator from the SuspiciousOperation base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1161:     if hasattr ( middleware , 'process_response' ) :
Original: if middleware has an attribute ' process_response ' ,
Translation: if middleware has an attribute ' process_response ' ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1162:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1163:     def is_naive ( value ) :
Original: define the function is_naive with an argument value .
Translation: define the function avoid_wrapping with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1164:   def __init__ ( self , subject = '' , body = '' , from_email = None , to = None , bcc = None ,  connection = None , attachments = None , headers = None , alternatives = None ,  cc = None ) :
Original: define the method __init__ with 11 arguments: self , subject set to an empty string , body set to an empty string ,
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.043, Translated length=1, Reference length=23)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1165:    def _samefile ( src , dst ) :
Original: define the function _samefile with arguments src and dst .
Translation: define the function _UNK with arguments dst and dst .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1166:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1167:               if self . verbosity >= 1 :
Original: if self . verbosity is greater or equal to integer 1 .
Translation: if self . verbosity is greater or equal to integer 0 ,
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 81.8 
  3-gram:80.0 
  4-gram: 77.8 

Code line 1168:     def format_html_join ( sep , format_string , args_generator ) :
Original: define the function format_html_join with 3 arguments: sep , format_string and args_generator .
Translation: define the function _UNK with 0 arguments : func , val0 and upto .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 50.0 
  2-gram: 15.4 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1169:    def popitem ( self ) :
Original: define the method popitem with an argument self .
Translation: define the method popitem with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1170:            args = token . split_contents ( )
Original: call the method token . split_contents , substitute the result for args .
Translation: call the method token . split_contents , substitute the result for args .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1171:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1172:    def __delattr__ ( self , name ) :
Original: define the method __delattr__ with self and name as arguments .
Translation: define the method _UNK with 0 arguments self and name .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 1173:   else :
Original: if not .
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1174:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1175:  from django . utils . xmlutils import SimplerXMLGenerator
Original: from django . utils . xmlutils import SimplerXMLGenerator into default name space .
Translation: from django . utils . _UNK import Promise into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1176:  self . default_locale_path = None
Original: self . default_locale_path is None .
Translation: self . _post_parse_error is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1177:  handler . endElement ( "item" )
Original: call the method handler . endElement with an argument string ' item ' .
Translation: call the method handler . endElement with an argument string ' item ' .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1178:     @ register . tag
Original: register . tag decorator ,
Translation: register . tag decorator ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1179:  if len ( words ) > length :
Original: if length of words is greater than length ,
Translation: if length is greater than length of l ,
BLEU = 40.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1180:   if namespaces :
Original: if namespaces is true ,
Translation: if matches is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1181:  def url ( parser , token ) :
Original: define the function url with 2 arguments: parser and token .
Translation: define the function templatize with 0 arguments : parser and token .
BLEU = 31.70 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 1182:           import fcntl
Original: import fcntl .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1183:           if isinstance ( self . warning , Exception ) :
Original: if self . warning is an instance of Exception class ,
Translation: if self . check is an instance of Exception ,
BLEU = 48.96 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 66.7 
  3-gram:50.0 
  4-gram: 28.6 

Code line 1184:   return settings . TEMPLATE_STRING_IF_INVALID
Original: return settings . TEMPLATE_STRING_IF_INVALID .
Translation: return settings . LANGUAGE_CODE .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1185:  self . second = parser . expression ( bp )
Original: call the method parser . expression with an argument bp , substitute it for self . seconds .
Translation: call the method parser . compile_filter , substitute the first element of the result for parser .
BLEU = 24.72 (Bravity Penalty=0.943, Length ratio=0.944, Translated length=17, Reference length=18)
  1-gram: 52.9 
  2-gram: 31.2 
  3-gram:20.0 
  4-gram: 14.3 

Code line 1186:    for model in model_list :
Original: for every model in model_list ,
Translation: for model in model_list ,
BLEU = 57.89 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1187:       help = "Squashes an existing set of migrations (from first until specified) into a single new one."
Original: help is a string " Squashes an existing set of migrations ( from first until specified ) into a single new one . " .
Translation: help is a string " _UNK _UNK _UNK of _UNK _UNK of database in the module module module . " .
BLEU = 19.36 (Bravity Penalty=0.827, Length ratio=0.840, Translated length=21, Reference length=25)
  1-gram: 42.9 
  2-gram: 30.0 
  3-gram:21.1 
  4-gram: 11.1 

Code line 1188:  validate_slug = RegexValidator ( slug_re , _ ( "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens." ) , 'invalid' )
Original: validate_slug is a instance of a RegexValidator class , created with 3 arguments: slug_re , return value of the call to the function , _ with an argument string " Enter a valid ' slug ' consisting of letters , numbers , underscores or hyphens . " , and string ' invalid ' .
Translation: message is a tuple containing tuple : elements containing elements of a base class of a class _ , called with 0 : string " " , and string " _UNK a result of the valid valid string . " .
BLEU = 7.90 (Bravity Penalty=0.728, Length ratio=0.759, Translated length=41, Reference length=54)
  1-gram: 51.2 
  2-gram: 20.0 
  3-gram:5.1 
  4-gram: 2.6 

Code line 1189:   if isinstance ( loader , six . string_types ) :
Original: if loader is an instance of six . string_types ,
Translation: if loader is an instance of six . string_types ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1190:               raise ContextPopException
Original: raise an ContextPopException .
Translation: raise an exception .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1191:    def receive_data_chunk ( self , raw_data , start ) :
Original: define the method receive_data_chunk with arguments: self , raw_data and start .
Translation: define the function receive_data_chunk with arguments self , raw_data and start .
BLEU = 51.57 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 83.3 
  2-gram: 63.6 
  3-gram:40.0 
  4-gram: 33.3 

Code line 1192:  from email . mime . message import MIMEMessage
Original: from email . mime . message import MIMEMessage into default name space .
Translation: from self . mime . loader import sql_create into default name space .
BLEU = 40.90 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 50.0 
  3-gram:36.4 
  4-gram: 20.0 

Code line 1193:   except Model . DoesNotExist :
Original: if Model . DoesNotExist exception is caught ,
Translation: if . _UNK . _UNK " ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1194:  if ( BLOCK_CONTEXT_KEY in render_context and  render_context [ BLOCK_CONTEXT_KEY ] . get_block ( self . name ) is not None ) :
Original: if BLOCK_CONTEXT_KEY is contained in render_context and call to the method get_block with an argument self . name from the object , under the BLOCK_CONTEXT_KEY key of render_context dictionary dictionary evaluates to be not equal to None ,
Translation: if value is not key of the value under the method self . key key of the kwargs dictionary is not in None ,
BLEU = 0.00 (Bravity Penalty=0.558, Length ratio=0.632, Translated length=24, Reference length=38)
  1-gram: 66.7 
  2-gram: 21.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1195:   whole_digits = digits - decimals
Original: subtract decimals from digits , substitute the result for whole_digits .
Translation: substitute decimals for subtract for digits .
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=7, Reference length=11)
  1-gram: 85.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1196:    except IOError :
Original: if IOError exception is caught ,
Translation: if IOError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1197:   except LookupError :
Original: if LookupError exception is caught ,
Translation: if LookupError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1198:  end = len ( text )
Original: substitute length of text for end .
Translation: substitute length of end for end .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1199:  with lock :
Original: with lock ,
Translation: with lock ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1200:           self . name , self . nodelist , self . parent = name , nodelist , parent
Original: substitute name , nodelist and parent for self . name , self . nodelist and self . parent .
Translation: substitute name and self . name for self . name , self . name , respectively .
BLEU = 43.78 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 82.4 
  2-gram: 62.5 
  3-gram:40.0 
  4-gram: 28.6 

Code line 1201:      def build_potfiles ( self ) :
Original: define the method build_potfiles with an argument self .
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1202:       pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1203:  code = 'max_value'
Original: code is a string ' max_value '
Translation: code is a string ' max_length '
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1204:     except Exception as e :
Original: if Exception , renamed to e , exception is caught ,
Translation: if Exception , renamed to e , exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1205:                   sys . stdout . write ( self . main_help_text ( commands_only = True ) + '\n' )
Original: call the method self . main_help_text with an argument commands_only set to boolean True , append new line to it , write it to sys . stdout .
Translation: call the method self . stdout . write with new string ' _UNK ' and new it to boolean True .
BLEU = 22.31 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28)
  1-gram: 71.4 
  2-gram: 45.0 
  3-gram:26.3 
  4-gram: 11.1 

Code line 1206:   tt = time . localtime ( stamp )
Original: call the method time . localtime with an argument stamp , substitute the result for tt .
Translation: call the method time . copy with an argument tt .
BLEU = 29.89 (Bravity Penalty=0.580, Length ratio=0.647, Translated length=11, Reference length=17)
  1-gram: 90.9 
  2-gram: 70.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1207:  return version + delta
Original: sum version and delta together , return the result .
Translation: return instance ,
BLEU = 0.00 (Bravity Penalty=0.097, Length ratio=0.300, Translated length=3, Reference length=10)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1208:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1209:  import itertools
Original: import module itertools .
Translation: import module itertools .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1210:           file = file_or_path
Original: substitute file_or_path for file .
Translation: substitute the for base . string_types .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5)
  1-gram: 42.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1211:  for attr in _urllib_error_moved_attributes :
Original: for every attr in _urllib_error_moved_attributes ,
Translation: for every attr in _urllib_response_moved_attributes ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1212:             pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1213:  import os
Original: import module os .
Translation: import module os .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1214:  using = options . get ( 'database' )
Original: get the value under the ' database ' key of the options dictionary , substitute the result for database .
Translation: get the value under the ' database ' key of the options dictionary , substitute it for options .
BLEU = 75.41 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:76.5 
  4-gram: 75.0 

Code line 1215:    def urlquote_plus ( url , safe = '' ) :
Original: define the function urlquote_plus with 2 arguments: url and safe set to an empty string .
Translation: define the function url with 0 arguments : url and safe set to ' .
BLEU = 32.55 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:30.8 
  4-gram: 16.7 

Code line 1216:  for app_config in app_configs :
Original: for eery app_config in app_configs ,
Translation: for every app_config in app_configs ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1217:    def format_subject ( self , subject ) :
Original: define the method format_subject with 2 arguments: self and subject .
Translation: define the function _UNK with 0 arguments : self and subject .
BLEU = 26.20 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 58.3 
  2-gram: 36.4 
  3-gram:20.0 
  4-gram: 11.1 

Code line 1218:  for field , messages in errors . error_dict . items ( ) :
Original: call the function errors . error_dict . items , for every field and messages in the result ,
Translation: for every field , field in return value of the method field . error_dict .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:15.4 
  4-gram: 0.0 

Code line 1219:  def escape_filter ( value ) :
Original: define the function escape_filter with an argument value .
Translation: define the function _UNK with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1220: from collections import defaultdict
Original: from collections import defaultdict into default name space .
Translation: from collections import UserList into default name space .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1221:   return False
Original: return boolean False .
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1222:  while i < len ( subject ) and subject [ i ] in ( ' ' , '\t' ) :
Original: while i is lesser than length of subject and i-th element of subject is an empty space or tab character ,
Translation: while i is lesser than length of subject and subject is not equal to character space of subject is character or tab character ,
BLEU = 49.63 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=24, Reference length=21)
  1-gram: 70.8 
  2-gram: 56.5 
  3-gram:45.5 
  4-gram: 33.3 

Code line 1223:      if i >= self . initial_form_count ( ) and i >= self . min_num :
Original: if i is greater than , or equal to the result of the call to the method self . initial_form_count , and i is greater than or equal to self . min_num ,
Translation: if i is smaller than or equal and equal to equal to self . remaining and self . initial_form_count is true ,
BLEU = 16.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=22, Reference length=33)
  1-gram: 77.3 
  2-gram: 47.6 
  3-gram:25.0 
  4-gram: 5.3 

Code line 1224:  self . choice_value = force_text ( choice [ 0 ] )
Original: call the function force_text with first element of choice as an argument , substitute the result for self . choice_value .
Translation: call the function force_text with 0 arguments : first element of self . _wrapped , substitute the result for m .
BLEU = 43.04 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 76.2 
  2-gram: 55.0 
  3-gram:36.8 
  4-gram: 22.2 

Code line 1225:  role = role . upper ( )
Original: convert role to uppercase .
Translation: remove the parts to the iterable dec_part , substitute the result for dec_part .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.800, Translated length=14, Reference length=5)
  1-gram: 14.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1226:           if code is None :
Original: if code is None ,
Translation: if code is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1227:  from django . db import ( connections , router , transaction , DEFAULT_DB_ALIAS ,  IntegrityError , DatabaseError )
Original: from django . db import connections , router , transaction , DEFAULT_DB_ALIAS , IntegrityError and DatabaseError into default name space .
Translation: from django . db import connections , connections , router , transaction , transaction and namespace into default namespace .
BLEU = 52.86 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 80.0 
  2-gram: 57.9 
  3-gram:50.0 
  4-gram: 41.2 

Code line 1228:     lexer = JsLexer ( )
Original: lexer is an instance of JsLexer class .
Translation: call the method sort , substitute the result for i .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=11, Reference length=8)
  1-gram: 9.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1229:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1230:  from django . core . exceptions import DisallowedRedirect
Original: from django . core . exceptions import DisallowedRedirect into default name space .
Translation: from django . core . exceptions import ImproperlyConfigured into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1231:                       e . args = ( "Problem installing fixture '%s': %s" % ( fixture_file , e ) , )
Original: e . args is a tuple containing string " Problem installing fixture ' %s ' : %s " , where ' %s ' is replaced with fixture_file , e .
Translation: e . args is a string containing a string " : %s : %s " : %s " %s " , where ' %s ' is replaced with name and e . args , respectively .
BLEU = 40.95 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=36, Reference length=30)
  1-gram: 63.9 
  2-gram: 45.7 
  3-gram:35.3 
  4-gram: 27.3 

Code line 1232:  from django . db . migrations . optimizer import MigrationOptimizer
Original: from django . db . migrations . optimizer import MigrationOptimizer into default name space .
Translation: from django . db . migrations . _UNK import DEFAULT_TIMEOUT into default name space .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1233:  filter_expr = parser . compile_filter ( "var|%s" % ( rest ) )
Original: call the method parser . compile_filter with an argument string " var|%s " , where ' %s ' is replaced with rest , substitute the result for filter_expr .
Translation: call the method parser . _UNK with an argument string ' _UNK ' , substitute the result for _UNK .
BLEU = 32.11 (Bravity Penalty=0.638, Length ratio=0.690, Translated length=20, Reference length=29)
  1-gram: 85.0 
  2-gram: 57.9 
  3-gram:44.4 
  4-gram: 29.4 

Code line 1234:  seconds = abs ( seconds )
Original: substitute absolute seconds for seconds .
Translation: call the function timedelta with an argument offset , substitute the result for html .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.500, Translated length=15, Reference length=6)
  1-gram: 20.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1235:  self . waiting_readers = 0
Original: self . waiting_readers is an integer 0 .
Translation: self . waiting_readers is integer 0 .
BLEU = 51.54 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 100.0 
  2-gram: 83.3 
  3-gram:60.0 
  4-gram: 25.0 

Code line 1236:                       lookup_str = callback . __module__ + "." + callback . __class__ . __name__
Original: join callback . __module__ , character " . " and callback . __class__ . __name__ together , substitute the result for lookup_str .
Translation: join callback . __name__ . __name__ " .
BLEU = 0.00 (Bravity Penalty=0.153, Length ratio=0.348, Translated length=8, Reference length=23)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1237:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1238:  return e
Original: return e .
Translation: return e .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1239:                   exclude . append ( f . name )
Original: append f . name to exclude .
Translation: append f . name to exclude .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1240:           return int ( value ) + int ( arg )
Original: convert value and arg into a integers , return their sum .
Translation: convert value and value into a number , convert arg converted into a integer , return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.583, Translated length=19, Reference length=12)
  1-gram: 47.4 
  2-gram: 22.2 
  3-gram:5.9 
  4-gram: 0.0 

Code line 1241:  RFC850_DATE = re . compile ( r'^\w{6,9}, %s-%s-%s %s GMT$' % ( __D , __M , __Y2 , __T ) )
Original: call the function re . compile with an argument raw string ' ^\w { 6 , 9 } , %s-%s-%s %s GMT$ ' formated with __D , __M , __Y2 and __T , substitute the result for RFC850_DATE .
Translation: call the function re . compile with an argument raw string ' _UNK ? %s %s %s ' formated with command , __M , __T and __T .
BLEU = 35.61 (Bravity Penalty=0.675, Length ratio=0.718, Translated length=28, Reference length=39)
  1-gram: 78.6 
  2-gram: 59.3 
  3-gram:46.2 
  4-gram: 36.0 

Code line 1242:  import keyword
Original: import module keyword .
Translation: import module socket .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1243:               return data . getlist ( name )
Original: call the method data . getlist with an argument name , return the result .
Translation: call the method data . getlist with an argument name , return the result .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1244:   elif ch == ':' :
Original: otherwise if ch equals a string ' : ' ,
Translation: otherwise if ch equals a string ' ) ' ,
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 57.1 

Code line 1245:                   if not isinstance ( messages , ValidationError ) :
Original: if messages is not an instance of the ValidationError class ,
Translation: if message is not an instance of the ValidationError class ,
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:77.8 
  4-gram: 75.0 

Code line 1246:    def escape ( text ) :
Original: define the function escape with an argument text .
Translation: define the function escape with an argument text .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1247:    def strptime ( self , value , format ) :
Original: define the method strptime with arguments self , value and format .
Translation: define the method strptime with arguments self , value and format .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1248:  def dumps ( self , obj ) :
Original: define the method dumps with arguments self and obj .
Translation: define the method end_object with arguments self and obj .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1249:  self . day_none_value = self . none_value
Original: substitute self . none_value for self . day_none_value .
Translation: substitute self . none_value for self . token .
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:71.4 
  4-gram: 66.7 

Code line 1250:    if six . PY3 :
Original: if six . PY3 is true ,
Translation: if PY0 PY0 of module module six is boolean True ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.571, Translated length=11, Reference length=7)
  1-gram: 36.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1251:   handler . endElement ( "author" )
Original: call the method handler . endElement with an argument string ' author ' .
Translation: call the method handler . endElement with an argument string ' title ' .
BLEU = 80.91 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 92.9 
  2-gram: 84.6 
  3-gram:75.0 
  4-gram: 72.7 

Code line 1252:     try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1253:   return doy
Original: return doy .
Translation: return guessed_path .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1254:    if fset is not None :
Original: if fset is not None ,
Translation: if fget is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1255:               self . _post , self . _files = QueryDict ( '' , encoding = self . _encoding ) , MultiValueDict ( )
Original: self . _post is an instance of QueryDict created with arguments: an empty string and encoding set to self . _encoding , self . _files is an instance of class MultiValueDict .
Translation: self . _post is an instance of QueryDict created with an arguments : encoding set to a string , encoding and self . encoding , respectively .
BLEU = 36.17 (Bravity Penalty=0.831, Length ratio=0.844, Translated length=27, Reference length=32)
  1-gram: 74.1 
  2-gram: 46.2 
  3-gram:36.0 
  4-gram: 29.2 

Code line 1256:                   raise ValueError ( 'Unknown level: %r' % level )
Original: raise an ValueError exception with an argument string ' Unknown level: %r ' formated with level .
Translation: raise an ValueError exception with argument string ' Invalid not found : %s " , where ' %s ' is replaced with key .
BLEU = 21.33 (Bravity Penalty=1.000, Length ratio=1.412, Translated length=24, Reference length=17)
  1-gram: 45.8 
  2-gram: 26.1 
  3-gram:18.2 
  4-gram: 9.5 

Code line 1257:           result = super ( ChoiceField , self ) . __deepcopy__ ( memo )
Original: call the method __deepcopy__ from the base class of the class ChoiceField , with an argument memo , substitute the result for result .
Translation: call the method __deepcopy__ with an argument memo from the base class of the class TypedChoiceField , substitute the result for result .
BLEU = 68.43 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 95.7 
  2-gram: 81.8 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1258:     else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1259:                        unhandled_params . pop ( 0 )
Original: remove first element of unhandled_params .
Translation: remove first element from one as the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=9, Reference length=6)
  1-gram: 44.4 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1260:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1261:                       if inplural :
Original: if inplural is true ,
Translation: if inplural is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1262:  from django . conf import settings
Original: from django . conf import settings into default name space .
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1263:    args = [ ]
Original: args is an empty list .
Translation: args is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1264:                   raise ViewDoesNotExist (  "Could not import '%s'. Parent module %s does not exist." %  ( lookup_view , mod_name ) )
Original: raise an ViewDoesNotExist exception with an argument string " Could not import ' %s ' . Parent module %s does not exist . " , where string ' %s ' is replaced by lookup_view and mod_name , respectively .
Translation: raise an CommandError with an argument string " Could not not import " %s . %s . %s " is not _UNK . " , where ' %s ' is replaced with name and filename , respectively .
BLEU = 36.61 (Bravity Penalty=0.974, Length ratio=0.974, Translated length=38, Reference length=39)
  1-gram: 71.1 
  2-gram: 45.9 
  3-gram:30.6 
  4-gram: 20.0 

Code line 1265:           raise CommandError ( "App '%s' has migrations. Only the sqlmigrate and sqlflush commands can be used when an app has migrations." % app_config . label )
Original: raise an CommandError exception , with an arguent: string " App ' %s ' has migrations . Only the sqlmigrate and sqlflush commands can be used when an app has migrations . " , where ' %s ' is replaced for app_config . label .
Translation: raise an CommandError with an argument " " The ' %s ' is a _UNK _UNK . " , where ' %s ' is not _UNK for every app loader . name . " , where ' %s ' is replaced with app_config . name .
BLEU = 26.36 (Bravity Penalty=1.000, Length ratio=1.022, Translated length=46, Reference length=45)
  1-gram: 54.3 
  2-gram: 31.1 
  3-gram:20.5 
  4-gram: 14.0 

Code line 1266:  if ext :
Original: if ext is true ,
Translation: if ext is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1267:               if level not in logging . _levelNames :
Original: if level is not contained in logging . _levelNames ,
Translation: if level is not contained in executor . _UNK ,
BLEU = 55.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:50.0 
  4-gram: 42.9 

Code line 1268:  schemes = [ 'http' , 'https' , 'ftp' , 'ftps' ]
Original: schemes is a list containing 4 initial elements: ' http ' , ' https ' , ' ftp ' and ' ftps ' .
Translation: msgmerge_options is a list containing 0 elements : ' http ' , ' upload_handlers ' , ' https ' and ' html ' .
BLEU = 45.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 75.0 
  2-gram: 60.9 
  3-gram:40.9 
  4-gram: 23.8 

Code line 1269:   def __init__ ( self , file , name = None ) :
Original: define the method __init__ with self class instance , file , and name defaulting to None as arguments .
Translation: define the method __init__ with 0 arguments : self , name and name set to None .
BLEU = 26.75 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 76.5 
  2-gram: 37.5 
  3-gram:20.0 
  4-gram: 14.3 

Code line 1270:               if self . verbosity >= 2 :
Original: if self . verbosity is greater or equal to integer 2 ,
Translation: if self . verbosity is greater or equal to integer 0 ,
BLEU = 82.65 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:80.0 
  4-gram: 77.8 

Code line 1271:    def clean ( self , data , initial = None ) :
Original: define the method clean with arguments self , data and initial set to None .
Translation: define the method data with 0 arguments : self , data and data set to None .
BLEU = 36.73 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15)
  1-gram: 76.5 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 14.3 

Code line 1272:    def __iter__ ( self ) :
Original: define the method __iter__ with an argument self .
Translation: define the method __iter__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1273:  truncate_text = self . add_truncation_text ( '' , truncate )
Original: call the method self . add_truncation_text with 2 arguments: an empty string and truncate , substitute it for truncate_text .
Translation: call the method self . add_truncation_text with 0 arguments : an empty string , substitute the result for output .
BLEU = 40.16 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 70.0 
  2-gram: 47.4 
  3-gram:33.3 
  4-gram: 23.5 

Code line 1274:   except ImproperlyConfigured as exc :
Original: if ImproperlyConfigured renamed to exc , exception is caught ,
Translation: if StandardError , renamed to exc , exception is caught ,
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:66.7 
  4-gram: 62.5 

Code line 1275:  work_file = os . path . join ( self . dirpath , thefile )
Original: join self . dirpath and thefile in a string , substitute the result for work_file .
Translation: join self . dirpath , join into a file path , substitute it for base_path .
BLEU = 20.15 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 56.2 
  2-gram: 26.7 
  3-gram:14.3 
  4-gram: 7.7 

Code line 1276:  if key in cache :
Original: if key is contained in cache ,
Translation: if key is contained in state_frame ,
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1277:  self . setFeature ( handler . feature_external_ges , False )
Original: call the method self . setFeature with 2 arguments: handler . feature_external_ges and boolean False .
Translation: call the method self . _UNK with 0 arguments : handler and self . _UNK .
BLEU = 27.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 62.5 
  2-gram: 26.7 
  3-gram:21.4 
  4-gram: 15.4 

Code line 1278:   requires_system_checks = False
Original: requires_system_checks is boolean False .
Translation: requires_system_checks is boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1279:                       temp_lib . tags [ name ] = lib . tags [ name ]
Original: substitute value under the name key of the lib . tags dictionary for value under the name key of the temp_lib . tags dictionary .
Translation: substitute value under the f . name key of the lib . tags dictionary for value under the key key .
BLEU = 56.75 (Bravity Penalty=0.827, Length ratio=0.840, Translated length=21, Reference length=25)
  1-gram: 90.5 
  2-gram: 70.0 
  3-gram:63.2 
  4-gram: 55.6 

Code line 1280:  import re
Original: import module re .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1281:  def escape_quotes ( m ) :
Original: define the function escape_quotes with an argument m .
Translation: define the function _UNK with an argument lang_code .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1282:  from django . conf import settings
Original: from django . conf import settings into default name space .
Translation: from django . conf import settings into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1283:   urlquote = allow_lazy ( urlquote , six . text_type )
Original: call the function allow_lazy with 2 arguments: urlquote and six . text_type , substitute the result for urlquote .
Translation: call the function allow_lazy with 0 arguments : six and six . text_type , substitute the result for mark_safe .
BLEU = 59.32 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 75.0 
  2-gram: 63.2 
  3-gram:55.6 
  4-gram: 47.1 

Code line 1284:     return wrapper
Original: return wrapper .
Translation: return wrapper .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1285:               kw [ 'microsecond' ] = kw [ 'microsecond' ] . ljust ( 6 , '0' )
Original: left justify value under the ' microsecond ' key of the kw dictionary , in the field of width 6 , fill the rest with ' 0 ' , substitute the result for value under the ' microsecond ' key of the kw dictionary .
Translation: get the value under the ' microsecond ' key of the options dictionary , for the key in the integer 0 , substitute the result for value under the ' _UNK ' key of the kw dictionary .
BLEU = 49.72 (Bravity Penalty=0.832, Length ratio=0.844, Translated length=38, Reference length=45)
  1-gram: 81.6 
  2-gram: 64.9 
  3-gram:52.8 
  4-gram: 45.7 

Code line 1286:  from django . utils . deprecation import RemovedInDjango19Warning
Original: from django . utils . deprecation import RemovedInDjango19Warning into default name space .
Translation: from django . utils . deprecation import RemovedInDjango00Warning into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1287:  return True
Original: return boolean True .
Translation: return boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1288:       child_nodelists = ( 'nodelist_true' , 'nodelist_false' )
Original: child_nodelists is a tuple with 2 initial elements: strings ' nodelist_true ' and ' nodelist_false ' .
Translation: query is an tuple containing strings ' strings ' , ' escapejs ' and '
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 53.3 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1289:  msg += '\n%s:\n%s\n' % ( group_name , formatted )
Original: substitute ' %s ' in the string ' \n%s:\n%s\n ' , with group_name and formatted , substitute the result for msg .
Translation: append string ' _UNK _UNK _UNK _UNK ' , where ' %s ' by name .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=16, Reference length=22)
  1-gram: 50.0 
  2-gram: 26.7 
  3-gram:7.1 
  4-gram: 0.0 

Code line 1290:  def default ( value , arg ) :
Original: define the function default with 2 arguments value and arg .
Translation: define the function force_text with 0 arguments value and arg .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1291:               raise TemplateDoesNotExist
Original: raise an TemplateDoesNotExist exception .
Translation: raise an TemplateDoesNotExist exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1292:  jan1_weekday = self . data . replace ( month = 1 , day = 1 ) . weekday ( ) + 1
Original: call the method self . data . replace with 2 arguments: month as integer 1 and day as integer 1 , on the result call the method , weekday , increment the result by integer 1 and substitute it for jan1_weekday .
Translation: call the method self . match with 0 arguments : i and integer 0 in integer 0 , substitute the result of the result of the method _UNK . _UNK , substitute the result for self . sep .
BLEU = 13.46 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=39, Reference length=42)
  1-gram: 53.8 
  2-gram: 18.4 
  3-gram:8.1 
  4-gram: 5.6 

Code line 1293:   return ''
Original: return an empty string ,
Translation: return an empty string ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1294:       help = ( "Output the contents of the database as a fixture of the given "  "format (using each model's default manager unless --all is "  "specified)." )
Original: help is a tuple containing a string " Output the contents of the database as a fixture of the given " " format ( using each model ' s default manager unless --all is specified ) . " .
Translation: help is a string " _UNK the the base class of the base class _UNK ( " _UNK " with the given given name of " " . " .
BLEU = 0.00 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=30, Reference length=39)
  1-gram: 56.7 
  2-gram: 31.0 
  3-gram:10.7 
  4-gram: 0.0 

Code line 1295:     @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1296:  parser . add_argument ( '--noinput' , action = 'store_false' , dest = 'interactive' , default = True ,  help = 'Tells Django to NOT prompt the user for input of any kind.' )
Original: call parser . add_argument method with ' --noinput ' , action set to string ' store_false ' , dest set to string ' interactive ' , default set to boolean True and help set to string ' Tells Django to NOT prompt the user for input of any kind . ' .
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.019, Translated length=1, Reference length=52)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1297:               year_val = month_val = day_val = None
Original: year_val and month_val and day_val are set to None .
Translation: substitute value for n , if cache_timeout is None .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 20.0 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1298:   db_module = 'django.db'
Original: db_module is a string ' django . db ' .
Translation: substitute django . core . __name__ ' for ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 50.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1299:  return ( ( evens + odds ) % 10 == 0 )
Original: sum evens and odds , if the result is divisible by integer 10 , return boolean True , if not return boolean False .
Translation: _UNK _UNK _UNK _UNK _UNK _UNK _UNK equals _UNK , _UNK with 00 00 , return the result .
BLEU = 0.00 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24)
  1-gram: 31.6 
  2-gram: 11.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1300:  raise self . source_error ( source , msg )
Original: raise an self . source_error exception with 2 arguments: source and msg .
Translation: call the method self . _UNK with arguments self and source .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 50.0 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1301:  if link is not None :
Original: if link is not None ,
Translation: if varargs is not None ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1302:     class Command ( BaseCommand ) :
Original: derive class Command from base class BaseCommand .
Translation: derive the class Command from the BaseCommand class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1303:    if msg :
Original: if msg is true ,
Translation: if msg is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1304:    def __repr__ ( self ) :
Original: define the method __repr__ with an argument self .
Translation: define the method __repr__ with argument self .
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 40.0 

Code line 1305:    def more ( self ) :
Original: define the method more with an argument self .
Translation: define the method __init__ with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1306:               et , ev , tb = sys . exc_info ( )
Original: call the sys . exc_info function , assign the result to et , ev and tb , respectively .
Translation: call the function _UNK . _UNK , substitute the result for now and now , respectively .
BLEU = 0.00 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19)
  1-gram: 64.7 
  2-gram: 25.0 
  3-gram:6.7 
  4-gram: 0.0 

Code line 1307:  thread . start_new_thread ( main_func , args )
Original: call the function thread . start_new_thread with main_func and args as arguments .
Translation: call the function _UNK . _UNK with arguments args and args .
BLEU = 0.00 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 75.0 
  2-gram: 27.3 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1308:           return mark_safe ( message )
Original: call the function mark_safe with an argument message , return the result .
Translation: call the function mark_safe with an argument message , return the result .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1309:                       break
Original: break the loop execution ,
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1310:                       end_text_pos = pos
Original: substitute pos for end_text_pos .
Translation: substitute urlconf_name for integer_types .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1311:  import glob
Original: import module glob .
Translation: import module glob .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1312:           result = self . __class__ ( '' , mutable = True , encoding = self . encoding )
Original: call the method self . __class__ with 3 arguments: an empty string , mutable is boolean True , encoding is self . encoding , substitute the result for result .
Translation: call the method self . __class__ with 0 arguments : an empty string , encoding is boolean True , encoding and encoding , substitute the
BLEU = 47.83 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=25, Reference length=30)
  1-gram: 80.0 
  2-gram: 70.8 
  3-gram:56.5 
  4-gram: 36.4 

Code line 1313:               field_list . append ( ( f . name , formfield ) )
Original: append a tuple with 2 elements: f . name and formfield to field_list .
Translation: append a tuple with 0 elements : f . name and boolean to result .
BLEU = 34.79 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 66.7 
  2-gram: 42.9 
  3-gram:30.8 
  4-gram: 16.7 

Code line 1314:               end = newline
Original: substitute space for end .
Translation: substitute end for end .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1315:  all_files = [ ]
Original: all_files is an empty list .
Translation: all_models is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1316:                   field_value = smart_text ( field_value , options . get ( "encoding" , settings . DEFAULT_CHARSET ) , strings_only = True )
Original: call the smart_text function with 3 arguments: field_value , value under the ' encoding ' key of the options dictionary or , settings . DEFAULT_CHARSET if the key doesnt exists and strings_only set to boolean True .
Translation: call the function format_html with 0 arguments : settings . _UNK set to boolean True , and settings . _UNK as empty True , substitute the result for settings .
BLEU = 9.73 (Bravity Penalty=0.792, Length ratio=0.811, Translated length=30, Reference length=37)
  1-gram: 50.0 
  2-gram: 17.2 
  3-gram:7.1 
  4-gram: 3.7 

Code line 1317:               widget . input_type = 'hidden'
Original: widget . input_type is a string ' hidden ' .
Translation: remove . __name__ set to string ' formfield_callback ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 50.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1318:           objects = json . loads ( stream_or_string )
Original: call the function json . loads with an argument stream_or_string , substitute the result for objects .
Translation: call the method os . unlink with argument local , substitute it for rawdata .
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 60.0 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1319:     def autodiscover_modules ( * args , ** kwargs ) :
Original: define the function autodiscover_modules with 2 arguments unpacked list args and unpacked dictionary kwargs .
Translation: define the function _UNK with _UNK list args and dictionary kwargs as arguments .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 78.6 
  2-gram: 38.5 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1320:   register = Library ( )
Original: register is an instance of Library class .
Translation: register is an instance of Library class .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1321:    def value_from_datadict ( self , data , files , name ) :
Original: define the method value_from_datadict with 4 arguments: self , data , files and name .
Translation: define the method value_from_datadict with 0 arguments : self , data , files and name .
BLEU = 67.39 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 81.2 
  2-gram: 73.3 
  3-gram:64.3 
  4-gram: 53.8 

Code line 1322:                       os . makedirs ( filename )
Original: create directories from the elements in filename .
Translation: create directories from the elements in filename .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1323:               exc_info = sys . exc_info ( )
Original: call the function sys . exc_info with an argument exc_info .
Translation: call the method sys . exc_info , substitute the result for fd .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 46.2 
  2-gram: 25.0 
  3-gram:9.1 
  4-gram: 0.0 

Code line 1324:     return the_path
Original: return the_path .
Translation: return translated .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1325:           ending = self . ending if ending is None else ending
Original: if ending is None substitute self . ending for ending .
Translation: if self . files None is None ,
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1326:  full_path = self . path ( name )
Original: call the method self . path with argument name , substitute the result for full_path .
Translation: call the self . path . _UNK with argument name , substitute the result for
BLEU = 58.18 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 93.3 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 41.7 

Code line 1327:               return False
Original: return boolean False .
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1328:  return ''
Original: return an empty string .
Translation: return an empty string ,
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1329:           yaml . dump ( self . objects , self . stream , Dumper = DjangoSafeDumper , ** self . options )
Original: call the function yaml . dump with 4 arguments: self . objects , self . stream , Dumper=DjangoSafeDumper and unpacked dictionary self . options .
Translation: call the function zipfile . _UNK with 0 arguments : self . stream , self . stream and self . stream as arguments , unpacked the result . _UNK called with an argument options .
BLEU = 17.92 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=35, Reference length=25)
  1-gram: 51.4 
  2-gram: 26.5 
  3-gram:12.1 
  4-gram: 6.2 

Code line 1330: from __future__ import unicode_literals
Original: from __future__ import unicode_literals into default name space .
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1331:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1332:               return op ( )
Original: call the function op , return the result .
Translation: return an instance of the class class .
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 37.5 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1333:   return split
Original: return split .
Translation: return integer .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1334:  pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
Original: call the pickle . dumps function with value and pickle . HIGHEST_PROTOCOL as arguments .
Translation: call the function pickle . dumps with value and pickle . HIGHEST_PROTOCOL as arguments , substitute the result for pickled .
BLEU = 43.72 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=21, Reference length=15)
  1-gram: 71.4 
  2-gram: 50.0 
  3-gram:36.8 
  4-gram: 27.8 

Code line 1335:                   return [ ]
Original: return an empty list .
Translation: return an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1336:    def _has_changed ( self , initial , data ) :
Original: define the method _has_changed with 3 arguments: self , initial and data .
Translation: define the method _has_changed with arguments self , initial and data .
BLEU = 67.61 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:70.0 
  4-gram: 55.6 

Code line 1337:           raise ValidationError ( error_message , code = 'invalid' )
Original: raise an ValidationError exception with 2 arguments: error_message and code as a string ' invalid ' .
Translation: raise an ValidationError with 0 arguments : value and invalid set to a string ' invalid ' .
BLEU = 35.41 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 61.1 
  2-gram: 41.2 
  3-gram:31.2 
  4-gram: 20.0 

Code line 1338:           return self . load_template ( template_name , template_dirs )
Original: call the method self . load_template with 2 arguments: template_name and template_dirs , return the result .
Translation: return the tuple containing the self . template_name and template_name , if it .
BLEU = 0.00 (Bravity Penalty=0.807, Length ratio=0.824, Translated length=14, Reference length=17)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1339:     function_name = ( name or  getattr ( func , '_decorated_function' , func ) . __name__ )
Original: if name is true , substitute it for function_name , if not get ' _decorated_function ' attribute from func object , if it exists , substitute __name__ field of the result for function_name , in not , substitute func . __name__ for function_name .
Translation: if name is true , substitute __name__ for ' __name__ ' attribute of __name__ __name__ , if not func , substitute func . __name__ for
BLEU = 23.23 (Bravity Penalty=0.468, Length ratio=0.568, Translated length=25, Reference length=44)
  1-gram: 88.0 
  2-gram: 58.3 
  3-gram:43.5 
  4-gram: 27.3 

Code line 1340:                       middle = middle [ len ( opening ) : ]
Original: substitute elements of middle from length of opening index to the end , for middle .
Translation: substitute length of length of middle for length , for length .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 66.7 
  2-gram: 27.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1341:   return datetime ( * kw )
Original: call the function datetime with an argument unpacked list kw , return the result .
Translation: call the method datetime with an argument kw , return the result .
BLEU = 53.45 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 92.3 
  2-gram: 75.0 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1342:           self . view_name = view_name
Original: substitute view_name for self . view_name .
Translation: substitute cached_loaders for self . view_name .
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1343:   httpd . set_app ( wsgi_handler )
Original: call the method httpd . set_app with an argument wsgi_handler .
Translation: call the method _UNK . _UNK .
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=7, Reference length=11)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1344:    def accessed_time ( self , name ) :
Original: define the method accessed_time with arguments self and name .
Translation: define the method accessed_time with arguments self and name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1345:           return
Original: return nothing .
Translation: return nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1346:  self . app_name = app_name
Original: substitute app_name for self . app_name .
Translation: substitute app_name for self . app_name .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1347:                    raise ImportError
Original: raise an ImportError exception .
Translation: raise an ImportError exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1348:      def to_locale ( language , to_lower = False ) :
Original: define the function to_locale with 2 arguments language and to_lower set to boolean False .
Translation: define the function _UNK with an argument table_name set to boolean False .
BLEU = 34.15 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 69.2 
  2-gram: 50.0 
  3-gram:36.4 
  4-gram: 20.0 

Code line 1349:                   self . saved_forms . append ( form )
Original: append form to self . saved_forms .
Translation: append form to self . saved_forms .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1350:  self . __dict__ [ '_setupfunc' ] = func
Original: substitute func for value under the ' _setupfunc ' key of the self . __dict__ dictionary .
Translation: substitute func for value under the ' attname ' key of the self . feed dictionary .
BLEU = 66.75 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 88.2 
  2-gram: 75.0 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1351:           attr = import_string ( dotted_path )
Original: call the function import_string with an argument dotted_path , substitute the result for attr .
Translation: call the function new_method_proxy with argument backend , substitute the result for k .
BLEU = 35.85 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 78.6 
  2-gram: 46.2 
  3-gram:33.3 
  4-gram: 18.2 

Code line 1352:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1353:               post = ( pformat ( POST_override )  if POST_override is not None  else pformat ( request . POST ) )
Original: get is a tuple containing elements generated by the call to the function pformat with an argument POST_override , if POST_override is not None , or otherwise generated with the call to the function pformat with an argument request . POST .
Translation: create is a tuple containing elements of the call to the function pformat with an argument connection , for every connection is None .
BLEU = 24.10 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=24, Reference length=42)
  1-gram: 75.0 
  2-gram: 52.2 
  3-gram:45.5 
  4-gram: 38.1 

Code line 1354:                   targets = [ ( app_label , None ) ]
Original: targets is a list containing tuple with two elements , app_label and None .
Translation: put list containing tuple containing initial elements and None for None .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 58.3 
  2-gram: 36.4 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1355:               raise AttributeError ( self . warning )
Original: raise an raise self . warning with an argument self . warning .
Translation: raise raise exception with an argument self .
BLEU = 30.10 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13)
  1-gram: 87.5 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1356:           if size is None :
Original: if size is None ,
Translation: if size is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1357:           client = self . _lib . Client ( self . _servers )
Original: call the method self . _lib . Client with argument self . _servers .
Translation: call the method self . _lib . _lib with argument self . _wrapped , substitute the result for _UNK .
BLEU = 42.46 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=20, Reference length=14)
  1-gram: 60.0 
  2-gram: 47.4 
  3-gram:38.9 
  4-gram: 29.4 

Code line 1358:               _ = { }
Original: _ is an empty dictionary .
Translation: _translations is an empty dictionary .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1359:   randint = random . randrange ( 100000 )
Original: call the function random . randrange with argument integer 100000 , substitute the result for randint .
Translation: call the method _UNK . _UNK , substitute the result for _UNK .
BLEU = 26.04 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17)
  1-gram: 69.2 
  2-gram: 41.7 
  3-gram:27.3 
  4-gram: 20.0 

Code line 1360:  addr = '@' . join ( [ localpart , domain ] )
Original: join localpart and domain in a string separated by ' @ ' character , substitute it for addr .
Translation: join list of list of 0 element of valid string into a string , separated by ' .
BLEU = 0.00 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 44.4 
  2-gram: 17.6 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1361:   if remaining is None :
Original: if remaining is None ,
Translation: if _globs_ is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1362:   from django . core . management . base import CommandError
Original: from django . core . management . base import CommandError into default name space .
Translation: from django . core . management . base import CommandError into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1363:  return VerbatimNode ( nodelist . render ( Context ( ) ) )
Original: call the method nodelist . render with an argument , an instance of Context class , use the result as an argument for the creation of , an instance of VerbatimNode class , return it .
Translation: call the method smart_text . render , return the value , return the result .
BLEU = 0.00 (Bravity Penalty=0.247, Length ratio=0.417, Translated length=15, Reference length=36)
  1-gram: 80.0 
  2-gram: 35.7 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1364:     translation . activate ( settings . LANGUAGE_CODE )
Original: call the method translation . activate with an argument settings . LANGUAGE_CODE .
Translation: call the method translation . activate with an argument settings . LANGUAGE_CODE .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1365:                           new_context [ 'csrf_token' ] = csrf_token
Original: substitute csrf_token for value under the ' csrf_token ' key of new_context dictionary .
Translation: substitute number_value for value under ' fg ' for defaults .
BLEU = 0.00 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14)
  1-gram: 63.6 
  2-gram: 20.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1366:  if self . data . minute == 0 and self . data . hour == 0 :
Original: if self . data . minute equals integer 0 and self . data . hour equals integer 0 ,
Translation: if self . data . data equals integer 0 and self . data . _UNK equals integer 0 ,
BLEU = 68.88 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 89.5 
  2-gram: 77.8 
  3-gram:64.7 
  4-gram: 50.0 

Code line 1367:                   filterer . addFilter ( self . config [ 'filters' ] [ f ] )
Original: get the value under f key of dictionary under ' filters ' key of self . config dictionary , use the result as an argument for the call to the method filterer . addFilter .
Translation: call the method self . _UNK . _UNK with an argument string under ' _UNK ' key of config dictionary .
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=21, Reference length=35)
  1-gram: 76.2 
  2-gram: 35.0 
  3-gram:5.3 
  4-gram: 0.0 

Code line 1368:  self . _view_middleware = [ ]
Original: self . _view_middleware is an empty list .
Translation: self . _unget_history is an empty list .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1369:               value = signing . get_cookie_signer ( salt = key + salt ) . unsign (  cookie_value , max_age = max_age )
Original: call the method signing . get_cookie_signer with an argument salt set to sum of key and salt , call the method unsign on the result , with arguments cookie_value and max_age set to max_age .
Translation: call the method unicodedata with an argument key , _UNK set to result of the function datetime . encode called with argument set to value and _UNK set to _UNK , substitute the result for value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.057, Translated length=37, Reference length=35)
  1-gram: 56.8 
  2-gram: 19.4 
  3-gram:5.7 
  4-gram: 0.0 

Code line 1370:       pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1371:                   raise SignatureExpired (  'Signature age %s > %s seconds' % ( age , max_age ) )
Original: raise an SignatureExpired exception with an argument string ' Signature age %s > %s seconds ' , where ' %s ' is replaced by age and max_age , respectively .
Translation: raise an ImproperlyConfigured exception with an argument string ' %s ' in _UNK for %s in domain , replace ' %s ' is replaced with
BLEU = 30.63 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=25, Reference length=30)
  1-gram: 68.0 
  2-gram: 41.7 
  3-gram:30.4 
  4-gram: 22.7 

Code line 1372:                   self . stdout . write ( "  Installing custom SQL...\n" )
Original: write the string " Installing custom SQL . . . \n " to the standard output .
Translation: write new string " . . \n " , write the result to self . stdout stream .
BLEU = 19.67 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 61.1 
  2-gram: 29.4 
  3-gram:12.5 
  4-gram: 6.7 

Code line 1373:               continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1374:                   obj = template_localtime ( obj , context . use_tz )
Original: call the function template_localtime with 2 arguments: obj and context . use_tz , substitute the result for obj .
Translation: obj the function obj with the obj obj and obj , substitute the obj obj and obj .
BLEU = 0.00 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 55.6 
  2-gram: 29.4 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1375:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1376:  callback , callback_args , callback_kwargs = resolver_match
Original: assign the values to the callback , callback_args , callback_kwargs , respectively , from the resolver_match tuple .
Translation: substitute bits and closing and int_part .
BLEU = 0.00 (Bravity Penalty=0.208, Length ratio=0.389, Translated length=7, Reference length=18)
  1-gram: 14.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1377:  read = property ( lambda self : self . file . read )
Original: define lambda function that returns self . file . read field , use it as an argument for property function , put the result in read .
Translation: define lambda function that that self . file . field field , use it as an argument for property function , put the result in
BLEU = 71.53 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 92.0 
  2-gram: 83.3 
  3-gram:73.9 
  4-gram: 63.6 

Code line 1378:    def __enter__ ( self ) :
Original: define the method __enter__ with an argument self .
Translation: define __enter__ method with self as the argument .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1379:     for dirname in dirs [ : ] :
Original: for dirname in dirs ,
Translation: for every list in dirs ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1380:    if app_labels :
Original: if app_labels is true ,
Translation: if app_labels is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1381:           return self . source_error ( token . source , msg )
Original: call the method self . source_error with 2 arguments: token . source and msg , return the result .
Translation: call the method self . _UNK with 0 arguments : token and token , return the result .
BLEU = 40.62 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19)
  1-gram: 72.2 
  2-gram: 47.1 
  3-gram:37.5 
  4-gram: 26.7 

Code line 1382:    return mail . send ( )
Original: return the evaluated result of the mail . send method .
Translation: call the method form . isoformat , return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 63.6 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1383:           for _ , nodelist in self . conditions_nodelists :
Original: for every _ and nodelist in self . conditions_nodelists ,
Translation: for every base and nodelist in nodelist , nodelist ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 60.0 
  2-gram: 33.3 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1384:  for field in self . fields . values ( ) :
Original: call the method self . fields . values , for every field in result ,
Translation: for every method self . fields , for every field in result ,
BLEU = 57.48 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 84.6 
  2-gram: 75.0 
  3-gram:63.6 
  4-gram: 50.0 

Code line 1385:                   data = str ( data )
Original: convert data to string , substitute it for data .
Translation: convert data into a string , substitute it for data .
BLEU = 63.16 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 50.0 

Code line 1386:                       lead , trail = escape ( lead ) , escape ( trail )
Original: call the function escape with an argument lead , substitute the result for lead , call the function escape with an argument trail , substitute the result for trail .
Translation: call the function escape with argument escape , substitute the result for escape , assign result for dec_part and dec_part , respectively .
BLEU = 26.74 (Bravity Penalty=0.738, Length ratio=0.767, Translated length=23, Reference length=30)
  1-gram: 73.9 
  2-gram: 40.9 
  3-gram:28.6 
  4-gram: 20.0 

Code line 1387:   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1388:                       data [ f . name ] = list ( qs . values_list ( 'pk' , flat = True ) )
Original: call the method qs . values_list with 2 arguments: string ' pk ' and flat set to boolean True , put the results in a list , substitute the result for value under the f . name key of data dictionary .
Translation: call the method f . _UNK with an argument list containing an empty string , substitute the result for value under the ' _UNK ' key of the self . namespace .
BLEU = 23.28 (Bravity Penalty=0.732, Length ratio=0.762, Translated length=32, Reference length=42)
  1-gram: 71.9 
  2-gram: 35.5 
  3-gram:23.3 
  4-gram: 17.2 

Code line 1389:  import re
Original: import module re .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1390:  from django . db import connections , DEFAULT_DB_ALIAS
Original: from django . db import connections and DEFAULT_DB_ALIAS into default name space .
Translation: from django . db import connections and DEFAULT_DB_ALIAS into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1391:    @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1392:  msg [ 'To' ] = self . extra_headers . get ( 'To' , ', ' . join ( self . to ) )
Original: call the method self . extra_headers . get with arguments: string ' To ' and joined string from self . to elements separated by ' , ' , substitute the result for value under the ' To ' key of msg dictionary .
Translation: call the self . _UNK method with 0 arguments : string ' _UNK ' , substitute the result for value under the ' _UNK ' key of the self . stream dictionary .
BLEU = 29.56 (Bravity Penalty=0.739, Length ratio=0.767, Translated length=33, Reference length=43)
  1-gram: 75.8 
  2-gram: 50.0 
  3-gram:29.0 
  4-gram: 23.3 

Code line 1393:  self . _num_pages = int ( ceil ( hits / float ( self . per_page ) ) )
Original: divide hits by a floating point number self . per_page , convert its ceiling value to an integer and substitute it for self . _num_pages .
Translation: convert self . per_page into a number of integer class , created with an argument result of self . per_page .
BLEU = 0.00 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=21, Reference length=26)
  1-gram: 57.1 
  2-gram: 15.0 
  3-gram:5.3 
  4-gram: 0.0 

Code line 1394:     @ lru_cache . lru_cache ( maxsize = None )
Original: decorator lru_cache . lru_cache with an argument maxsize set to None .
Translation: method method lru_cache . lru_cache with an argument set to None , as a decorator
BLEU = 42.31 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12)
  1-gram: 66.7 
  2-gram: 50.0 
  3-gram:38.5 
  4-gram: 25.0 

Code line 1395:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1396:    def sign ( self , value ) :
Original: define the method sign with arguments self and value .
Translation: define the method sign with arguments self and value .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1397:   def __init__ ( self , tagtype ) :
Original: define the method __init__ with 2 arguments: self and tagtype .
Translation: define the method __init__ with 0 arguments : self and index .
BLEU = 37.70 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 22.2 

Code line 1398:  SINGLE_BRACE_START = '{'
Original: SINGLE_BRACE_START is a string ' { ' .
Translation: cookies is an empty dictionary for ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 37.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1399:     def load_template ( self , template_name , template_dirs = None ) :
Original: define the method load_template with 3 arguments: self , template_name , template_dirs set to None .
Translation: define the method load_template_source with 0 arguments : self , template_name and template_dirs set to None .
BLEU = 36.01 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 70.6 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 14.3 

Code line 1400:       class CommentNode ( Node ) :
Original: derive the class CommentNode from Node base class .
Translation: derive the class _UNK from Node base class .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1401:   token = Token ( TOKEN_BLOCK , block_content )
Original: token is an instance of Token class , created with 2 arguments: TOKEN_BLOCK and block_content .
Translation: token is an tuple containing 0 elements : str and str .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16)
  1-gram: 41.7 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1402:  commands = { name : 'django.core' for name in find_commands ( __path__ [ 0 ] ) }
Original: commands is an dictionary containing elements: string ' django . core ' for every name in the function find_commands return value , called with first element of __path__ as an argument .
Translation: help is a dictionary containing the entry : ' _UNK ' of ' handlers ' for ' name ' for dirname . name , for every name in second element of the result into a string , separated by it .
BLEU = 9.43 (Bravity Penalty=1.000, Length ratio=1.281, Translated length=41, Reference length=32)
  1-gram: 39.0 
  2-gram: 15.0 
  3-gram:5.1 
  4-gram: 2.6 

Code line 1403:  import calendar
Original: import module calendar .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1404:               qs = queryset . none ( )
Original: call the method queryset . none , substitute it for qs .
Translation: call the method queryset . queryset for the result .
BLEU = 34.98 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 70.0 
  2-gram: 44.4 
  3-gram:37.5 
  4-gram: 28.6 

Code line 1405:               raise ValidationError ( self . error_messages [ 'invalid' ] , code = 'invalid' )
Original: raise an ValidationError with 2 arguments: value under the ' invalid ' key of the self . error_messages dictionary and code set to ' invalid ' .
Translation: raise an ValidationError with 0 arguments : value under the ' invalid ' key of the self . error_messages dictionary and code set to '
BLEU = 74.20 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 88.0 
  2-gram: 83.3 
  3-gram:78.3 
  4-gram: 72.7 

Code line 1406:  if self . feed [ 'feed_url' ] is not None :
Original: if value under the ' feed_url ' key of the self . feed dictionary is not None ,
Translation: if value under the ' author_link ' key of the self . feed dictionary is not None ,
BLEU = 83.94 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 94.4 
  2-gram: 88.2 
  3-gram:81.2 
  4-gram: 73.3 

Code line 1407:           if not value :
Original: if value is false ,
Translation: if value is false ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1408:   except StandardError as e :
Original: if StandardError , renamed to e , exception is caught ,
Translation: if StandardError , renamed to e , exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1409:  pflen = len ( prefixed )
Original: substitute length of prefixed for pflen .
Translation: substitute type of remaining for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 57.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1410:  signals = 'signals'
Original: signal is a string ' signals '
Translation: mixed_subtype is a string ' changed ' .
BLEU = 36.56 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 62.5 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 1411:                       lookups . appendlist ( pattern . name , ( bits , p_pattern , pattern . default_args ) )
Original: call the method lookups . appendlist with 2 arguments: pattern . name and a tuple containing 3 elements: bits , p_pattern , and pattern . default_args .
Translation: call the method MIMEText . setdefault with 0 arguments : name . name , tuple with 0 elements : p_pattern and name . name ,
BLEU = 0.00 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 52.0 
  2-gram: 12.5 
  3-gram:4.3 
  4-gram: 0.0 

Code line 1412:    def __str__ ( self ) :
Original: define the method __str__ with an argument self .
Translation: define the method __str__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1413:     @ register . tag
Original: register . tag decorator ,
Translation: register . tag decorator ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1414:    def write_message ( self , message ) :
Original: define the method write_message with arguments self and message .
Translation: define the method write_message with arguments self and message .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1415:   except smtplib . SMTPException :
Original: if smtplib . SMTPException exception is caught ,
Translation: if smtplib . _UNK exception is caught ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 1416:       is_usable = resource_string is not None
Original: if resource_string is not None , is_usable is boolean True , otherwise is_usable is boolean False .
Translation: s_len is not None , None is None .
BLEU = 13.58 (Bravity Penalty=0.411, Length ratio=0.529, Translated length=9, Reference length=17)
  1-gram: 66.7 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1417:           output . extend ( custom_sql_for_model ( model , style , connection ) )
Original: call the function custom_sql_for_model with 3 arguments: model , style and connection , extend the output with the result .
Translation: call the method connection . extend with arguments : output , style and output .
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=15, Reference length=20)
  1-gram: 66.7 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1418:   singular_suffix , plural_suffix = bits [ : 2 ]
Original: substitute first 2 elements of bits for singular_suffix and plural_suffix , respectively .
Translation: substitute first elements of bits and _UNK .
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13)
  1-gram: 87.5 
  2-gram: 42.9 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1419:      def getlist ( self , key ) :
Original: define the method getlist with 2 arguments: self and key .
Translation: define the method __delitem__ with 0 arguments : self and key .
BLEU = 31.70 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 66.7 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 1420:  def __iter__ ( self ) :
Original: define the method __iter__ with an argument self .
Translation: define the method __iter__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1421:                   deps = [ ]
Original: deps is an empty list .
Translation: if is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1422:   except AttributeError :
Original: if AttributeError exception is caught ,
Translation: if AttributeError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1423:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1424:                   checkbox_name = self . clear_checkbox_name ( name )
Original: call the method self . clear_checkbox_name with an argument name , substitute the result for checkbox_name .
Translation: call the method self . has_leading_dir with an argument name , substitute the result for
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1425:                   raise CommandError (  "Multiple fixtures named '%s' in %s. Aborting." %  ( fixture_name , humanize ( fixture_dir ) ) )
Original: raise an CommandError exception with an argument string " Multiple fixtures named ' %s ' in %s . Aborting . " , where ' %s ' is replaced with: fixture_name and result of the function humanize called with an argument fixture_dir .
Translation: raise an CommandError . _UNK with string " %s _UNK in _UNK _UNK ' %s ' . " for %s . %s " , where ' %s ' with i and every key of the function , called with an argument , renamed to result .
BLEU = 25.95 (Bravity Penalty=1.000, Length ratio=1.095, Translated length=46, Reference length=42)
  1-gram: 63.0 
  2-gram: 37.8 
  3-gram:20.5 
  4-gram: 9.3 

Code line 1426:   if self . match is None or self . match_re . search ( f ) :
Original: if self . match is None or call to the method self . match_re . search with an argument f , evaluated to true ,
Translation: if self . match is None or call to the method self . instance . _UNK with an argument name ,
BLEU = 55.99 (Bravity Penalty=0.827, Length ratio=0.840, Translated length=21, Reference length=25)
  1-gram: 85.7 
  2-gram: 70.0 
  3-gram:63.2 
  4-gram: 55.6 

Code line 1427:  from django . utils import six
Original: from django . utils import six into default name space .
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1428:   if item [ 'comments' ] is not None :
Original: if value under the ' comments ' key of the item dictionary is not None ,
Translation: if value under the ' unique_id ' key of the item dictionary is not None ,
BLEU = 81.54 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 93.8 
  2-gram: 86.7 
  3-gram:78.6 
  4-gram: 69.2 

Code line 1429:    return endpos
Original: return endpos .
Translation: return endpos .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1430:       def __init__ ( self , template_string , origin = None , name = None ) :
Original: define the method __init__ with 4 arguments: self , template_string , origin set to None and name set to None .
Translation: define the method __init__ with 0 arguments : self , template_string set to None , origin set to None .
BLEU = 51.44 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21)
  1-gram: 85.0 
  2-gram: 68.4 
  3-gram:50.0 
  4-gram: 29.4 

Code line 1431:  from django . core . serializers . python import Deserializer as PythonDeserializer
Original: from django . core . serializers . python import Deserializer as PythonDeserializer into default name space .
Translation: from django . core . serializers . wsgi import Serializer as _UNK into default name space .
BLEU = 58.57 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 82.4 
  2-gram: 62.5 
  3-gram:53.3 
  4-gram: 42.9 

Code line 1432:               self . regex = regex
Original: substitute regex for self . regex .
Translation: substitute regex for self . regex .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1433:    def run_shell ( self , shell = None ) :
Original: define the method run_shell with an arguments self and shell set to None .
Translation: define the method _UNK with arguments self and encoding set to None .
BLEU = 33.89 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14)
  1-gram: 84.6 
  2-gram: 58.3 
  3-gram:36.4 
  4-gram: 10.0 

Code line 1434:  raise NotImplementedError ( 'subclasses of Storage must provide a size() method' )
Original: raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a size ( ) method ' .
Translation: raise an NotImplementedError with argument string ' subclasses of Storage must provide a ( ( ) method ) method ' .
BLEU = 65.18 (Bravity Penalty=1.000, Length ratio=1.050, Translated length=21, Reference length=20)
  1-gram: 85.7 
  2-gram: 75.0 
  3-gram:63.2 
  4-gram: 44.4 

Code line 1435:                   if register_to :
Original: if register_to is true ,
Translation: if html_message is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1436:  super ( TemplateIfParser , self ) . __init__ ( * args , ** kwargs )
Original: call the method __init__ from the base class of the class TemplateIfParser , with 2 arguments: unpacked list args and unpacked dictionary .
Translation: call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 62.31 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 80.0 
  2-gram: 66.7 
  3-gram:56.5 
  4-gram: 50.0 

Code line 1437:   def _get_closed ( self ) :
Original: define the method _get_closed with argument self .
Translation: define the method _UNK with an argument self .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1438:               self . file . __enter__ ( )
Original: call the file . __enter__ method on self .
Translation: call the method self . template_cache .
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 85.7 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1439:  syear = "%04d" % ( dt . year , )
Original: syear is a string " %04d " formated with dt . year .
Translation: compile is a string " _UNK with raw s . year " and substitute result for ns .
BLEU = 17.69 (Bravity Penalty=1.000, Length ratio=1.385, Translated length=18, Reference length=13)
  1-gram: 50.0 
  2-gram: 23.5 
  3-gram:12.5 
  4-gram: 6.7 

Code line 1440:  output = [ ]
Original: output is an empty list .
Translation: output is an empty list .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1441:           path = str ( path )
Original: convert path to a string , substitute the result for path .
Translation: path path into a path , substitute it for path .
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 63.6 
  2-gram: 30.0 
  3-gram:11.1 
  4-gram: 0.0 

Code line 1442:           super ( BaseTemporalField , self ) . __init__ ( * args , ** kwargs )
Original: call the method __init__ from the base class of the BaseTemporalField class , with arguments: unpacked list args and unpacked dictionary kwargs .
Translation: call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 66.67 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 84.0 
  2-gram: 70.8 
  3-gram:60.9 
  4-gram: 54.5 

Code line 1443:  handler . addQuickElement ( "description" , self . feed [ 'description' ] )
Original: call the method handler . addQuickElement with 2 arguments: string ' description ' and value under the ' description ' key of the self . feed dictionary .
Translation: call the method handler . addQuickElement with 0 arguments : string ' link ' and value under the ' description ' key of the item
BLEU = 58.41 (Bravity Penalty=0.887, Length ratio=0.893, Translated length=25, Reference length=28)
  1-gram: 80.0 
  2-gram: 70.8 
  3-gram:60.9 
  4-gram: 54.5 

Code line 1444:                   raise ValueError (  "fk_name '%s' is not a ForeignKey to '%s.%'."  % ( fk_name , parent_model . _meta . app_label , parent_model . _meta . object_name ) )
Original: raise an ValueError with an argument string " fk_name ' %s ' is not a ForeignKey to ' %s . % ' . " , where ' %s ' is replaced with , fk_name , parent_model . _meta . app_label and parent_model . _meta . object_name , respectively .
Translation: raise a ValueError with an argument string " %s ' %s is not not %s . " . " , where ' %s ' is not __name__ . __name__ . __name__ .
BLEU = 27.21 (Bravity Penalty=0.588, Length ratio=0.653, Translated length=32, Reference length=49)
  1-gram: 78.1 
  2-gram: 51.6 
  3-gram:36.7 
  4-gram: 31.0 

Code line 1445:    try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1446:     if item [ "author_name" ] and item [ "author_email" ] :
Original: if values under " author_name " and " author_email " keys of the item dictionary are both true ,
Translation: if values under the " description " and the item dictionary is a item and dictionary under the item list are item is contained to
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.316, Translated length=25, Reference length=19)
  1-gram: 40.0 
  2-gram: 20.8 
  3-gram:8.7 
  4-gram: 0.0 

Code line 1447:            msgs = '\n' . join ( dropwhile ( len , msgs . split ( '\n' ) ) )
Original: call the function dropwhile with 2 arguments: function len and msgs spit into parts at newlines , join the result into a string , separated by newline , substitute it for msgs .
Translation: join elements of msgs into a string , separated by ' , ' , join the result into a string for separated by ' , substitute the result for msgs .
BLEU = 34.35 (Bravity Penalty=0.938, Length ratio=0.939, Translated length=31, Reference length=33)
  1-gram: 58.1 
  2-gram: 40.0 
  3-gram:31.0 
  4-gram: 25.0 

Code line 1448:   elif g [ 0 ] == "'" :
Original: otherwise if first element of g equals a string " ' " ,
Translation: otherwise if first element of row equals a string " " " ,
BLEU = 52.66 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:45.5 
  4-gram: 30.0 

Code line 1449:                       app = app . rpartition ( '.' ) [ - 1 ]
Original: call the method app . rpartition with an argument ' . ' , substitute last element of the result for app .
Translation: call the method app from parts at ' at ' at ' . ' , substitute the result for parts .
BLEU = 33.18 (Bravity Penalty=0.953, Length ratio=0.955, Translated length=21, Reference length=22)
  1-gram: 61.9 
  2-gram: 45.0 
  3-gram:31.6 
  4-gram: 16.7 

Code line 1450:   elif tzinfo is not None :
Original: otherwise if tzinfo is not None ,
Translation: otherwise if sep is not None ,
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 1451:       needs_multipart_form = False
Original: needs_multipart_form is boolean False .
Translation: can_import_settings is boolean False .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1452:   nodelist . append ( node )
Original: append node to nodelist .
Translation: append node to node .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1453:    def value_from_datadict ( self , data , files , name ) :
Original: define the method value_from_datadict with 4 arguments: self , data , files and name .
Translation: define the method value_from_datadict with 0 arguments : self , data , files and name .
BLEU = 67.39 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 81.2 
  2-gram: 73.3 
  3-gram:64.3 
  4-gram: 53.8 

Code line 1454:    def ip_address_validators ( protocol , unpack_ipv4 ) :
Original: define the function ip_address_validators with arguments protocol and unpack_ipv4 .
Translation: define the function _UNK with 0 arguments : potfile and unpack_ipv0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 58.3 
  2-gram: 18.2 
  3-gram:10.0 
  4-gram: 0.0 

Code line 1455:      def humanize ( dirname ) :
Original: define the function humanize with an argument dirname .
Translation: define the function find_commands with an argument k .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1456:               self . schemes = schemes
Original: substitute schemes for self . schemes .
Translation: substitute callback for self . _request .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1457:           value = self . to_python ( value ) . strip ( )
Original: call the method self . to_python with an argument value , strip the whitespaces from the result , substitute it for value .
Translation: call the method self . to_python with an argument value , strip the result of the whitespaces from the value , substitute the result for
BLEU = 64.04 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 84.0 
  2-gram: 70.8 
  3-gram:56.5 
  4-gram: 50.0 

Code line 1458:      class RegexURLResolver ( LocaleRegexProvider ) :
Original: derive the class RegexURLResolver with LocaleRegexProvider as base class .
Translation: derive the class SkipFile with BaseEmailBackend as base class .
BLEU = 39.28 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:37.5 
  4-gram: 14.3 

Code line 1459:  def __init__ ( self , parent_widget , name , value , attrs , choices ) :
Original: define the method __init__ with 6 arguments self , parent_widget , name , value , attrs and choices .
Translation: define the method __init__ with 0 arguments : self , name , value , attrs , choices and choices .
BLEU = 51.47 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 85.0 
  2-gram: 63.2 
  3-gram:44.4 
  4-gram: 29.4 

Code line 1460:   elif args [ 1 ] [ 0 ] == '1' :
Original: otherwise if first element of second row of args equals a string ' 1 ' ,
Translation: otherwise if second element of second row of args equals a string ' 0 ' ,
BLEU = 66.66 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 87.5 
  2-gram: 73.3 
  3-gram:57.1 
  4-gram: 53.8 

Code line 1461:    if ( ( os . stat ( path ) . st_mode & stat . S_IREAD ) != stat . S_IREAD ) :
Original: call the function os . stat with an argument path , perform bitwise and on 2 operands st_mode field of the result and stat . S_IREAD , if it is not equal to stat . S_IREAD ,
Translation: call the function os . _UNK with argument os . path . _UNK os function is not a os . path function ,
BLEU = 11.26 (Bravity Penalty=0.544, Length ratio=0.622, Translated length=23, Reference length=37)
  1-gram: 56.5 
  2-gram: 22.7 
  3-gram:14.3 
  4-gram: 10.0 

Code line 1462:               self . add_library ( lib )
Original: call the method self . add_library with an argument lib .
Translation: call the method self . indent with an argument lib .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1463:                    def dec ( func ) :
Original: define the function dec with an argument func ,
Translation: define the function dec with an argument func .
BLEU = 86.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 87.5 
  3-gram:85.7 
  4-gram: 83.3 

Code line 1464:   if self . feed [ 'feed_copyright' ] is not None :
Original: if value under the ' feed_copyright ' key of the self . feed dictionary is not None ,
Translation: if value under the ' author_name ' key of the self . feed dictionary is not None ,
BLEU = 83.94 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18)
  1-gram: 94.4 
  2-gram: 88.2 
  3-gram:81.2 
  4-gram: 73.3 

Code line 1465:                       invalid_apps . append ( app_name )
Original: append app_name to the invalid_apps .
Translation: append app_name to app_name .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1466:  __contains__ = new_method_proxy ( operator . contains )
Original: call the function new_method_proxy with an argument operator . contains , substitute the result for __contains__ .
Translation: call the function new_method_proxy with an argument operator . getitem , substitute the result for
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1467:        def base36_to_int ( s ) :
Original: define the functionbase36_to_int with an argument s .
Translation: define the function _UNK with an argument s .
BLEU = 51.33 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8)
  1-gram: 77.8 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1468:  from django . db import models
Original: from django . db import models into default namespace .
Translation: from django . db import models into default name space .
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:66.7 
  4-gram: 62.5 

Code line 1469:  for localedir in reversed ( settings . LOCALE_PATHS ) :
Original: reverse settings . LOCALE_PATHS element order , for every localedir in the result ,
Translation: for every order in return value of the six . text_type ,
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14)
  1-gram: 58.3 
  2-gram: 9.1 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1470:  if not form . is_valid ( ) :
Original: call the form . is_valid method , if it evaluates to false ,
Translation: if call form . is_valid evaluates to false ,
BLEU = 29.47 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13)
  1-gram: 100.0 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1471:       def __init__ ( self , regex , urlconf_name , default_kwargs = None , app_name = None , namespace = None ) :
Original: define the method __init__ with 6 arguments: self , regex , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .
Translation: define the method __init__ with 0 arguments : self , instance , regex , target set to None , flags set to None and ending set to None .
BLEU = 41.92 (Bravity Penalty=1.000, Length ratio=1.036, Translated length=29, Reference length=28)
  1-gram: 75.9 
  2-gram: 57.1 
  3-gram:37.0 
  4-gram: 19.2 

Code line 1472:   def model_installed ( model ) :
Original: define the method model_installed with model as an argument .
Translation: define the function _UNK with arguments model .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 62.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1473:  link_prev , link_next , key , result = link
Original: substitute link for link_prev , link_next , key and result , respectively .
Translation: substitute key for link , link , link and tb , respectively .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 76.9 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 1474:     if ':::' in ip_str :
Original: if string ' ::: ' is contained in ip_str ,
Translation: if : : : ' : : : : : is true in result ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=15, Reference length=10)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1475:   self . _current [ field . name ] = [ m2m_value ( related )  for related in getattr ( obj , field . name ) . iterator ( ) ]
Original: call the function m2m_value with the argument related , for every related in itterator object generated from the attribute field . name , of the obj object , append the results in a list , substitute it for value under the field . name key of the self . _current dictionary .
Translation: for field . name object of _UNK object , for every value is an instance of the function _UNK , for every value of the self . instance . cleaned_data dictionary , for every key of the self . _UNK dictionary .
BLEU = 14.26 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=42, Reference length=52)
  1-gram: 57.1 
  2-gram: 29.3 
  3-gram:12.5 
  4-gram: 5.1 

Code line 1476:                   attrs = dict ( attrs or { } , ** { 'for' : id_for_label } )
Original: unpack a dictionary with an entry id_for_label for ' for ' , map it through attrs mapping if attrs is true , and convert it again to the dictionary , if attrs is false , leave it alone , substitute the result for attrs .
Translation: attrs dictionary attrs dictionary attrs is not dictionary with initial dictionary , substitute it for initial class , otherwise attrs is an empty dictionary with
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=25, Reference length=45)
  1-gram: 60.0 
  2-gram: 20.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1477:           is_dst = False if dt is None else self . _isdst ( dt )
Original: if dt is None is_dst is boolean False , otherwise call the method self . _isdst with an argument dt , substitute the result for is_dst .
Translation: if timezone is None , substitute boolean False of the result for boolean . data .
BLEU = 0.00 (Bravity Penalty=0.503, Length ratio=0.593, Translated length=16, Reference length=27)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:7.1 
  4-gram: 0.0 

Code line 1478:  self . negate = negate
Original: substitute negate for self . negate .
Translation: substitute num for self . _leftover .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1479:    return func ( * args , ** kwargs )
Original: call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs , return the result .
Translation: call the function func with 0 arguments : unpacked list args and unpacked dictionary kwargs
BLEU = 49.60 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 80.0 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1480:    def __iter__ ( self ) :
Original: define the method __iter__ with an argument self .
Translation: define the method __iter__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1481:  from django . core . signals import request_finished
Original: from django . core . signals import request_finished into default name space .
Translation: from django . core . mail import FileProxyMixin into default name space .
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1482:    raise Resolver404 ( { 'tried' : tried , 'path' : new_path } )
Original: raise an Resolver404 exception with an argument dictionary containing 2 entries: new_path for ' path ' and tried for ' tried ' .
Translation: raise an TypeError exception with 0 arguments : string containing a string ' path : for ' path ' .
BLEU = 15.80 (Bravity Penalty=0.861, Length ratio=0.870, Translated length=20, Reference length=23)
  1-gram: 55.0 
  2-gram: 31.6 
  3-gram:11.1 
  4-gram: 5.9 

Code line 1483:  if version is None :
Original: if version is None ,
Translation: if version is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1484:  self . _reverse_dict = { }
Original: self . _reverse_dict is an empty dictionary .
Translation: self . _headers is an empty dictionary .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1485:  self . silent = silent
Original: substitute silent for self . silent .
Translation: substitute val_expr for self . val_expr .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1486:  __bool__ = new_method_proxy ( bool )
Original: call the function new_method_proxy with an argument bool , substitute the result for __bool__ .
Translation: call the function new_method_proxy with an argument raw " .
BLEU = 40.07 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=10, Reference length=15)
  1-gram: 80.0 
  2-gram: 66.7 
  3-gram:62.5 
  4-gram: 57.1 

Code line 1487:  return module . Command ( )
Original: return an instance of the module . Command class .
Translation: call the method os . _UNK , return the result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10)
  1-gram: 36.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1488:  with lock :
Original: with lock ,
Translation: with lock ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1489:                   bit = node
Original: substitute node for bit .
Translation: substitute bit for bit .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1490:           with self . mutex :
Original: with self . mutex perform ,
Translation: with self . mutex perform ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1491:   if bits [ 4 ] != 'as' :
Original: if fift element of bits is not equal to a string ' as ' ,
Translation: if third element of bits is not equal to string ' as ' ,
BLEU = 66.47 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 92.9 
  2-gram: 76.9 
  3-gram:66.7 
  4-gram: 54.5 

Code line 1492:                       raise
Original: raise an exception .
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1493:   attrs . setdefault ( 'step' , step )
Original: if ' step ' key of the attrs dictionary doesnt exists assign it step as an value .
Translation: if the dictionary under the ' filename ' key of the attrs dictionary , if it doesnt to error_messages .
BLEU = 27.45 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18)
  1-gram: 55.0 
  2-gram: 26.3 
  3-gram:22.2 
  4-gram: 17.6 

Code line 1494:                   self . extend_nodelist ( nodelist , TextNode ( token . contents ) , token )
Original: call the method self . extend_nodelist with 3 arguments: nodelist , instance of TextNode class , created with an argument token . contents , and token .
Translation: call the method self . extend_nodelist with 0 arguments : nodelist and token , nodelist and token .
BLEU = 26.04 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=18, Reference length=27)
  1-gram: 72.2 
  2-gram: 47.1 
  3-gram:37.5 
  4-gram: 26.7 

Code line 1495:  sub_match_dict . update ( sub_match . kwargs )
Original: call the method sub_match_dict . update with an argument sub_match . kwargs .
Translation: update update dictionary with self . feed .
BLEU = 0.00 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13)
  1-gram: 50.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1496:               raise CommandError ( "More than one migration matches '%s' in app '%s'. Please be more specific." % ( migration_name , app_label ) )
Original: raise an CommandError with an argument string " More than one migration matches ' %s ' in app ' %s ' . Please be more specific . " , where ' %s ' is replaced with migration_name and app_label .
Translation: raise a CommandError in string " " %s %s " . " . %s %s %s in migration _UNK . " for %s " %s " with migration . app_label , with ' %s ' and app_label , respectively .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=40, Reference length=40)
  1-gram: 50.0 
  2-gram: 12.8 
  3-gram:2.6 
  4-gram: 0.0 

Code line 1497:   def __init__ ( self , digits , sign = '-' ) :
Original: define the initialization function with self class instance , digits and sign defaulting to ' - ' as arguments .
Translation: define the method __init__ with 0 arguments : self , sign and sign of digits .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=16, Reference length=20)
  1-gram: 62.5 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1498:  t = getattr ( _active , "value" , None )
Original: get ' value ' attribute of the _active object , if it exists substitute it for t , if not t is None .
Translation: get ' value ' attribute of the _active object , if it exists substitute it for t , if not is None .
BLEU = 88.62 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24)
  1-gram: 100.0 
  2-gram: 95.5 
  3-gram:90.5 
  4-gram: 85.0 

Code line 1499:               ch2 , escaped = next ( input_iter )
Original: get the next element of the iterable pattern_iter , assign the result for ch2 and escaped , respectively .
Translation: get the next element of the iterable pattern_iter , assign the result for ch and
BLEU = 66.38 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:84.6 
  4-gram: 83.3 

Code line 1500:  if timeout is None :
Original: if timeout is None ,
Translation: if timeout is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1501:  from django . utils . encoding import force_str
Original: from django . utils . encoding import force_str into default name space .
Translation: from django . utils . encoding import force_str into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1502:     if not settings . is_overridden ( 'MIDDLEWARE_CLASSES' ) :
Original: call the function settings . is_overridden with argument string ' MIDDLEWARE_CLASSES ' , if the result is boolean False ,
Translation: if call to the settings . has_header with string ' _UNK ' evaluates to boolean False .
BLEU = 0.00 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 64.7 
  2-gram: 18.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1503:           ret = b'' . join ( self . vals )
Original: join elements of self . vals into a bytes string , substitute the result for ret .
Translation: join first value of bytes bytes , substitute it for self . characters .
BLEU = 0.00 (Bravity Penalty=0.807, Length ratio=0.824, Translated length=14, Reference length=17)
  1-gram: 64.3 
  2-gram: 15.4 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1504:               handler . addQuickElement ( "category" , cat )
Original: call the method handler . addQuickElement with 2 arguments: string " category " and cat .
Translation: call the method handler . addQuickElement with 0 arguments : string ' link ' and item .
BLEU = 38.07 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16)
  1-gram: 58.8 
  2-gram: 37.5 
  3-gram:33.3 
  4-gram: 28.6 

Code line 1505: from __future__ import unicode_literals
Original: from __future__ import unicode_literals into default name space .
Translation: from __future__ import unicode_literals into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1506:       help = "Prints the CREATE INDEX SQL statements for the given model module name(s)."
Original: help is a string " Prints the CREATE INDEX SQL statements for the given model module name ( s ) . " .
Translation: help is a string " Prints the SQL SQL for the given given name ( s ) the model . " .
BLEU = 47.93 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23)
  1-gram: 86.4 
  2-gram: 61.9 
  3-gram:45.0 
  4-gram: 26.3 

Code line 1507:  raise NotImplementedError ( 'subclasses of BaseCache must provide a delete() method' )
Original: raise an exception of class NotImplementedError , with string ' subclasses of BaseCache must provide a delete ( ) method ' as argument .
Translation: raise an NotImplementedError with an argument string ' subclasses of Storage must provide an delete ( ) method ) method ' .
BLEU = 27.90 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 77.3 
  2-gram: 42.9 
  3-gram:25.0 
  4-gram: 10.5 

Code line 1508:               raise ValidationError ( self . error_messages [ 'invalid' ] , code = 'invalid' )
Original: raise an ValidationError with 2 arguments: value under the ' invalid ' key of the self . error_messages dictionary and code set to ' invalid ' .
Translation: raise an ValidationError with 0 arguments : value under the ' invalid ' key of the self . error_messages dictionary and code set to '
BLEU = 74.20 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 88.0 
  2-gram: 83.3 
  3-gram:78.3 
  4-gram: 72.7 

Code line 1509:      class TarArchive ( BaseArchive ) :
Original: derive the class TarArchive from the BaseArchive base class .
Translation: derive the class _UNK from the BaseArchive base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1510:  self . connection_reset = connection_reset
Original: substitute connection_reset for self . connection_reset .
Translation: substitute old_setting for self . mod .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1511:    for namespace , ( prefix , sub_pattern ) in pattern . namespace_dict . items ( ) :
Original: for every namespace and tuple containing: prefix and sub_pattern , in return value of the method pattern . namespace_dict . items ,
Translation: for every _UNK and _UNK in _UNK _UNK _UNK starting of _UNK . _UNK _UNK and every empty directory ,
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22)
  1-gram: 40.0 
  2-gram: 5.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1512:           dot = callback . rindex ( '.' )
Original: call the method callback . rindex with an argument character ' . ' , substitute the result for dot .
Translation: call the method app . getElementsByTagName with an argument string ' _wrapped ' , substitute the result for upload .
BLEU = 38.02 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20)
  1-gram: 75.0 
  2-gram: 47.4 
  3-gram:33.3 
  4-gram: 17.6 

Code line 1513:   url_markup_template = '<a href="{0}">{1}</a>'
Original: url_markup_template is a string ' <a href= " { 0 } " > { 1 } </a> ' .
Translation: _UNK is a string " _UNK _UNK _UNK " .
BLEU = 0.00 (Bravity Penalty=0.407, Length ratio=0.526, Translated length=10, Reference length=19)
  1-gram: 60.0 
  2-gram: 22.2 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1514:               raise TemplateEncodingError ( "Templates can only be constructed "  "from unicode or UTF-8 strings." )
Original: raise an TemplateEncodingError exception with an argument " Templates can only be constructed from unicode or UTF-8 strings . " .
Translation: raise _UNK exception with string " _UNK _UNK _UNK _UNK _UNK . _UNK _UNK instead . " .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21)
  1-gram: 38.9 
  2-gram: 17.6 
  3-gram:6.2 
  4-gram: 0.0 

Code line 1515:     def negate ( self ) :
Original: define the method negate with an argument self .
Translation: define the method bpython with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1516:                           self . bad_cookies = set ( )
Original: self . bad_cookies is an empty set .
Translation: self . bad_cookies is an empty set .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1517:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1518:  from django . core . serializers import base
Original: from django . core . serializers import base into default name space .
Translation: from django . core . serializers import serializers into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1519:               cursor . close ( )
Original: call the cursor . close method .
Translation: call the cursor . close method .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1520:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1521:               raise InvalidTemplateLibrary ( "ImportError raised loading %s: %s" %  ( taglib_module , e ) )
Original: raise an InvalidTemplateLibrary exception with an argument string " ImportError raised loading %s: %s " , where ' %s ' is replaced with taglib_module and e .
Translation: raise an CommandError exception with an argument string " %s %s %s : %s " , where ' %s ' is replaced with name .
BLEU = 53.48 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 76.0 
  2-gram: 62.5 
  3-gram:52.2 
  4-gram: 45.5 

Code line 1522:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1523:   def __init__ ( self , location = None , base_url = None , file_permissions_mode = None ,  directory_permissions_mode = None ) :
Original: define the method __init__ with 5 arguments: self , location set to None , base_url set to None , file_permissions_mode set to None , and directory_permissions_mode set to None .
Translation: define the method __init__ with 0 arguments : self , style set to None , make set to None , make set to None and encoding set to None .
BLEU = 40.90 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=30, Reference length=30)
  1-gram: 76.7 
  2-gram: 55.2 
  3-gram:35.7 
  4-gram: 18.5 

Code line 1524:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1525:  @ stringfilter
Original: decorator stringfilter ,
Translation: decorator stringfilter ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1526:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1527:           return '\n' . join ( '* %s' % e for e in self )
Original: for every e in self , append convert e to an string and append it to string ' * ' , join all of the results into a string separated by newline character , return the result .
Translation: for every f in self into a string , separated by a string ' %s ' , join them into a string .
BLEU = 0.00 (Bravity Penalty=0.521, Length ratio=0.605, Translated length=23, Reference length=38)
  1-gram: 73.9 
  2-gram: 36.4 
  3-gram:9.5 
  4-gram: 0.0 

Code line 1528:           self . __dict__ . update ( state )
Original: add state element to self . __dict__ dictionary .
Translation: update the self . __dict__ dictionary with res .
BLEU = 31.56 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 55.6 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1529:   return super ( BaseModelFormSet , self ) . initial_form_count ( )
Original: call the method initial_form_count from the base class of the class BaseModelFormSet , return the result .
Translation: call the method __getitem__ from the base class of the class URLField , return the result .
BLEU = 64.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 88.2 
  2-gram: 75.0 
  3-gram:60.0 
  4-gram: 42.9 

Code line 1530:               base_url = settings . MEDIA_URL
Original: substitute settings . MEDIA_URL for base_url .
Translation: substitute settings . TEMPLATE_STRING_IF_INVALID for secret .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1531:  self . pointer = 0
Original: self . pointer is integer 0 .
Translation: self . active_readers is integer 0 .
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 25.0 

Code line 1532:                    def wrapper ( * args , ** kwds ) :
Original: define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
Translation: define the function wrapper with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 54.24 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 75.0 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 38.5 

Code line 1533:    return False
Original: return boolean False .
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1534:                           answer = "n"
Original: substitute ' n ' for answer .
Translation: answer is a string " _UNK " .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 25.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1535:                    try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1536:   except ImportError :
Original: if ImportError exception is caught ,
Translation: except ImportError .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1537:   for char in key :
Original: for every char in key ,
Translation: for every key in sorted_items ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1538:  ns_pattern = ''
Original: ns_pattern is an empty string .
Translation: sign is an empty string .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1539:     def __repr__ ( self ) :
Original: define the method __repr__ with an argument self .
Translation: define the method __repr__ with argument self .
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 40.0 

Code line 1540:           script_url = get_bytes_from_wsgi ( environ , 'REDIRECT_URL' , '' )
Original: call the get_bytes_from_wsgi function with environ , string ' REDIRECT_URL ' and empty strings as arguments , substitute the result for script_url .
Translation: call the function get_bytes_from_wsgi with an argument string ' _UNK ' , substitute the result for csrf_token .
BLEU = 21.80 (Bravity Penalty=0.757, Length ratio=0.783, Translated length=18, Reference length=23)
  1-gram: 77.8 
  2-gram: 35.3 
  3-gram:18.8 
  4-gram: 13.3 

Code line 1541:  content = content . encode ( 'utf-8' )
Original: call the method content . encode with an argument string ' utf-8 ' , substitute it for content .
Translation: call the method content . encode with an argument string ' utf-0 ' , substitute the result for content .
BLEU = 65.15 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 85.0 
  2-gram: 73.7 
  3-gram:61.1 
  4-gram: 47.1 

Code line 1542:  def media ( self ) :
Original: define the method media with an argument self .
Translation: define the method media with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1543:      class Error ( CheckMessage ) :
Original: derive the class Error from base class CheckMessage .
Translation: derive the class CheckMessage from base class CheckMessage .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1544:               if jan1_weekday == 5 or ( jan1_weekday == 6 and calendar . isleap ( self . data . year - 1 ) ) :
Original: if jan1_weekday equals integer 5 , or if jan1_weekday equals integer 6 and call to the function calendar . isleap , with an argument self . data . year decremented by 1 , evaluates to true ,
Translation: if integer 0 and 0 if result of the function call to function with 0 arguments : self . data and integer is lesser than integer 0 .
BLEU = 0.00 (Bravity Penalty=0.725, Length ratio=0.757, Translated length=28, Reference length=37)
  1-gram: 50.0 
  2-gram: 14.8 
  3-gram:3.8 
  4-gram: 0.0 

Code line 1545:  if _win :
Original: if _win is true ,
Translation: if matches is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1546:  break
Original: break loop execution .
Translation: break from the loop execution .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=6, Reference length=4)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1547:    result = user_function ( * args , ** kwds )
Original: call the function user_function with 2 arguments: unpacked list args and unpacked dictionary kwds , substitute the result for result .
Translation: call the function user_function with 0 arguments unpacked list args and unpacked dictionary kwds , substitute the result for result .
BLEU = 81.37 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 90.5 
  2-gram: 85.0 
  3-gram:78.9 
  4-gram: 72.2 

Code line 1548:               self . mode = file . mode
Original: substitute file . mode for self . mode .
Translation: substitute self . file for self . file .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 37.5 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1549:     def delete_many ( self , keys , version = None ) :
Original: define the method delete_many with arguments self , keys and version defaulting to None .
Translation: define the method make_key with self , keys and version set to None as arguments .
BLEU = 35.93 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 81.2 
  2-gram: 46.7 
  3-gram:28.6 
  4-gram: 15.4 

Code line 1550:           return s . encode ( "latin-1" )
Original: call the method e . encode with an argument string " latin-1 " .
Translation: call the method ugettext . encode with an argument string " s ' , return
BLEU = 49.20 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14)
  1-gram: 66.7 
  2-gram: 57.1 
  3-gram:46.2 
  4-gram: 33.3 

Code line 1551:    def add_fields ( self , form , index ) :
Original: define the method add_fields with 3 arguments: self , form and index .
Translation: define the method add_fields with 0 arguments : self , form and index .
BLEU = 61.63 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13)
  1-gram: 78.6 
  2-gram: 69.2 
  3-gram:58.3 
  4-gram: 45.5 

Code line 1552:           return type ( self ) . __bool__ ( self )
Original: get the type of self object , call its method __bool__ with an argument self , return the result .
Translation: get the type of the self object , on the result call the method __bool__ with argument self , return the result .
BLEU = 47.18 (Bravity Penalty=1.000, Length ratio=1.150, Translated length=23, Reference length=20)
  1-gram: 78.3 
  2-gram: 59.1 
  3-gram:42.9 
  4-gram: 25.0 

Code line 1553:       child_nodelists = ( 'nodelist_loop' , 'nodelist_empty' )
Original: child_nodelists is an tuple with 2 elements: strings ' nodelist_loop ' and ' nodelist_empty ' .
Translation: query is an tuple with an initial string ' _UNK ' and ' nodelist ' .
BLEU = 25.34 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16)
  1-gram: 62.5 
  2-gram: 40.0 
  3-gram:21.4 
  4-gram: 7.7 

Code line 1554:               nodelist = getattr ( self , attr , None )
Original: get attr attribute of self object , if it exists substitute it for nodelist , if not nodelist is None .
Translation: get attr attribute from the self object , if it , substitute it for val .
BLEU = 28.74 (Bravity Penalty=0.732, Length ratio=0.762, Translated length=16, Reference length=21)
  1-gram: 81.2 
  2-gram: 53.3 
  3-gram:35.7 
  4-gram: 15.4 

Code line 1555:     class DeserializationError ( Exception ) :
Original: derive the class DeserializationError from the Exception base class .
Translation: derive the class FileBasedCache from the Exception base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1556:                       M = self . get ( key , Morsel ( ) )
Original: get the value under the key of the dictionary self , if key does not exists return evaluated result of the function Morsel , substitute it for M .
Translation: get the value under the key key of the dictionary dictionary , substitute it for self .
BLEU = 29.25 (Bravity Penalty=0.494, Length ratio=0.586, Translated length=17, Reference length=29)
  1-gram: 94.1 
  2-gram: 68.8 
  3-gram:53.3 
  4-gram: 35.7 

Code line 1557:   from django . utils import six
Original: from django . utils import six into default name space .
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1558:     def __call__ ( self , value ) :
Original: define the method __call__ with arguments self and value .
Translation: define the method __call__ with arguments self and value .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1559:                   return plural_suffix
Original: return plural_suffix .
Translation: return _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 66.7 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1560:  while self . tokens :
Original: while self . tokens is true ,
Translation: while self . tokens ,
BLEU = 47.40 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7)
  1-gram: 100.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1561:  super ( EmailBackend , self ) . __init__ ( * args , ** kwargs )
Original: call the __init__ method from the base class of the EmailBackend class , with arguments: unpacked list args and unpacked dictionary kwargs .
Translation: call the method __init__ from the base class of the class EmailBackend , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 53.37 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 88.0 
  2-gram: 58.3 
  3-gram:43.5 
  4-gram: 36.4 

Code line 1562:               handler . addQuickElement ( "rights" , self . feed [ 'feed_copyright' ] )
Original: call the method handler . addQuickElement with 2 arguments: string ' rights ' and value under the ' feed_copyright ' key of the self . feed dictionary .
Translation: call the method handler . addQuickElement with 0 arguments : string ' _UNK ' and value under the ' author_email ' key of the self
BLEU = 51.52 (Bravity Penalty=0.887, Length ratio=0.893, Translated length=25, Reference length=28)
  1-gram: 80.0 
  2-gram: 66.7 
  3-gram:52.2 
  4-gram: 40.9 

Code line 1563:           errors = self . default_error_messages . copy ( )
Original: and errors set to the result of self . default_error_messages . copy .
Translation: call the method self . copy . copy , substitute the result for result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 46.7 
  2-gram: 28.6 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1564:       def __init__ ( self , source ) :
Original: define the method __init__ with 2 arguments: self and source .
Translation: define the method __init__ with 0 arguments : self and source .
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 63.6 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1565:                       self . stdout . write ( errors )
Original: write errors to self . stdout .
Translation: write errors to self . stdout .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1566:   elif item_type == FILE :
Original: otherwise if item_type equals FILE ,
Translation: otherwise if action equals both locale ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1567:     class RendererMixin ( object ) :
Original: derive the class RendererMixin from the object base class .
Translation: derive the class class from the base class object .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1568:    def date ( self ) :
Original: define the method date with an argument self .
Translation: define the method date with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1569:   if app_config is None :
Original: if app_config is None ,
Translation: if app_config is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1570:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1571:  m = data . get ( self . month_field % name )
Original: format self . month_field string with name , use it as the key for the data dictionary , substitute the result for m .
Translation: get value under the self . id key , if it exists substitute it for d .
BLEU = 0.00 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24)
  1-gram: 52.9 
  2-gram: 6.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1572:  urlconf = settings . ROOT_URLCONF
Original: substitute settings . ROOT_URLCONF for urlconf .
Translation: substitute settings . _UNK for urlconf .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1573:  for bit in smart_split_re . finditer ( text ) :
Original: call the method smart_split_re . finditer with an argument text , for every bit in result ,
Translation: call the function text . _UNK with an argument bit , for every bit in result ,
BLEU = 47.97 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17)
  1-gram: 82.4 
  2-gram: 56.2 
  3-gram:40.0 
  4-gram: 28.6 

Code line 1574:  new_environ [ "RUN_MAIN" ] = 'true'
Original: value under the " RUN_MAIN " key of new_environ dictionary is a string ' true ' .
Translation: _UNK the the value under the ' _UNK ' key of the options dictionary .
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 60.0 
  2-gram: 21.4 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1575:    @ encoding . setter
Original: encoding . setter decorator ,
Translation: upload_handlers . encoding .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=4, Reference length=5)
  1-gram: 50.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1576:                           i += 1
Original: increment i by one .
Translation: increment i by 0 .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1577:               HTMLParser . __init__ ( self )
Original: call the method HTMLParser . __init__ with an argument self .
Translation: call the method __init__ . __init__ with argument self .
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11)
  1-gram: 90.0 
  2-gram: 66.7 
  3-gram:37.5 
  4-gram: 0.0 

Code line 1578:  from django . db import models , DEFAULT_DB_ALIAS
Original: from django . db import models and DEFAULT_DB_ALIAS into default name space .
Translation: from django . db import models and DEFAULT_DB_ALIAS into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1579:  if len ( bits ) > 2 :
Original: if length of bits is greater than integer 2 ,
Translation: if length bits is greater than integer 0 ,
BLEU = 47.50 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1580:  data_set = set ( force_text ( value ) for value in data )
Original: for every value in data call the function force_text with an argument value , add the results into a set , substitute the resulting set for data_set .
Translation: for every value containing out of results of function force_text called with an argument value , for every value in data .
BLEU = 28.06 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=22, Reference length=28)
  1-gram: 68.2 
  2-gram: 42.9 
  3-gram:30.0 
  4-gram: 21.1 

Code line 1581:   yield representative , True
Original: yield representative and boolean True .
Translation: yield and boolean True , return boolean True .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=9, Reference length=6)
  1-gram: 55.6 
  2-gram: 37.5 
  3-gram:28.6 
  4-gram: 0.0 

Code line 1582:         def __getstate__ ( self ) :
Original: define the method __getstate__ with an argument self .
Translation: define the method __getstate__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1583:   ip_str = _sanitize_ipv4_mapping ( ip_str )
Original: call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .
Translation: call the function _UNK with an argument ip_str .
BLEU = 23.98 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=9, Reference length=15)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1584:  lexer_class , parser_class = DebugLexer , DebugParser
Original: substitute DebugLexer and DebugParser for lexer_class and parser_class .
Translation: substitute Lexer and Parser for Select and __str__ .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 55.6 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1585:    if six . PY3 :
Original: if six . PY3 is true ,
Translation: if PY0 PY0 of module module six is boolean True ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.571, Translated length=11, Reference length=7)
  1-gram: 36.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1586:           raise
Original: raise an exception .
Translation: raise an exception .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1587:                    command . stdout . write ( errors )
Original: call the method command . stdout . write with an argument errors .
Translation: write errors to self . stdout .
BLEU = 0.00 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=7, Reference length=13)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1588:    def prepare_value ( self , value ) :
Original: define the method prepare_value with 2 arguments: self and value .
Translation: define the method prepare_value with arguments : self and value .
BLEU = 58.77 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 70.0 
  3-gram:55.6 
  4-gram: 37.5 

Code line 1589:   name = [ ]
Original: name is an empty list .
Translation: if is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1590:  if format_module_path :
Original: if format_module_path is true ,
Translation: if format_module_path is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1591:  readline . parse_and_bind ( "tab:complete" )
Original: call the method readline . parse_and_bind with an argument string " tab:complete " .
Translation: derive the method _UNK . _UNK with an argument string " _UNK " .
BLEU = 34.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14)
  1-gram: 71.4 
  2-gram: 46.2 
  3-gram:25.0 
  4-gram: 18.2 

Code line 1592:               name = config . get ( 'name' , '' )
Original: remove config dictionary element under ' name ' key , if it exists substitute it for name , if not , name is an empty string .
Translation: get config dictionary value under ' name ' , if it name , substitute it for name .
BLEU = 23.30 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=18, Reference length=27)
  1-gram: 88.9 
  2-gram: 58.8 
  3-gram:31.2 
  4-gram: 13.3 

Code line 1593:      def __str__ ( self ) :
Original: define the method __str__ with an argument self .
Translation: define the method __str__ with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1594:    class Command ( AppCommand ) :
Original: derive the class Command from the AppCommand base class .
Translation: derive the class Command from the AppCommand base class .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1595:    def is_secure ( self ) :
Original: define the method is_secure with an argument self .
Translation: define the method _UNK with an argument self .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1596:               for app_label in app_labels :
Original: for every app_label in app_labels ,
Translation: for every app_label in app_labels ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1597:  if settings . FORCE_SCRIPT_NAME is not None :
Original: if settings . FORCE_SCRIPT_NAME is not None ,
Translation: if settings . _UNK is None ,
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8)
  1-gram: 85.7 
  2-gram: 50.0 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1598:                       offset = offset + len ( self . __starttag_text )
Original: increment the offset by the length of self . __starttag_text .
Translation: sum sum by self . per_page , substitute the result for offset .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11)
  1-gram: 46.2 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1599:   except KeyError :
Original: if KeyError exception is caught .
Translation: except KeyError exception is caught ,
BLEU = 50.81 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1600:                       opt_label += '='
Original: append ' = ' to opt_label .
Translation: append character to ' .
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7)
  1-gram: 80.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1601:   if name not in parser . _namedCycleNodes :
Original: if name is not contained in parser . _namedCycleNodes ,
Translation: if name is not contained in self . name ,
BLEU = 55.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:50.0 
  4-gram: 42.9 

Code line 1602:                   sys . stdout . write ( self . main_help_text ( ) + '\n' )
Original: call the method self . main_help_text append new line to it , write it to sys . stdout .
Translation: call the method self . stdout . write write new new write it to it .
BLEU = 33.54 (Bravity Penalty=0.829, Length ratio=0.842, Translated length=16, Reference length=19)
  1-gram: 81.2 
  2-gram: 60.0 
  3-gram:35.7 
  4-gram: 15.4 

Code line 1603:    def start_object ( self , obj ) :
Original: define the method start_object with arguments self and obj .
Translation: define the method start_object with argument self and obj .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1604:     extension_map = {  '.tar' : TarArchive ,  '.tar.bz2' : TarArchive ,  '.tar.gz' : TarArchive ,  '.tgz' : TarArchive ,  '.tz2' : TarArchive ,  '.zip' : ZipArchive ,  }
Original: extension_map is a dictioanry with 6 initial elntries: TarArchive for ' . tar ' , TarArchive for ' . tar . bz2 ' , TarArchive for ' . tar . gz ' ,
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.030, Translated length=1, Reference length=33)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1605:   return data
Original: return data .
Translation: return data .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1606:           return base64 . urlsafe_b64decode ( s . ljust ( len ( s ) + len ( s ) % 4 , b'=' ) )
Original: left justify string s in a field of width equal to the sum of length of s and reminder of the division of length of s by integer 4 , pad the rest of the field with bytes string ' = ' , use the result as an argument for the call to the method base64 . urlsafe_b64decode , return the result .
Translation: call the method s . s , s ) of result of s by s and s from s ' s ' .
BLEU = 0.00 (Bravity Penalty=0.176, Length ratio=0.365, Translated length=23, Reference length=63)
  1-gram: 69.6 
  2-gram: 18.2 
  3-gram:4.8 
  4-gram: 0.0 

Code line 1607:   unescape_string_literal = allow_lazy ( unescape_string_literal )
Original: call the function allow_lazy with an argument unescape_string_literal , substitute the result for unescape_string_literal .
Translation: call the function is_valid_ipv0_address with an argument ( substitute the result for s .
BLEU = 31.33 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 78.6 
  2-gram: 53.8 
  3-gram:33.3 
  4-gram: 9.1 

Code line 1608:                 if tok . startswith ( "'" ) :
Original: if tok starts with " ' " ,
Translation: if tok starts with ' character ' ,
BLEU = 38.26 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 75.0 
  2-gram: 42.9 
  3-gram:33.3 
  4-gram: 20.0 

Code line 1609:       for program in programs :
Original: for every program in programs ,
Translation: for every _UNK in _UNK ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1610:   if f . db_index :
Original: if f . db_index is true ,
Translation: if f . _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1611:           return self . dicts [ - 1 ] [ key ]
Original: return value under the key key of dictionary in last element of self . dicts .
Translation: return value under the key key of self . dicts , return filters element .
BLEU = 54.52 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 80.0 
  2-gram: 64.3 
  3-gram:53.8 
  4-gram: 41.7 

Code line 1612:       def get_unbound_function ( unbound ) :
Original: define the function get_unbound_function with an argument unbound .
Translation: define the function get_unbound_function with an argument unbound .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1613:               app_label = options [ 'app_label' ]
Original: substitute the value under the ' app_label ' key of options dictionary for app_label .
Translation: substitute values under the ' app_label ' key of the options dictionary .
BLEU = 47.96 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15)
  1-gram: 92.3 
  2-gram: 58.3 
  3-gram:45.5 
  4-gram: 40.0 

Code line 1614:  if self . domain == 'djangojs' :
Original: if self . domain equals a string ' djangojs ' ,
Translation: if self . domain equals to string ' djangojs ' ,
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1615:  if imatch :
Original: if imatch is true ,
Translation: if resolved_path is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1616:     return output [ : : - 1 ]
Original: return reversed list output .
Translation: return output elements elements .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1617:  shutil . move ( the_path , guessed_path )
Original: call the function shutil . move with arguments the_path and guessed_path .
Translation: call the function shutil . handle_file_complete with 0 arguments : changes and filepath .
BLEU = 30.79 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12)
  1-gram: 64.3 
  2-gram: 30.8 
  3-gram:25.0 
  4-gram: 18.2 

Code line 1618:  if self . show_traceback :
Original: if self . show_traceback is true ,
Translation: if self . can_import_settings is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:40.0 
  4-gram: 0.0 

Code line 1619:  if not path . exists ( target_dir ) :
Original: if target_dir path doesnt exists ,
Translation: if file path doesnt exists ,
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1620:                   return pickle . loads ( pickled )
Original: evaluate pickle . loads with argument pickled , return the result .
Translation: call the function pickle . dumps with argument connection .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 60.0 
  2-gram: 22.2 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1621:            return s
Original: return s .
Translation: return s .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1622:  text_type = str
Original: substitute str for text_type .
Translation: substitute str for ns .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1623:           return '\x1b[%sm' % RESET
Original: format string ' \x1b [ %sm ' with RESET , return the result .
Translation: append string ' _UNK ' to new_name , append it .
BLEU = 0.00 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14)
  1-gram: 45.5 
  2-gram: 10.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1624:  try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1625:           pass
Original: do nothing .
Translation: do nothing .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1626:  return data
Original: return data .
Translation: return data .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1627:  value = map ( force_text , value )
Original: map elements of value through mapping function force_text , substitute the result for value .
Translation: add a list containing 0 elements : value and smart_text .
BLEU = 0.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 27.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1628:       server_address = ( addr , port )
Original: server_address is a tuple containing 2 initial elements: addr and port .
Translation: call the function lazy with tuple int and LOCK_EX .
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12)
  1-gram: 30.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1629:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1630:               raise InputStreamExhausted ( )
Original: raise an InputStreamExhausted exception ,
Translation: raise an StopIteration exception .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 25.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1631:  if settings . configured :
Original: if settings . configured ,
Translation: if settings . configured is true ,
BLEU = 43.47 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5)
  1-gram: 71.4 
  2-gram: 50.0 
  3-gram:40.0 
  4-gram: 25.0 

Code line 1632:    super ( Command , self ) . run_from_argv ( argv )
Original: call the run_from_argv function from the base class of the Command class with argv as a argument , .
Translation: call the method __init__ from the base class of the Command class .
BLEU = 39.48 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 50.0 

Code line 1633:       return _trans . get_language ( )
Original: call the function _trans . get_language , return the result .
Translation: call the function _trans . get_language , return the result .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1634:           duplicate = super ( Context , self ) . __copy__ ( )
Original: call the the method __copy__ from the base class of the class Context , substitute the result for duplicate .
Translation: call the method __call__ from the base class of the class ChoiceField , substitute the result for ChoiceField .
BLEU = 53.23 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20)
  1-gram: 84.2 
  2-gram: 66.7 
  3-gram:47.1 
  4-gram: 37.5 

Code line 1635:     for handler in handlers :
Original: for every handler in handlers ,
Translation: for every handler in handlers ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1636:   return { 'TIME_ZONE' : timezone . get_current_timezone_name ( ) }
Original: return an dictionary containing 1 entry: return value of the function timezone . get_current_timezone_name for ' TIME_ZONE ' .
Translation: return a dictionary containing 0 entries : return value of the ' six . MultiValueDict , for return upload .
BLEU = 16.59 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19)
  1-gram: 55.0 
  2-gram: 21.1 
  3-gram:11.1 
  4-gram: 5.9 

Code line 1637:  return self . get ( key , version = version ) is not None
Original: call the self . get method with key and version set to version as arguments , return it if it is not None .
Translation: call the method self . get method key , version the version set to version as arguments , return the key .
BLEU = 42.77 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24)
  1-gram: 72.7 
  2-gram: 52.4 
  3-gram:40.0 
  4-gram: 31.6 

Code line 1638:           if can_fail :
Original: if can_fail is true ,
Translation: if can _UNK is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1639:     def valid_value ( self , value ) :
Original: define the method valid_value with arguments self and value .
Translation: define the method signature with arguments self and value .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1640:   from django . apps import apps
Original: from django . apps import apps into default name space .
Translation: from django . apps import apps into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1641:  message = _ ( 'Enter a valid URL.' )
Original: call a function _ with a string ' Enter a valid value . ' as an argument , substitute the result for message .
Translation: call a a function _ with a string ' Enter a value . ' , substitute the result for message .
BLEU = 64.56 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 95.2 
  2-gram: 85.0 
  3-gram:68.4 
  4-gram: 55.6 

Code line 1642:  from django . utils . safestring import mark_safe , SafeData
Original: from django . utils . safestring import mark_safe and SafeData into default name space .
Translation: from django . utils . safestring import SafeData and mark_safe into default name space .
BLEU = 68.47 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1643:                   ip ( )
Original: call the function ip .
Translation: call the function _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1644:    _BROWSERS_DEPRECATED_LOCALES = {  'zh-cn' : 'zh-hans' ,  'zh-tw' : 'zh-hant' ,  }
Original: _BROWSERS_DEPRECATED_LOCALES is an dictionary with 2 initial entries: ' zh-hans ' for ' zh-cn ' and ' zh-hant ' for ' zh-tw ' .
Translation: default_error_messages is a dictionary with 0 entries : ' _UNK ' for ' _UNK ' and ' _UNK ' for ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=24, Reference length=24)
  1-gram: 62.5 
  2-gram: 34.8 
  3-gram:13.6 
  4-gram: 0.0 

Code line 1645:  from django . utils import six
Original: from django . utils import six into default name space .
Translation: from django . utils import six into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1646:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1647:     def modelform_factory ( model , form = ModelForm , fields = None , exclude = None ,  formfield_callback = None , widgets = None , localized_fields = None ,  labels = None , help_texts = None , error_messages = None ) :
Original: define the function modelform_factory with 10 arguments: model , form set to ModelForm , fields set to None , exclude set to None ,
Translation: _UNK 
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.042, Translated length=1, Reference length=24)
  1-gram: 0.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1648:           new_value = _strip_once ( value )
Original: call the function _strip_once with an argument value , substitute the result for new_value .
Translation: call the function _UNK with an argument value , substitute the result for value .
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 86.7 
  2-gram: 71.4 
  3-gram:61.5 
  4-gram: 50.0 

Code line 1649:           ipv4_unpacked = _unpack_ipv4 ( ip_str )
Original: call the function _unpack_ipv4 with an argument ip_str , substitute the result for ipv4_unpacked .
Translation: call the function _UNK with an argument ip_str .
BLEU = 22.92 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=9, Reference length=15)
  1-gram: 88.9 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1650:    if self . asvar :
Original: if self . asvar is true ,
Translation: if self . asvar is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1651:                       declared_fields . pop ( attr )
Original: remove entry at the attr key of the declared_fields dictionary .
Translation: remove attr element from config dictionary .
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=7, Reference length=11)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1652:       allow_multiple_selected = False
Original: allow_multiple_selected is boolean False .
Translation: internal_use_only is boolean False .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1653:  import tempfile
Original: import module tempfile .
Translation: import module module .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1654:           super ( ComboField , self ) . __init__ ( * args , ** kwargs )
Original: call the method __init__ with 2 arguments: unpacked list args and unpacked dictionary kwargs , from the base class of the class ComboField .
Translation: call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
BLEU = 57.86 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24)
  1-gram: 84.0 
  2-gram: 62.5 
  3-gram:52.2 
  4-gram: 40.9 

Code line 1655:               updates . update ( processor ( request ) )
Original: call the function processor with an argument request , update updates dictionary with the result .
Translation: call the method archive with an argument request .
BLEU = 16.95 (Bravity Penalty=0.459, Length ratio=0.562, Translated length=9, Reference length=16)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 16.7 

Code line 1656:  bits = token . split_contents ( )
Original: call the method token . split_contents , substitute the result for bits .
Translation: call the method token . split_contents , substitute the result for bits .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1657:                   os . makedirs ( self . _dir , 0o700 )
Original: call os . makedirs function with self . _dir and hexadecimal 0o700 as arguments .
Translation: call the os . process . _UNK with arguments : command and self . _exception_middleware .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 56.2 
  2-gram: 13.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1658:    class Serializer ( base . Serializer ) :
Original: derive Serializer from the base . Serializer base class .
Translation: derive the class Serializer from the base . Serializer base class .
BLEU = 72.93 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10)
  1-gram: 83.3 
  2-gram: 72.7 
  3-gram:70.0 
  4-gram: 66.7 

Code line 1659:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1660:    self . save_m2m = save_m2m
Original: substitute save_m2m for self . save_m2m .
Translation: substitute _callback for self . _callback .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 33.3 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1661:               val = self . _cache . decr ( key , delta )
Original: call the method self . _cache . decr with key and delta as arguments , substitute the result for val .
Translation: call the method self . _cache . add with key and version as arguments , substitute the result for val .
BLEU = 72.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21)
  1-gram: 90.5 
  2-gram: 80.0 
  3-gram:68.4 
  4-gram: 55.6 

Code line 1662:      class HttpResponseRedirectBase ( HttpResponse ) :
Original: derive the class HttpResponseRedirectBase from the HttpResponse base class .
Translation: derive the class HttpResponseNotAllowed from the HttpResponse base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1663:  return ret
Original: return ret .
Translation: return ret .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1664:   fp . write ( data )
Original: write data to fp .
Translation: call the method fp . write .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5)
  1-gram: 42.9 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1665:           __str__ = new_method_proxy ( str )
Original: call the function new_method_proxy with an argument str , substitute the result for __str__ .
Translation: call the function new_method_proxy with argument __str__ , substitute the result for __str__ .
BLEU = 66.47 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 92.9 
  2-gram: 76.9 
  3-gram:66.7 
  4-gram: 54.5 

Code line 1666:           best_doublecolon_end = ( best_doublecolon_start +  best_doublecolon_len )
Original: sum best_doublecolon_start and best_doublecolon_len , substitute the result for best_doublecolon_end ,
Translation: sum the function SafeBytes with an argument tt .
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11)
  1-gram: 22.2 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1667:  _fields_ = [  ( 'Internal' , ULONG_PTR ) ,  ( 'InternalHigh' , ULONG_PTR ) ,  ( '_offset_union' , _OFFSET_UNION ) ,  ( 'hEvent' , HANDLE ) ]
Original: _fields_ is a list containing 4 tuples: first tuple contains: string ' Internal ' and ULONG_PTR , second contains: string ' InternalHigh and ULONG_PTR , third: ' _offset_union ' and _OFFSET_UNION , forth ' hEvent ' and HANDLE .
Translation: create is a list containing 0 elements : first element containing a string ' _UNK ' and ' _UNK ' , ' _UNK ' for ' _UNK ' , and every _UNK containing value .
BLEU = 9.76 (Bravity Penalty=0.892, Length ratio=0.897, Translated length=35, Reference length=39)
  1-gram: 51.4 
  2-gram: 14.7 
  3-gram:6.1 
  4-gram: 3.1 

Code line 1668:                   call_command ( 'loaddata' , 'initial_data' , verbosity = self . verbosity , database = connection . alias , skip_validation = True , app_label = app_label , hide_empty = True )
Original: call the method call_command with string ' loaddata ' , string ' initial_data ' , verbosity set to self . verbosity , database set to connection . alias , skip_validation set to boolean True , app_label set to app_label and hide_empty set to boolean True .
Translation: call the function _UNK with 0 arguments : string ' _UNK ' , integer set to self . verbosity , code set to integer , verbosity , verbosity set to integer , interactive . _UNK , and set set to integer 0 .
BLEU = 21.54 (Bravity Penalty=0.933, Length ratio=0.935, Translated length=43, Reference length=46)
  1-gram: 62.8 
  2-gram: 31.0 
  3-gram:14.6 
  4-gram: 10.0 

Code line 1669:               self . loaddata ( fixture_labels )
Original: call the method self . loaddata with an argument fixture_labels .
Translation: call the method self . __iter__ with an argument data .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1670:               check_programs ( 'msguniq' , 'msgmerge' , 'msgattrib' )
Original: call the function check_programs with 3 arguments: strings ' msguniq ' , ' msgmerge ' and ' msgattrib ' .
Translation: call the function _UNK with 0 arguments : string ' _UNK ' and ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20)
  1-gram: 58.8 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 0.0 

Code line 1671:     validate_email = EmailValidator ( )
Original: validate_email is an instance of EmailValidator class .
Translation: call the function _UNK , substitute the result for _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=11, Reference length=8)
  1-gram: 9.1 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1672:     return value
Original: return value .
Translation: return value .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1673:  if isinstance ( callback , functools . partial ) :
Original: if callback is an instance of functools . partial object ,
Translation: if callback is an instance of module .
BLEU = 48.60 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:66.7 
  4-gram: 60.0 

Code line 1674:  if isinstance ( widget , NumberInput ) and 'step' not in widget . attrs :
Original: if widget is an instance of the NumberInput class , and string ' step ' is not contained in widget . attrs ,
Translation: if widget is an instance of ' widget ' and widget is not widget . fields is not contained in widget set in a string
BLEU = 36.85 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23)
  1-gram: 64.0 
  2-gram: 41.7 
  3-gram:30.4 
  4-gram: 22.7 

Code line 1675:     def _cull ( self , db , cursor , now ) :
Original: define the protected method _cull with self class instance , db , cursor and now as arguments .
Translation: define the method tag with self , db , cursor and now as arguments .
BLEU = 53.29 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 93.3 
  2-gram: 71.4 
  3-gram:53.8 
  4-gram: 50.0 

Code line 1676:                       sub_match = pattern . resolve ( new_path )
Original: call the method pattern . resolve with an argument new_path , substitute the result for sub_match .
Translation: call the method pattern . exc_info , substitute the result for parts .
BLEU = 43.54 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:54.5 
  4-gram: 40.0 

Code line 1677:  propagate = config . get ( 'propagate' , None )
Original: get value under the ' propagate ' key of the config dictioanry , if it exists substitute it for propagate , if not propagate is None .
Translation: get config dictionary element under ' cache_key ' key , if it exists substitute it for level , if not , level is None .
BLEU = 34.40 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27)
  1-gram: 76.0 
  2-gram: 45.8 
  3-gram:30.4 
  4-gram: 18.2 

Code line 1678:               sys . stderr . write ( "fork #2 failed: (%d) %s\n" % ( e . errno , e . strerror ) )
Original: call the method sys . stderr . write with an argument string " fork #2 failed: ( %d ) %s\n " , formated with e . errno and e . strerror .
Translation: call the method sys . stderr . write with an argument string " _UNK : %s " %s " , where ' %s ' is replaced with e . dirpath and e .
BLEU = 46.62 (Bravity Penalty=1.000, Length ratio=1.031, Translated length=33, Reference length=32)
  1-gram: 63.6 
  2-gram: 53.1 
  3-gram:41.9 
  4-gram: 33.3 

Code line 1679:       class CacheClass ( DatabaseCache ) :
Original: derive the class CacheClass from the DatabaseCache base class .
Translation: derive the class _UNK from the base class _UNK .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 44.4 
  3-gram:12.5 
  4-gram: 0.0 

Code line 1680:                       continue
Original: skip this loop iteration .
Translation: skip this loop iteration .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1681:    _called_from_command_line = False
Original: _called_from_command_line is boolean False .
Translation: is_usable is boolean False .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1682:   form . fields [ self . _pk_field . name ] = ModelChoiceField ( qs , initial = pk_value , required = False , widget = widget )
Original: value under the self . _pk_field . name key of form . fields dictionary is an instance of ModelChoiceField class , created with 4 arguments: qs , initial as pk_value , required as boolean False and widget as widget .
Translation: opts . fields is a instance of form class instance , created with an instance of form class instance , for form set to form , form . fields , and value under the method widget . key of the kwargs dictionary , and widget dictionary .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.175, Translated length=47, Reference length=40)
  1-gram: 53.2 
  2-gram: 26.1 
  3-gram:8.9 
  4-gram: 0.0 

Code line 1683:   value = b'' . join ( self . make_bytes ( chunk ) for chunk in value )
Original: call the self . make_bytes method with an argument chunk , for every chunk in value join the result to a bytes string , substitute the result for value .
Translation: for every value of self . data into a value of the c to a string , separated by ' , substitute the result for
BLEU = 18.36 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=25, Reference length=30)
  1-gram: 64.0 
  2-gram: 33.3 
  3-gram:13.0 
  4-gram: 9.1 

Code line 1684:   except Exception :
Original: if Exception exception is caught ,
Translation: if Exception exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1685:  k = m . end ( )
Original: find the ending position of the regular expression match of the object match , substitute the result for k .
Translation: call the method m . m , substitute the result for k .
BLEU = 28.38 (Bravity Penalty=0.584, Length ratio=0.650, Translated length=13, Reference length=20)
  1-gram: 61.5 
  2-gram: 50.0 
  3-gram:45.5 
  4-gram: 40.0 

Code line 1686:    if TYPE == RAW :
Original: if TYPE equals to RAW ,
Translation: if change equals to empty ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 66.7 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1687:       def normalize_col_name ( self , col_name , used_column_names , is_relation ) :
Original: define the method normalize_col_name with 4 arguments: self , col_name , used_column_names and is_relation .
Translation: define the method _UNK with arguments self , _UNK , value and RemovedInDjango00Warning .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 23.1 
  3-gram:8.3 
  4-gram: 0.0 

Code line 1688:    @ property
Original: property decorator ,
Translation: property decorator ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1689:  self . _app_dict = { }
Original: self . _app_dict is an empty dictionary .
Translation: self . _headers is an empty dictionary .
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1690:    def modified_time ( self , name ) :
Original: define the method modified_time with arguments self and name .
Translation: define the method self with arguments self and name .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1691:  for i , choice in enumerate ( self . choices ) :
Original: for every i and choice in enumerated iterable self . choices ,
Translation: for every i and i in enumerated iterable self . choices ,
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:70.0 
  4-gram: 55.6 

Code line 1692:  def truncatechars_html ( value , arg ) :
Original: define the function truncatechars_html with 2 arguments value and arg .
Translation: define the function _UNK with 0 arguments value and arg .
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 81.8 
  2-gram: 60.0 
  3-gram:44.4 
  4-gram: 25.0 

Code line 1693:   bits = arg . split ( ',' )
Original: split arg by ' , ' , substitute the result for bits . s
Translation: split arg by ' , ' , substitute the result for bits .
BLEU = 92.60 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1694:   template_with_clear = '%(clear)s <label for="%(clear_checkbox_id)s">%(clear_checkbox_label)s</label>'
Original: template_with_clear is a string ' % ( clear ) s <label for= " % ( clear_checkbox_id ) s " >% ( clear_checkbox_label ) s</label> ' .
Translation: _UNK ' _UNK ' in the result of _UNK class _UNK _UNK _UNK _UNK _UNK _UNK " , _UNK ) _UNK " with s .
BLEU = 0.00 (Bravity Penalty=0.961, Length ratio=0.962, Translated length=25, Reference length=26)
  1-gram: 28.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1695:   def write ( data ) :
Original: define the function write with an argument data .
Translation: define the function r with an argument data .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1696:                           handler = self . configure_handler ( handlers [ name ] )
Original: call the method self . configure_handler with an argument value under name key of handlers dictionary , substitute the result for handler .
Translation: call the method self . _UNK with an argument value under the name key of the handler dictionary , substitute it for handler .
BLEU = 44.59 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23)
  1-gram: 83.3 
  2-gram: 60.9 
  3-gram:40.9 
  4-gram: 19.0 

Code line 1697:      def _render ( self , context ) :
Original: define the method _render with 2 arguments self and context .
Translation: define the method format_output with 0 arguments : self and context .
BLEU = 32.65 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11)
  1-gram: 75.0 
  2-gram: 45.5 
  3-gram:30.0 
  4-gram: 11.1 

Code line 1698:           def _wrapper ( self , * args , ** kwargs ) :
Original: define the method _wrapper with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
Translation: define the method _UNK with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
BLEU = 60.29 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17)
  1-gram: 77.8 
  2-gram: 64.7 
  3-gram:56.2 
  4-gram: 46.7 

Code line 1699:               password = digest ( password ) . digest ( )
Original: call the function digest with an argument password , call the method digest on the result , substitute the result or password .
Translation: call the function password . password with an argument password , substitute the result for defaults .
BLEU = 31.61 (Bravity Penalty=0.703, Length ratio=0.739, Translated length=17, Reference length=23)
  1-gram: 76.5 
  2-gram: 62.5 
  3-gram:40.0 
  4-gram: 21.4 

Code line 1700:  defaults = {  'auto_id' : self . auto_id ,  'prefix' : self . add_prefix ( i ) ,  'error_class' : self . error_class ,  }
Original: defaults is an dictionary with 3 initial entries: self . auto_id for ' auto_id ' , result of the call to the method self . add_prefix , with an argument i , for ' prefix ' and self . error_class for ' error_class ' .
Translation: cc is a dictionary with 0 entries : auto_id ' auto_id for ' auto_id ' for ' auto_id ' for self . auto_id for ' auto_id ' .
BLEU = 15.72 (Bravity Penalty=0.545, Length ratio=0.622, Translated length=28, Reference length=45)
  1-gram: 60.7 
  2-gram: 37.0 
  3-gram:19.2 
  4-gram: 16.0 

Code line 1701:   __len__ = new_method_proxy ( len )
Original: call the function new_method_proxy with an argument len , substitute the result for __len__ .
Translation: call the function new_method_proxy with an argument urlconf_name , substitute substitute result for converter .
BLEU = 49.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 33.3 

Code line 1702:                   end_index = i
Original: substitute i for end_index .
Translation: substitute i for i .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1703:   except AttributeError :
Original: except if AttributeError is caught ,
Translation: if AttributeError exception is caught ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1704:   except ValueError :
Original: if ValueError exception is caught ,
Translation: if ValueError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1705:               raise ValueError ( "Unable to convert %r" % value )
Original: raise an ValueError exception with an argument string " Unable to convert %r " formated with value .
Translation: raise an ValueError exception with string " " convert convert to string " " , where ' %s ' is replaced with key .
BLEU = 19.38 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=24, Reference length=18)
  1-gram: 50.0 
  2-gram: 21.7 
  3-gram:13.6 
  4-gram: 9.5 

Code line 1706:  from django . utils . module_loading import import_string
Original: from django . utils . module_loading import import_string into default name space .
Translation: from django . utils . module_loading import import_string into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1707:           return formats . localize_input ( value ,  self . format or formats . get_format ( self . format_key ) [ 0 ] )
Original: call the function formats . localize_input with 2 arguments: value and self . format if true , if not , then the first element of the result of the function formats . get_format called with an argument self . format_key , return the result .
Translation: call the method return value with 0 arguments : return value of the method self . instance . resolve with an argument self . var , if the result is not 0 , return value of the method _UNK .
BLEU = 14.47 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=40, Reference length=45)
  1-gram: 60.0 
  2-gram: 28.2 
  3-gram:7.9 
  4-gram: 5.4 

Code line 1708:      class Enclosure ( object ) :
Original: derive the class Enclosure from the object base class .
Translation: derive the class _UNK from the object base class .
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 90.0 
  2-gram: 77.8 
  3-gram:62.5 
  4-gram: 42.9 

Code line 1709:      def _strip_once ( value ) :
Original: define the function _strip_once with an argument value .
Translation: define the function _UNK with an argument value .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1710:       widget = NumberInput
Original: substitute NumberInput for widget .
Translation: substitute widget for widget .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1711:  code = 'min_length'
Original: code is a string ' min_length '
Translation: code is a string ' max_length ' .
BLEU = 54.11 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7)
  1-gram: 75.0 
  2-gram: 57.1 
  3-gram:50.0 
  4-gram: 40.0 

Code line 1712:                               terminal_char = '>'
Original: terminal_char is an string ' > ' .
Translation: terminal_char is a equal to string ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 62.5 
  2-gram: 42.9 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1713:   load_template_source . is_usable = True
Original: load_template_source . is_usable is boolean True .
Translation: trans_real . _mutable is boolean True .
BLEU = 43.47 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 71.4 
  2-gram: 50.0 
  3-gram:40.0 
  4-gram: 25.0 

Code line 1714:  import shutil
Original: import module shutil .
Translation: import module os .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 75.0 
  2-gram: 33.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1715:                               message_context = message_context . strip ( '"' )
Original: strip message_context of ' " ' characters from both ends , substitute the result for message_context .
Translation: strip message_context of ' " characters from both ends , substitute the result for message_context .
BLEU = 83.20 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17)
  1-gram: 100.0 
  2-gram: 93.3 
  3-gram:85.7 
  4-gram: 76.9 

Code line 1716:               e . django_template_source = token . source
Original: substitute token . source for e . django_template_source .
Translation: substitute token . source for e . django_template_source .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1717:  ext = ext [ : 255 ]
Original: substitute the first 255 elements of ext for ext .
Translation: remove all equal to elements from ext .
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10)
  1-gram: 37.5 
  2-gram: 14.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1718:               self . full_clean ( )
Original: call the method self . full_clean .
Translation: call the method self . full_clean .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1719:               nodes . append ( self )
Original: append self to nodes .
Translation: append self to context .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1720:                    finder = sys . path_importer_cache [ entry ]
Original: substitute the value under the entry key of the sys . path_importer_cache dictionary for finder .
Translation: substitute sys . _UNK dictionary _UNK to the sys . _UNK dictionary .
BLEU = 0.00 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16)
  1-gram: 46.2 
  2-gram: 16.7 
  3-gram:9.1 
  4-gram: 0.0 

Code line 1721:  if value :
Original: if value is true ,
Translation: if value is true ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1722:   formfield . queryset = formfield . queryset . complex_filter ( limit_choices_to )
Original: call the method formfield . queryset . complex_filter with an argument limit_choices_to , substitute the result for formfield . queryset .
Translation: call the method queryset . queryset . _UNK with an argument dt . _UNK , substitute the result for self . _UNK .
BLEU = 32.06 (Bravity Penalty=1.000, Length ratio=1.095, Translated length=23, Reference length=21)
  1-gram: 73.9 
  2-gram: 50.0 
  3-gram:28.6 
  4-gram: 10.0 

Code line 1723:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1724:                if hasattr ( base , 'declared_fields' ) :
Original: if base has an attribute ' declared_fields ' ,
Translation: if base has an ' declared_fields ' attribute ,
BLEU = 45.97 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 62.5 
  3-gram:42.9 
  4-gram: 16.7 

Code line 1725:  renamed = True
Original: renamed is boolean True .
Translation: renamed is boolean True .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1726:   return bool ( value )
Original: return value converted into a boolean .
Translation: convert value into a boolean , return it .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=9, Reference length=7)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1727:   yield force_text ( message )
Original: call the force_text with an argument message , yield the result .
Translation: call the function force_text with an argument message , return the result .
BLEU = 52.66 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12)
  1-gram: 84.6 
  2-gram: 66.7 
  3-gram:45.5 
  4-gram: 30.0 

Code line 1728:   return result
Original: return result .
Translation: return result .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1729:           if self . _callback is not None :
Original: if self . _callback is not None ,
Translation: if self . asvar is not None ,
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 71.4 
  3-gram:50.0 
  4-gram: 20.0 

Code line 1730:  args . append ( work_file )
Original: append work_file to args .
Translation: append work_file to args .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1731:   from django . core . management . base import BaseCommand
Original: from django . core . management . base import BaseCommand into default name space .
Translation: from django . core . management . base import BaseCommand into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1732:    else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1733:                  return 'NOTPROVIDED'
Original: return string ' NOTPROVIDED ' .
Translation: return string ' _UNK ' .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1734:     if '::' not in ip_str and ip_str . count ( ':' ) != 7 :
Original: if ' :: ' is not contained in ip_str and number of occurrences of ' : ' in ip_str is not equal to integer 7 ,
Translation: if : ' : : ' and ' is not contained in length of if parts is not in parts ,
BLEU = 20.28 (Bravity Penalty=0.788, Length ratio=0.808, Translated length=21, Reference length=26)
  1-gram: 71.4 
  2-gram: 35.0 
  3-gram:15.8 
  4-gram: 11.1 

Code line 1735:               self . locale_paths . extend ( list ( settings . LOCALE_PATHS ) )
Original: convert settings . LOCALE_PATHS into a list and extend list self . locale_paths with it .
Translation: extend list with self . errors list with a list , extend it .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16)
  1-gram: 64.3 
  2-gram: 30.8 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1736:               value = self . make_bytes ( value )
Original: call the method self . make_bytes with an argument value , substitute the result for value .
Translation: call the method self . signature with an argument value , substitute the result for
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17)
  1-gram: 93.3 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1737:  from django . utils . crypto import constant_time_compare , salted_hmac
Original: from django . utils . crypto import constant_time_compare and salted_hmac into default name space .
Translation: from django . utils . utils import _UNK and pgettext_lazy into default name space .
BLEU = 51.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:46.2 
  4-gram: 33.3 

Code line 1738:  if self . m2m_data and save_m2m :
Original: if self . m2m . data and save_m2m are true ,
Translation: if self . can_delete is true ,
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=7, Reference length=11)
  1-gram: 71.4 
  2-gram: 50.0 
  3-gram:20.0 
  4-gram: 0.0 

Code line 1739:  @ stringfilter
Original: decorator stringfilter ,
Translation: decorator stringfilter ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1740:  form . _errors [ NON_FIELD_ERRORS ] = self . error_class ( [ self . get_form_error ( ) ] )
Original: call the method self . error_class with an argument list with one element , return value of the method self . get_form_error , substitute the result for the value under the NON_FIELD_ERRORS key of form . _errors dictionary .
Translation: call the method self . error_class with an argument form , substitute the result for value under the key of the self . fields dictionary
BLEU = 33.50 (Bravity Penalty=0.571, Length ratio=0.641, Translated length=25, Reference length=39)
  1-gram: 96.0 
  2-gram: 70.8 
  3-gram:47.8 
  4-gram: 36.4 

Code line 1741:                   try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1742:               return force_text ( time . tzname [ is_dst ] , DEFAULT_LOCALE_ENCODING )
Original: call the function force_text with 2 arguments: value under the is_dst key of the time . tzname and DEFAULT_LOCALE_ENCODING , return the result .
Translation: call the function smart_text with an argument value under the field . tzinfo and return element of the mark_safe dictionary .
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 61.9 
  2-gram: 25.0 
  3-gram:10.5 
  4-gram: 0.0 

Code line 1743:  def check_all_models ( app_configs = None , ** kwargs ) :
Original: define the function check_all_models with app_configs defaulting to None and unpacked dictionary kwargs as arguments .
Translation: define the function _UNK with app_config defaulting to None and dictionary kwargs as arguments ,
BLEU = 38.71 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16)
  1-gram: 80.0 
  2-gram: 57.1 
  3-gram:38.5 
  4-gram: 16.7 

Code line 1744:   output [ - 1 ] = last_row [ : - len ( row_ender ) ] + str_hidden + row_ender
Original: create list out of last_row elements from the start to the last length of row_ender element , append str_hidden and row_ender to it , substitute the result for last element of output .
Translation: substitute last elements of last element of output for output , respectively .
BLEU = 5.35 (Bravity Penalty=0.215, Length ratio=0.394, Translated length=13, Reference length=33)
  1-gram: 84.6 
  2-gram: 25.0 
  3-gram:18.2 
  4-gram: 10.0 

Code line 1745:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1746:               resolved_args = [ context ] + resolved_args
Original: append resolved_args to a list containing context element , substitute it for resolved_args .
Translation: substitute value for the link key for context .
BLEU = 0.00 (Bravity Penalty=0.574, Length ratio=0.643, Translated length=9, Reference length=14)
  1-gram: 44.4 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1747:  value = field . clean ( value , initial )
Original: call the method filed . clean with arguments value and initial , substitute the result for value .
Translation: call the method field . clean with 0 arguments value and value , substitute the result for value .
BLEU = 50.69 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18)
  1-gram: 84.2 
  2-gram: 66.7 
  3-gram:47.1 
  4-gram: 25.0 

Code line 1748:                       self . stdout . write ( errors )
Original: write errors to self . stdout .
Translation: write errors to self . stdout .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1749:  if arg not in ( 'on' , 'off' ) :
Original: if arg is not string ' on ' or ' off ' ,
Translation: if arg is contained in string ' _ ' or string ' evaluates True ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13)
  1-gram: 60.0 
  2-gram: 28.6 
  3-gram:7.7 
  4-gram: 0.0 

Code line 1750:   mail . outbox . extend ( messages )
Original: call the method mail . outbox . extend with messages .
Translation: extend mail . extend list with final_output .
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11)
  1-gram: 62.5 
  2-gram: 28.6 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1751:           nodelist_false = parser . parse ( ( end_tag , ) )
Original: call the method parser . parse with an argument tuple with an element end_tag , substitute the result for nodelist_false .
Translation: call the method parser . compile_filter with an argument tuple , substitute the result for parser .
BLEU = 46.08 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21)
  1-gram: 88.2 
  2-gram: 68.8 
  3-gram:53.3 
  4-gram: 35.7 

Code line 1752:  if safe :
Original: if safe is true ,
Translation: if ignore is true ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1753:                            if self . verbosity >= 3 :
Original: if self . verbosity is greater or equal to 3 , call the self . stdout . write method with string "
Translation: if self . verbosity is greater or equal to integer 0 ,
BLEU = 31.69 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=12, Reference length=22)
  1-gram: 83.3 
  2-gram: 72.7 
  3-gram:70.0 
  4-gram: 66.7 

Code line 1754:                   file_path = os . path . normpath ( os . path . join ( dirpath , filename ) )
Original: join dirpath and filename into path , use it as an argument for the call to the function os . path . normpath , substitute it for file_path .
Translation: join the path and path . _UNK into a file path , substitute it for path .
BLEU = 10.57 (Bravity Penalty=0.494, Length ratio=0.586, Translated length=17, Reference length=29)
  1-gram: 70.6 
  2-gram: 31.2 
  3-gram:13.3 
  4-gram: 7.1 

Code line 1755:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1756:  duplicate . render_context = copy ( self . render_context )
Original: call the function copy with an argument self . render_context , substitute the result for duplicate . render_context .
Translation: call the method copy . copy with an argument self . _wrapped , substitute the result for data .
BLEU = 48.74 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19)
  1-gram: 78.9 
  2-gram: 55.6 
  3-gram:41.2 
  4-gram: 31.2 

Code line 1757:    if plan_node in loader . applied_migrations :
Original: if plan_node is contained in loader . applied_migrations ,
Translation: if tok is contained in executor . migrated_apps ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 66.7 
  2-gram: 25.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1758:               header = header . upper ( ) . replace ( '-' , '_' )
Original: convert string header to uppercase and replace all occurrences of ' - ' with ' _ ' , substitute it for header .
Translation: strip the occurrences of header , use it is lowercase with ' - ' for ' _ ' .
BLEU = 0.00 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23)
  1-gram: 73.7 
  2-gram: 33.3 
  3-gram:11.8 
  4-gram: 0.0 

Code line 1759:   except ImportError :
Original: if ImportError exception is caught ,
Translation: except ImportError .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6)
  1-gram: 33.3 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1760:               return bytes ( value )
Original: call the function bytes with an argument value , return the result .
Translation: call the function bytes with an argument value , return the result .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1761:    intrans = True
Original: intrans is boolean True .
Translation: output_transaction is boolean True .
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 75.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1762:  app_dir = apps . get_app_config ( model . _meta . app_label ) . path
Original: call the method apps . get_app_config with an argument model . _met . app_label , substitute path field of the result for app_dir .
Translation: call the method apps . virtual_fields . wiht with an argument app_label . app_label , substitute the result for migration .
BLEU = 35.25 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24)
  1-gram: 81.0 
  2-gram: 55.0 
  3-gram:36.8 
  4-gram: 16.7 

Code line 1763:           return ( self . func , self . args , self . kwargs ) [ index ]
Original: return the element at the index index of the tuple containing 3 elements: self . func , self . args and self . kwargs .
Translation: return a tuple with 0 arguments : self . args and self . args .
BLEU = 18.40 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=15, Reference length=25)
  1-gram: 60.0 
  2-gram: 35.7 
  3-gram:30.8 
  4-gram: 25.0 

Code line 1764:    try :
Original: try ,
Translation: try ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1765:                               if _file is None :
Original: if _file is None ,
Translation: if _file is None ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1766:         def close ( self ) :
Original: define the method close with an argument self .
Translation: define the method close with argument self .
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:66.7 
  4-gram: 40.0 

Code line 1767:  from datetime import datetime
Original: from datetime import datetime into default name space .
Translation: from datetime import datetime into default name space .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1768:  from django . core . serializers import base
Original: from django . core . serializers import base into default name space .
Translation: from django . core . serializers import serializers into default name space .
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 92.3 
  2-gram: 83.3 
  3-gram:72.7 
  4-gram: 60.0 

Code line 1769:    def to_locale ( language ) :
Original: define the function to_locale with an argument language .
Translation: define the function to_locale with an argument language .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1770:  from optparse import OptionParser
Original: from optparse import OptionParser into default name space .
Translation: from functools import UserList into default name space .
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:42.9 
  4-gram: 33.3 

Code line 1771:   except ValueError :
Original: if ValueError exception is caught ,
Translation: if ValueError exception is caught ,
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1772:   model_dependencies = [ ]
Original: model_dependencies is an empty list .
Translation: skipped is an empty list .
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 80.0 
  3-gram:75.0 
  4-gram: 66.7 

Code line 1773:               assert content is not None
Original: if content is not None raise an error .
Translation: if content is not None raise an error .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1774:                       url = reverse ( project_name + '.' + view_name ,  args = args , kwargs = kwargs ,  current_app = context . current_app )
Original: call the function reverse with 4 arguments: concatenated project_name , character ' . ' and view_name , args as args , kwargs as kwargs , current_app as context . current_app , substitute the result for url .
Translation: concatenate args to out of the class args , created with 0 arguments : settings . args , substitute the result for args .
BLEU = 11.28 (Bravity Penalty=0.582, Length ratio=0.649, Translated length=24, Reference length=37)
  1-gram: 50.0 
  2-gram: 21.7 
  3-gram:13.6 
  4-gram: 9.5 

Code line 1775:           while True :
Original: endless loop ,
Translation: endless loop ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1776:   else :
Original: if not ,
Translation: if not ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1777:               words [ i ] = mark_safe ( word )
Original: call the function mark_safe with an argument word , substitute the result for i-th element of words .
Translation: call the function mark_safe with an argument words , substitute the result for i-th element
BLEU = 66.66 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18)
  1-gram: 100.0 
  2-gram: 85.7 
  3-gram:76.9 
  4-gram: 66.7 

Code line 1778:           filelist = _cached_filenames + new_filenames + _error_files
Original: sum _cached_filenames , new_filenames and _error_files , store the result in filelist .
Translation: add ext and append the result , substitute the result for statements .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13)
  1-gram: 38.5 
  2-gram: 8.3 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1779:  for message in email_messages :
Original: for every message in email_messages:
Translation: for every message in email_messages ,
BLEU = 50.81 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5)
  1-gram: 66.7 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1780:           if name . lower ( ) in ADDRESS_HEADERS :
Original: convert name to lower case , if it is contained in ADDRESS_HEADERS , s
Translation: if name to lowercase or it .
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=7, Reference length=14)
  1-gram: 57.1 
  2-gram: 16.7 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1781:       status_code = 301
Original: status_code is an integer 301 .
Translation: status_code is an integer 000 .
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 83.3 
  2-gram: 60.0 
  3-gram:50.0 
  4-gram: 33.3 

Code line 1782:  if isinstance ( data , bytes ) :
Original: if data is an instance of bytes .
Translation: if data is an instance of bytes ,
BLEU = 84.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8)
  1-gram: 87.5 
  2-gram: 85.7 
  3-gram:83.3 
  4-gram: 80.0 

Code line 1783:     for p in path :
Original: for every p in path ,
Translation: for every path in p ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6)
  1-gram: 100.0 
  2-gram: 20.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1784:    def gettext_noop ( message ) :
Original: define the function gettext_noop with an argument message .
Translation: define the function gettext_noop with an argument message .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1785:     @ deconstructible
Original: decorator deconstructible ,
Translation: decorator deconstructible ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 0.0 

Code line 1786:    def bound_data ( self , data , initial ) :
Original: define the method bound_data with arguments self , data and initial .
Translation: define the method _has_changed with arguments self , data and initial .
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12)
  1-gram: 91.7 
  2-gram: 81.8 
  3-gram:70.0 
  4-gram: 55.6 

Code line 1787:                       if name in existing :
Original: if name is contained in existing ,
Translation: if name is contained in MEDIA_TYPES ,
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1788:  def __new__ ( cls , name , this_bases , d ) :
Original: define the method __new__ with 4 arguments: cls , name , this_bases and d .
Translation: define the method forbid_multi_line_headers with 0 arguments : name , name and d .
BLEU = 0.00 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15)
  1-gram: 64.3 
  2-gram: 46.2 
  3-gram:16.7 
  4-gram: 0.0 

Code line 1789:     def get_language_from_request ( request , check_path = False ) :
Original: define the function get_language_from_request with 2 arguments: request and check_path set to boolean False .
Translation: define the function get_language_from_request with 0 arguments : request and check_path set to boolean False .
BLEU = 67.39 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15)
  1-gram: 81.2 
  2-gram: 73.3 
  3-gram:64.3 
  4-gram: 53.8 

Code line 1790:                           if field_type == 'AutoField(' :
Original: if field_type equals a string ' AutoField ( ' ,
Translation: if if field_type of string ' ( ' ,
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10)
  1-gram: 77.8 
  2-gram: 50.0 
  3-gram:14.3 
  4-gram: 0.0 

Code line 1791:  if not path_info :
Original: if path_info is empty ,
Translation: if regex_match is false ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 60.0 
  2-gram: 0.0 
  3-gram:0.0 
  4-gram: 0.0 

Code line 1792:    def deconstruct ( obj ) :
Original: define the function deconstruct with an argument obj .
Translation: define the function is_protected_type with an argument obj .
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 88.9 
  2-gram: 75.0 
  3-gram:57.1 
  4-gram: 33.3 

Code line 1793:       return _trans . gettext_noop ( message )
Original: call the method _trans . gettext_noop with an argument message .
Translation: call the method _trans . gettext_noop with an argument message .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1794:   self [ 'Content-Type' ] = content_type
Original: substitute content_type for value under the ' Content-Type ' key of the self dictionary .
Translation: substitute string for ' _ordering ' key of self dictionary .
BLEU = 0.00 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=11, Reference length=15)
  1-gram: 81.8 
  2-gram: 40.0 
  3-gram:22.2 
  4-gram: 0.0 

Code line 1795:               connection . client . runshell ( )
Original: call the method connection . client . runshell .
Translation: call the method connection . _UNK .
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9)
  1-gram: 85.7 
  2-gram: 66.7 
  3-gram:60.0 
  4-gram: 50.0 

Code line 1796:           def dec ( func ) :
Original: define the function dec with an argument func .
Translation: define the function dec with an argument func .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1797:  __version__ = "1.6.1"
Original: __version__ is a string " 1 . 6 . 1 " .
Translation: __version__ is a string " 0 . 0 . 0 .
BLEU = 36.03 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12)
  1-gram: 72.7 
  2-gram: 40.0 
  3-gram:33.3 
  4-gram: 25.0 

Code line 1798:               self . _update_errors ( e )
Original: call the method self . _update_errors with an argument e .
Translation: call the method self . attach with an argument e .
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11)
  1-gram: 90.9 
  2-gram: 80.0 
  3-gram:66.7 
  4-gram: 50.0 

Code line 1799:    return False
Original: return boolean False .
Translation: return boolean False .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1800:               close = self . closed
Original: substitute self . closed for close .
Translation: substitute self . file for .
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7)
  1-gram: 83.3 
  2-gram: 40.0 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1801:     _urllib_robotparser_moved_attributes = [  MovedAttribute ( "RobotFileParser" , "robotparser" , "urllib.robotparser" ) ,  ]
Original: _urllib_robotparser_moved_attributes is a list containing an instance of MovedAttribute class , created with 3 argument: strings , " RobotFileParser " , " robotparser " , " urllib . robotparser " .
Translation: _UNK is a list containing 0 elements , containing tuple containing string " " " , " _UNK " , ' _UNK " and " _UNK " .
BLEU = 14.05 (Bravity Penalty=0.898, Length ratio=0.903, Translated length=28, Reference length=31)
  1-gram: 50.0 
  2-gram: 25.9 
  3-gram:11.5 
  4-gram: 4.0 

Code line 1802:  if digest is None :
Original: if digest is None ,
Translation: if _UNK is None ,
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5)
  1-gram: 80.0 
  2-gram: 50.0 
  3-gram:33.3 
  4-gram: 0.0 

Code line 1803:    def tell ( self ) :
Original: define the method tell with an argument self .
Translation: define the method tell with an argument self .
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9)
  1-gram: 100.0 
  2-gram: 100.0 
  3-gram:100.0 
  4-gram: 100.0 

Code line 1804:     class HttpResponsePermanentRedirect ( HttpResponseRedirectBase ) :
Original: derive the class HttpResponsePermanentRedirect from the HttpResponseRedirectBase base class .
Translation: derive the class IfNode from the Select base class .
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10)
  1-gram: 80.0 
  2-gram: 55.6 
  3-gram:25.0 
  4-gram: 0.0 

Code line 1805:                   input_format = get_format ( 'DATE_INPUT_FORMATS' ) [ 0 ]
Original: call the function get_format with an argument string ' DATE_INPUT_FORMATS ' , substitute the first element of the result for input_format .
Translation: call the function get_format with an argument string ' = ' , substitute the first element of the result for html .
BLEU = 78.39 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22)
  1-gram: 90.9 
  2-gram: 81.0 
  3-gram:75.0 
  4-gram: 68.4 

