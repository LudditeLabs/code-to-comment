from __future__ import unicode_literals into default name space .
if file object has an attribute ' mode ' ,
help is a string " Squashes an existing set of migrations ( from first until specified ) into a single new one . " .
if not ,
derive the class TokenParser form the base class object .
from django . core . signals import request_finished into default name space .
call the function get_language , substitute the result for self . old_language .
if not ,
substitute DNS_NAME for idhost .
define the method __init__ with 8 arguments: self , data set to None , files set to None , instance set to None , save_as_new set to boolean False , prefix set to None , queryset set to None and unpacked dictionary kwargs .
call the function timedelta with an argument minutes set to offset , substitute the result for self . __offset .
escaped is boolean False .
if AmbiguityError exception is raised ,
if TypeError exception is caught ,
call the BaseConverter function with BASE16_ALPHABET as argument , store the result in base16 .
convery value into a tuple , substitute it for value .
return self . _non_form_errors .
from django . core . management . base import BaseCommand into default name space .
raise an TemplateSyntaxError exception with an argument string " Only ' silent ' flag is allowed after cycle ' s name , not ' %s ' . " , where ' %s ' is replaced with last element of args .
if length of name is greater than integer 255 ,
if call to the function response . has_header with string ' Vary ' as an argument returns True ,
define the function escape with an argument text .
define the method has_error with 3 arguments: self , field and code set to None .
for i in self . _deleted_form_indexes append i-th element of self . forms into a list , return the resulting list .
substitute self . max_value for the value under the ' max ' key of the attrs dictionary .
file is an instance of BytesIO class created with an argument: value under the ' content ' key of the data dictionary .
if option equals a string ' with ' ,
get the value under the name key of self . blocks dictionary , insert to it block at the beginning .
call the function current , substitute the result for current .
self . dict is an instance of OrderedDict class , created with arguments: tuples with 2 argument x and None , for every x in iterables , if iterable is true , otherwise use an empty list as an argument .
get the value under the cmp_fmt key of the self . compression_formats dictionary , assign it to open_method and mode .
substitute model . _meta . app_label for app .
if six . PY2 is true ,
if name is contained in MEDIA_TYPES ,
define the method clear with argument self .
call the method self . as_widget with 3 arguments: return value of the method self . field . hidden_widget , attrs , and unpacked dictionary kwargs , return the result .
define the method media with an argument self .
if m is true ,
app is a string ' django '
none_value is a tuple containing 2 elements: integer 0 and string ' --- ' .
define the method register with self ans unpacked list tags as arguments .
import module warnings .
translators_comment_start is None .
do nothing .
slice the rawdata string from the k-th to the endpos-th index , remove the whitespaces from the start and the end of the string , substitute it for end .
return a tuple wit 2 elements: _lazy_proxy_unpickle and tuple with 3 elements: func , self . __args , self . __kw and resultclasses .
call the method connection . creation . sql_destroy_model with arguments: model , references_to_delete and style , extend with the result the list output .
call the method formats . time_format with 2 arguments: value and arg , return the result .
define the function wrapper with an argument unpacked list args .
call the method __init__ from the base class of the class TemplateIfParser , with 2 arguments: unpacked list args and unpacked dictionary .
define the method __init__ with 4 arguments: self , context , unpacked list args and unpacked dictionary kwargs .
define the method __init__ with 5 arguments: self , view_name , args , kwargs and asvar .
increment i by integer 1 .
create an iterator out of x .
import module cgi .
try ,
if value under the ' indend ' key of the options dictionary exists and is not None ,
if not
call the method handler . addQuickElement with 2 arguments: string ' description ' and value under the ' description ' key of the item dictionary .
call the method self . _text_words with 2 arguments length and truncate , return the result .
origin is an instance of StringOrigin class created with an argument template_string .
if threading is true ,
call the options . update method with an argument kwargs .
otherwise if dirname equals string ' locale ' ,
define the method display with an argument self .
from django . utils . http import cookie_date into default name space .
x is integer 0 .
call the function processor with an argument request , update updates dictionary with the result .
_empty_value is an empty list .
call the function check_for_migrations with 2 arguments: app_config and connection .
if unicode_value is an instance of six . text_type ,
convert the value under the ' daemonize ' key of options dictionary to lowercase , if it equals to string ' true ' , ' yes ' or ' t ' ,
derive the class Command from the base class BaseCommand .
define the method read with arguments self and size set to None .
from django . db import connections and DEFAULT_DB_ALIAS into default namespace .
do nothing .
call the method self . _create_alternatives with an argument msg , use it as an argument for the call to the self . _create_attachments method , return the result .
define the method __init__ with 2 arguments: self and variables .
if idstring is None ,
if self . domain equals to string ' djangojs ' ,
define the method strftime with 2 arguments: self and fmt .
if form has an attribute ' Meta ' ,
if timeouts is None return None , otherwise return the sum of function time . time return value and timeout .
convert max_value into an floating point number , substitute it for max_value .
append filepath to tried .
derive the class URLValidator form the RegexValidator base class .
if s is an instance of six . text_type or Promise ,
call the function six . text_type with an argument self , divide the result with rhs and return the reminder of the division .
if ValueError or TypeError exceptions are caught ,
from django . core . mail . utils import DNS_NAME into default name space .
if colors is true and last element of colors is contained in color_names ,
join func . __class__ . __module__ and func . __class__ . __name__ into a string , separated by character ' . ' , substitute it for self . _func_path .
otherwise if vale is an instance of value ,
call the function six . reraise with 3 arguments: UnreadablePostError , UnreadablePostError instantiated with unpacked list e . args , third element of the result of the function sys . exc_info .
append a tuple containing 3 elements: filename , content , mimetype to self . attachments list .
if UnicodeEncodeError exception is caught ,
do nothing .
define the initialization method __init__ with self class instance and table as arguments .
cc is a dictionary populated with items by calling function dictitem with el as argument , for every el in cc .
if not ,
substitute sys . stdin for fd .
if self has an attribute ' _choices ' ,
decorator function register . filter with an argument is_safe set to boolean True .
invert the ordering of elements of int_part_gd , substitute it for int_part .
call the fastcgi_help function , return the result .
call the function re . compile with an argument raw string " ( ?: ( \w+ ) = ) ? ( . + ) " , substitute the result for kwarg_re .
if e doesnt have an ' django_template_source ' attribute ,
define the function get_commands .
return nothing .
define the method __setitem__ with 3 arguments: self , key and value .
from django . core . exceptions import ValidationError into default name space .
call the method httpd . serve_forever .
if settings . DEBUG is True ,
call the method parser . add_argument with 5 arguments: string ' --no-initial-data ' , action set to string ' store_false ' , dest set to string ' load_initial_data ' , default set to boolean True , and help as a string ' Tells Django not to load any initial data after database synchronization . '
if not ,
join field_output elements into a string , separated by whitespaces , append it to table_output .
join elements of list source from index last to the end into a string , substitute it for piece .
if sep is an instance of unicode ,
substitute self . _encoding for encoding .
call the function vars with an argument options , substitute the result for cmd_options .
define the method __repr__ with an argument self .
while remaining_bits is true ,
use global variable _supported .
call the method data . items , for every k and v in the result ,
call the method self . format_output with an argument output , use the result as an argument for the call to the function mark_safe , return the result .
call the method self . make_writeable with an argument new_path .
return lang_code .
get config dictionary element under ' handlers ' key , if it exists substitute it for handlers , if not , handlers is EMPTY_DICT .
call the self . path function with argument name , use the result as the argument for the call to the os . path . exists function , return the result .
if name is true , substitute it for function_name , if not get ' _decorated_function ' attribute from func object , if it exists , substitute __name__ field of the result for function_name , in not , substitute func . __name__ for function_name .
if not ,
for every arg in args ,
return the length of self . forms .
try ,
define the method deleted_forms with an argument self .
define the method _save with arguments self , name and content .
substitute func for value under the ' _setupfunc ' key of the self . __dict__ dictionary .
if Exception , renamed to e , exception is caught ,
call the method parser . add_option with 3 arguments: string ' --traceback ' , action set to a string ' store_true ' , and help= ' Raise on exception ' .
from django . utils . safestring import SafeData and mark_safe into default name space .
compare is a lambda function with arguments self , a and b , return value is boolean True if a is not b , otherwise it is False .
try ,
call the method Model . _meta . get_all_field_names , substitute the result for model_fields .
match rest string with self . DOT_PATTERN regex , substitute the result for m .
define the method get_meta with arguments self and table_name . return the list , containing 4 elements: an empty string , string " class Meta: " , string "
define the private method __contains__ with self class instance and key as arguments .
if errors_on_separate_row and bf_errors are both true ,
if config_string is false ,
otherwise if self . _meta . fields is true and field is not contained in self . _meta . fields ,
open the file fn in read mode , with file descriptor as f ,
call the function _ with the argument string ' Ensure this value is % ( limit_value ) s ( it is % ( show_value ) s ) . ' , substitute the result for message .
define the method enter_command with 3 arguments: self , command and token .
split value by newline characters , substitute the result for lines .
substitute initial_id for self . auto_id .
do nothing .
if ValidationError , renamed to e , is caught ,
call the method m . group with an argument integer 0 , substitute the result for s .
import module json .
if formfield is true ,
call the method validators . RegexValidator with an argument regex set to regex , substitute it for self . _regex_validator .
skip this loop iteration ,
append options to output .
raise an TemplateSyntaxError exception with an argument string " Second ( optional ) argument to %s tag must be ' parsed ' " , where ' %s ' is replaced with first element of bits .
substitute the value under the ns key of the resolver . namespace_dict dictionary for extra and resolver , respectively .
return _translations dictionary value , under the language key .
try ,
define the method __bool__ with an argument self .
use_null_fallback is boolean False .
skip this loop iteration .
substitute _moved_attributes for _MovedItems . _moved_attributes .
import module shutil .
append tuple with 2 elements: migration . app_label and migration . name to replaces .
call the function gettext with an argument message , use the result as an argument for the call to the force_text function , return the result .
if serializers . SerializerDoesNotExist exception is caught ,
try ,
define the function lazy_number with 4 arguments: func , resultclass , number set to None and unpacked dictionary kwargs .
if ValidationError exception is caught ,
if any element of self . dicts is true , return boolean True , otherwise return boolean False .
define the function __wrapper__ with 2 arguments: unpacked list args and unpacked dictionary kw .
otherwise if level converted into a string equals level ,
errors is an empty list .
set cache to the value of the dictionary caches under the key settings . CACHE_MIDDLEWARE_ALIAS .
define the method __init__ with 6 arguments: self , regex , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .
if prefix is None ,
daemon_kwargs is an empty dictionary .
call the method bytes_to_text with 2 arguments: key and self . encoding , substitute the result for value .
substitute doublecolon_start for best_doublecolon_start .
call the method __init__ from the base class of the BaseTemporalField class , with arguments: unpacked list args and unpacked dictionary kwargs .
if not ,
if value under ' plain ' key of the options dictionary is true ,
from django . conf import settings into default name space .
define lambda function that returns self . file . encoding field , use it as an argument for property function , put the result in encoding .
leave_locale_alone is boolean True
if m is false ,
define the method start_serialization with an argument self .
increment i-th element of result by piece .
if self . verbosity is greater than integer 1 ,
call the method parser . add_argument with 3 arguments: string ' --database ' , default set to DEFAULT_DB_ALIAS , and help set to string ' Nominates a database to print the SQL for . Defaults to the " default " database . ' .
content is an empty string .
append item to self . items .
delete self entry under the key key .
define the function abspathu with an argument path .
if not ,
otherwise if subcommand equals a string ' version ' or self . argv , without the first element equals a list containing a string ' --version '
call the method mimetype . split with arguments: character ' / ' and integer 1 , substitute the result for basetype and subtype , respectively .
call the function get_supported_language_variant with an argument settings . LANGUAGE_CODE , return the result .
if new_errors is not an iterable object raise an error with error message " The function %r did not return a list . All functions registered with the checks registry must return a list . " , with ' %s ' replaced by value of check .
join elements of c into a string , return it .
substitute self . field . widget for widget .
use global variable _localtime .
define the class Serializer from the PythonSerializer base class .
call the function self . _key_to_file with key and version as arguments , substitute it for fname .
if att_name equals string ' id ' and extra_params equals a dictionary with 1 entry: boolean True for ' primary_key ' ,
substitute if _locs_ is None for _locs_ .
trym
if name is contained in lib . tags ,
derive the class Media from the object base class .
_CacheInfo is an instance of namedtuple class created with 2 arguments: string " CacheInfo " and a list with 4 elements: string ' hits ' , " misses " , " maxsize " and " currsize " .
define the funtion get_internal_wsgi_application .
if old_attr is None ,
join lineno_comment_map dictionary value under the comment_lineno_cache key into a string , separated with ' | ' , format with it a string ' # %s ' , write it to out .
if not ,
sum _cached_filenames , new_filenames and _error_files , store the result in filelist .
call the re . compile function with 2 arguments: raw string " ^ ( ?: [ a-z0-9\ . \- ] * ) :// ( ?: ( ?: [ A-Z0-9 ] ( ?: [ A-Z0-9- ] { 0 , 61 } [ A-Z0-9 ] ) ?\ . ) + " , " ( ?: [ A-Z ] { 2 , 6 } \ . ?| [ A-Z0-9- ] { 2 , } ( ?<!- ) \ . ? ) |\d { 1 , 3 } \ . \d { 1 , 3 } \ . \d { 1 , 3 } \ . \d { 1 , 3 } |\ [ ? [ A-F0-9 ] *: [ A-F0-9: ] +\ ] ? ) ( ?::\d+ ) ? ( ?::\d+ ) ? ( ?:/ " , " ?| [ /? ] \S+ ) $ " and re . IGNORECASE , substitute the result for regex .
from django . db . migrations . writer import MigrationWriter into default name space .
get ' fields ' attribute from the options object , if it exists substitute it for self . fields , if not self . fields is None .
subtract third element of tupl from length of second element of tupl , substitute the result for units .
MONTHS is a list with 12 elements: strings ' jan ' , ' feb ' , ' mar ' , ' apr ' , ' may ' , ' jun ' , ' jul ' , ' aug ' , ' sep ' , ' oct ' , ' nov ' , and ' dec ' .
message is an string " %s\n\nRequest repr ( ) : %s " formated with the result of the metod self . format with an argument record , and request_repr , respectively .
define the method add_arguments with arguments self and parser .
if not ,
for every c in lineno_comment_map dictionary value under the comment_lineno_cache key ,
call the method cursor . execute with sql as argument .
delete the value under key key of self . _expire_info .
return None .
help is a string " Prints the DROP TABLE SQL statements for the given app name ( s ) . " .
call the method six . reraise 3 with arguments: os_err_exc_type , return value of the function os_err_exc_type , called with string as an argument ' Error executing %s: %s ' , where ' %s ' is replaced by: first element of args and strerror , respective , and third element of the result of the function sys . exc_info .
if string ' ( ) ' is contained in config ,
return self .
define the method load with self class instance and rawdata as arguments .
from pprint import pformat into default name space .
if self . id is contained in settings . SILENCED_SYSTEM_CHECKS return boolean True , False otherwise .
convert value into boolean and substitute it for value .
if value equals self . empty_value or value is contained in self . empty_values ,
import module sys .
call the method token . split_contents , substitute the result for bits .
define the method clear with self class instance as the argument ,
convert processors into a tuple and substitute it for processors .
raise CommandError with an argument string " Unable to serialize database: %s " , where ' %s ' is replaced with e .
append pattern to tried list .
if props is true ,
substitute the value under the command key of self . tags dictionary for compile_func .
do nothing .
sum sign , int_part and dec_part , return the result .
substitute c_void_p for PVOID .
if source is an instance of Group class ,
if ValueError exception is caught ,
close the file self .
if ' %s ' is contained in settings . TEMPLATE_STRING_IF_INVALID , invalid_var_format_string is boolean True , otherwise it is False .
if path is None ,
define the method __init__ with 3 arguments: self , attrs set to None and choices set to an empty tuple .
if not ,
call the method re_camel_case . sub with 2 arguments: raw string ' \1 ' and value , strip the result of whitespaces from both ends ,
call the function EmailMultiAlternatives with settings . EMAIL_SUBJECT_PREFIX and subject converted to strings and concatenated , message , settings . SERVER_EMAIL , list of second elements of a for every a in settings . Managers and connection set to connection , as arguments , assign the result to mail .
call the method self . stdout . write with an argument string ' examining files with the extensions: %s\n ' , substitute ' %s ' with return value of the function get_text_list called with 2 arguments:self . extensions converted into a list and string ' and ' .
call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .
parentloop is an empty dictionary .
call the params . get with string ' OPTIONS ' and empty dictionary as arguments , substitute the result for options .
call the method lexer . tokenize , use it as an argument for the call to the parser_class function , substitute the result for parser .
property decorator ,
substitute table for self . _table .
 Failed to install index for %s . %s model: %s\n " as argument , with all occurrences of ' %s ' replaced with app_name and model . _meta . object_name and e , respectively .
call the function get_urlconf with an argument urlconf .
define the method add_item with 17 arguments: self , title , link , description , author_email set to None , author_name set to None ,
derive the class ImageField from the base class FileField class .
call the method match . groupdict , use the result as an argument for the call to the function six . iteritems , for every k and v in the previous result , add a key into a dictionary: v converted to an integer for k , substitute the resulting dictionary for kw .
if ImportError exception is caught ,
call the method Field . validate with 2 arguments: self and value , return the result .
ignore is a lambda function with pattern as an argument , return value is the return value of the function fnmatch . fnmatchcase , called with arguments: filename and pattern .
raise an TypeError exception with an argument string ' other_dict must be a mapping ( dictionary-like ) object . ' .
otherwise if ch equals a string ' . ' ,
if not ,
join elements of T in a bytes string , append first r elements of result of the call to the function F with an argument l to it ,
value under the index key of the hextets dictionary is a string ' 0 ' .
define the method execute with 3 arguments: self , unpacked list args and unpacked dictionary options .
try ,
call the parseaddr function with return value of the force_text with argument addr , as argument , substitute the result for addr .
if default is true and RAISE_ERROR is false ,
if ImportError , rename it to e , exception is caught ,
for every location in format_locations ,
call the method self . write_items with an argument handler .
call the method self . view_name . resolve with an argument context , substitute the result for view_name .
call the method self . queryset . get with an argument , unpacked dictionary with an element: value for key , substitute the result for value .
substitute code for self . code .
get translation_function attribute of the t object , call the result with 3 arguments: singular , plural and number , return the result .
join elements of name into a string , substitute it for param .
call the method self . renderer with 4 arguments: name , value , final_attrs and choices , return the result .
define the method as_string with arguments self and unixfrom set to boolean False .
from django . core . management . sql import sql_all into default name space .
if self . number is greater than integer 1 , return boolean True , otherwise return boolean False .
call the method connection . ops . end_transaction_sql , use the result as the argument for the call to the method self . style . SQL_KEYWORD , append the result to the ' \n ' string , write it to self . stdout .
call the function re . compile with an argument string ' ( %s . *?%s|%s . *?%s|%s . *?%s ) ' , substitute all occurrences of ' %s ' with , return value of the function re . escape called with an argument BLOCK_TAG_START , return value of the function re . escape called with an argument BLOCK_TAG_END , return value of the function re . escape called with an argument VARIABLE_TAG_START , return value of the function re . escape called with an argument VARIABLE_TAG_END , return value of the function re . escape called with an argument COMMENT_TAG_START , and return value of the function re . escape called with an argument COMMENT_TAG_END , substitute the result for tag_re .
define the method __init__ with 3 arguments: self , offset set to None , name set to None .
call the method node . render with an argument context , append the result to the nodelist .
var_obj is None .
call function _generate_cache_header_key with arguments key_prefix and request , substitute the result for cache_key .
substitute frame . f_globals for _globs_ .
return replacement .
substitute pubid for self . pubid .
convert app_template_dirs to a tuple , return it .
call the __init__ method of the base class of the class ChoiceField , called with 7 arguments: required set to required , widget set to widget , label set to label , initial set to initial , help_text set to help_text , unpacked list args , and unpacked dictionary kwargs .
call the function re . compile with 2 arguments , string ' ^%s/ ' , where ' %s ' is replaced with language_code and re . UNICODE , substitute the result for regex_compiled .
for every locale in locales ,
call the method handler . addQuickElement with 3 arguments: string ' link ' , an empty string and a dictionary with 2 entries: ' self ' for ' rel ' and value under the ' feed_url ' key of self . feed dictionary for ' href ' .
call the os . path . getsize function with argument self . file . name , return the result .
if errors is true ,
return an instance of metaclass class , created with 3 arguments: cls . __name__ , cls . __bases__ and orig_vars .
call the function get_template_from_string with 3 arguments: template , origin and template_name , substitute the result for template .
saved_instances is an empty list .
new_msg is a tuple containing a string: " Database %s couldn ' t be flushed . Possible reasons:\n " " * The database isn ' t running or isn ' t configured correctly . \n * At least one of the expected database tables doesn ' t exist . \n " " * The SQL was invalid . \nHint: Look at the output of ' django-admin . py sqlflush ' . That ' s the SQL this command wasn ' t able to run . \n " " The full error: %s " , where ' %s ' is replaced by value under the ' NAME ' key of the connection . settings_dict dictionary and e .
fork a child process , if the result equals integer 0 ,
get config dictionary element under ' incremental ' key , if it exists substitute it for incremental , if not , incremental is boolean False .
if _cached_modules equals to module_values ,
define the method __exit__ with arguments: self , exc_type , exc_value and traceback .
define the method _iteritems with an argument self .
call the method __getitem__ with an argument key from the base class of the class DictWrapper , substitute the result for value .
parts is an empty list .
if value is boolean False or boolean True or value is None or value is an empty string , do not perform the following ,
define the function unregister_serializer with an argument format .
endless loop ,
return lookup_view .
if field_value is an instance of the str type ,
if Exception exception is caught ,
_encoding is None .
if help_texts is not None ,
return result .
from django . utils import six into default name space .
derive the class BaseModelFormSet from the BaseFormSet base class .
substitute SelectMultiple for widget .
define the method _get_media with an argument self .
call the method __get__ with 2 arguments: instance and owner , from the base class of the classonlymethod class , return the result .
try ,
open filename file in write mode , with the file descriptor renamed to outfile , perform ,
try ,
if not ,
call the method self . choice_input_class with 5 arguments: self . name , self . value , result of the method self . attrs . copy , choice and idx , return the result .
call the method parser . add_argument with 6 arguments: string ' -a ' , string ' --all ' , action set to ' store_true ' , dest is ' use_base_manager ' , default is boolean False and help is a string ' ( use multiple --exclude to exclude multiple apps/models ) . ' .
call the method self . __dict__ . copy , substitute the result for obj_dict .
import module re .
call the method self . filter_function with 2 arguments func and unpacked dictionary flags , return the result .
define the function escape_filter with an argument value .
call the method self . _prepare_data with an argument data , substitute the result for data .
define the method _post_clean with an argument self .
define the method values with an argument self .
from django . utils . html import conditional_escape and format_html into default name space .
call the method text . find with 2 arguments: substr and i , substitute the result for j .
if stream_created is true ,
get the value under the ' id ' key of the self . attrs dictionary , substitute it for id_ if the key exists , if not id_ is None .
derive the class BoundField from the base class object .
raise an ValidationError exception with an argument errors .
call the method _trans . pgettext with 2 arguments context and message .
substitute base for self . base .
if resolver . urlconf_module is None:
create a class class which name is generated by converting ' FormSet ' into a string and appending it to form . __name__ , is derived from the formset base class and with fields contained in attrs , return an instance of the obtained class .
if chunks is false ,
split ip_str by ' : ' , substitute the result for hextets .
if empty_label is an instance of list or tuple type ,
pks is a set containing results of the call to the function force_text with an argument , key attribute of the o object , for every o in opts .
if logging_config is true ,
if param is true ,
substitute self . default_timeout for timeout .
return an instance of a TemplateTagNode class , created with an argument tag .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
if Exception , renamed to e , exception is caught ,
if call to the method finder . find_module with an argument name evaluates to true ,
_cookie_allows_colon_in_names is boolean False .
self . content_type is None .
date_data is a tuple with 3 elements: date . year , date . month and date . day .
call the os . makedirs with argument self . file_path .
call the method self . _stream . unget with an argument unused_char .
if self . field . localize is true ,
remove the ' use_natural_primary_keys ' key from the options dictionary and substitute it for self . use_natural_primary_keys , if the key doesnt exists substitute boolean False for self . use_natural_primary_keys .
substitute new_class . declared_fields for fields .
define the method __getitem__ with 2 arguments: self and idx .
derive the class TranslatorCommentWarning from the SyntaxWarning base class .
known_models is an empty list .
if model_identifier is false ,
call the function BytesIO , substitute the result for self . file .
if self . allow_empty_file and file_size are both false ,
if for all attr in list of attributes ' level ' , ' msg ' , ' hint ' , ' obj ' and ' id ' , self and other have the same attribute attr , return boolean True , otherwise return boolean False .
call the function color_style , substitute the result for self . style .
escaper is an identity lambda function .
define the method message with argument self .
convert value into a iterator , substitute the result for self . _iterator .
unpack a dictionary with an entry id_for_label for ' for ' , map it through attrs mapping if attrs is true , and convert it again to the dictionary , if attrs is false , leave it alone , substitute the result for attrs .
m2m_data is an empty dictionary .
result is an empty list .
define the function custom_sql_for_model with 3 arguments: app_config , style and connection .
call the method __init__ from the base class of the class SortedDict .
from django . utils . encoding import force_text into default name space .
get ' Meta ' attribute from form object , if it exists substitute it for meta , if not meta is None .
call the function importlib_find with 2 arguments: full_module_name and package_path , if the result is not None , return boolean True , otherwise return boolean False .
call the method error . items , for every field and error_list in the result ,
for every d in deps , if d is not contained in models and d is contained in model_list add boolean True to a tuple , otherwise add boolean False , for every candidate in the result perform following ,
substitute result for value under key key of self dictionary .
call the method references_to_delete . setdefault with arguments: r . rel . to and an empty list , append to the result tuple with 2 entries: model and f .
if fields is true ,
if not ,
derive the class date from the real_date base class .
from django . core . exceptions import ValidationError into default name space .
from django . core . management . base import AppCommand into default name space .
substitute model . _default_manager for objects .
convert role to uppercase .
get the value under the ' database ' key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .
call the method self . xml . endElement with an argument string ' natural '
if self . use_natural_foreign_keys is true and field . rel . to has an attribute ' natural_key ' ,
from __future__ import unicode_literals into default name space .
return content .
derive the class Formatter from object base class .
read the whole self file and yield it as a generator return value .
intrans is boolean True .
call the method blankout with 2 arguments: part and ' S ' , write the result to out .
loader is an instance of MigrationLoader class , created with 2 arguments: None and ignore_no_migrations set to boolean True .
raise an ValueError exception with an argument string ' Unable to set target handler %r: %s ' , formated with value under ' target ' key of config dictionary and e .
for every item in sorted_items ,
substitute TemporaryFile for NamedTemporaryFile .
get the value under the key key of the self . cookies dictionary , substitute boolean True for ' secure ' key of the returned dictionary .
return result .
call the function shutil . copymode with arguments old_path and new_path .
define the method handle_field with arguments self , obj and field .
write raw_data to self . file file .
call the function force_text with an argument value , substitute the result for value .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary resolved_kwargs , substitute the result for value under the self . target_var key of the context dictionary .
append filename to the self . attachments list .
define the method get_limit_choices_to with arguments self .
call the method bytes_to_text with 2 arguments: key and self . encoding , substitute the result for key .
if function form . has_changed evaluates to false ,
return the instance of DefusedExpatParser class .
call the function fn with list of arguments args and dictionary of argument values kwargs .
derive the class UnreadablePostError from the base class IOError .
define the method num_items with an argument self .
self . GET is an instance of QueryDict class created with an argument mutable set to boolean True .
call the method self . setlist with 2 arguments: k and v .
define the method read with an argument self .
if etags is false ,
self . stdout is an instance of OutputWrapper class created with an argument: value under the ' stdout ' key of the options dictionary , if the key doesnt exists use sys . stdout as an argument .
call the function to_current_timezone with an argument , substitute the result for value .
set the value under the ' bindAddress ' key of the wsgi_opts dictionary to a tuple containing 2 elements: value under the ' host ' key , of the options dictionary and value under the ' port ' key of the options dictionary converted into an integer .
call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs .
replace every occurrence of " ' " in s with " \\ ' " .
decorator python_2_unicode_compatible .
increment level by one .
if messages is not an instance of the ValidationError class ,
define the method __init__ with 2 arguments: self and callback .
if stream_or_string is an instance of the six . string_types ,
define the function static with an argument request .
call the method msg . attach with an argument body_msg .
endless loop ,
define the function extract with 2 arguments path and to_path set to empty string .
if self . required is true and value is false ,
obj is an instance of Node class , created with 3 arguments: children , connector and negated .
try ,
if field . serialize is true ,
if kwargs is true ,
strip url of surrounding ' / ' characters , substitute it for tmp .
return None .
substitute _iteritems for items .
substitute value under the RESULT key of the root dictionary for oldvalue .
if lib is false ,
slice the rawdata to obtain substring from i-th to j-th element , use it as the argument for the method call to the self . handle_data .
if delta is smaller than integer 0 ,
from __future__ import unicode_literals into default name space .
substitute integer 0 for cache_timeout .
return value converted into a boolean .
clean is a lambda function with arguments self and x , return value is x .
if self . LibraryValueNotFoundException exception is caught ,
code is a string ' max_value '
call the method zipfile . ZipFile . __init___ with the arguments self , unpacked list args and unpacked dictionary kwargs .
from django . utils . encoding import force_text and smart_text into default name space .
define the method __new__ with 4 arguments: cls , name , this_bases and d .
url is a property of the class , lambda function is getter attribute with an argument self and return value is the value under the ' Location ' key of the self dictionary .
append value to the self . sign , return the result .
if not ,
do nothing .
if field . rel . to . _default_manager has an ' get_by_natural_key ' attribute ,
bring integer 36 to the power of factor , substitute the result for j .
derive the class ErrorList from the UserList and list base classes .
if any w . needs_multipart_form for every w in self . widgets is true , return boolean True , if not return boolean False .
define the method render with 5 arguments: self , name , value , attrs set to None and choices set to an empty tuple .
call the self . convert method with s , self . decimal , self . decimal_digits and self . sign as arguments , assign the result to the neg and value , respectively .
call the function get_language_from_path with an argument request . path_info , substitute it for lang_code .
if LookupError or TypeError exceptions are caught ,
define the method __init__ with 4 arguments: self , name , nodelist , parent set to None .
return res .
if fifth and sixth elements of row are None ,
call the method self . _populate ,
call the method parser . add_argument with 3 arguments: string ' args ' , metavar set to string ' app_label ' and nargs set to ' * ' .
substitute ' %s ' in a string " %s:\n " with return value of the self . style . MIGRATE_LABEL method called with argument writer . filename , write the result to self . stdout .
call the import_string with argument backend , substitute it for backend_cls .
if self . selected_fields is None or field . attname is contained in self . selected_fields
if filename path doesnt exists ,
define the method accessed_time with arguments self and name .
do nothing .
replace ' %s ' in string " Cache table ' %s ' created . " with tablename , write it to self . stdout .
from django . utils . timezone import template_localtime into default name space .
call the method value . center with an argument , arg converted into a integer , return the result .
msguniq_options is an list with elements: string ' --to-code=utf-8 ' .
return an instance of a dummy class .
if not ,
return printable representation of self . value .
if DEFAULT_CACHE_ALIAS is not contained in settings . CACHES ,
define the method clean with arguments self and value .
substitute value under the PREV key of the root dictionary for last .
call the unsign method from the base class of the TimestampSigner class with an argument value , substitute the result for result .
if AttributeError exception is caught ,
if ' file_path ' is contained in kwargs ,
call the method models . signals . post_migrate . send with 5 arguments: sender set to app_config , app_config set to app_config , verbosity set to verbosity , interactive set to interactive and using set to db .
call the method self . _assert_mutable .
if ignore is true and field_name is not contained in model_fields ,
use global variable templatetags_modules .
define the function fix with an argument match .
split p into two parts at the first ' : ' , use the second element of the result to format string ' _ ( %s ) ' , write it to out .
define the method __str__ with an argument self .
define the method read with an argument self .
derive the class EmailInput from the TextInput base class .
call the function six . reraise with 3 arguments: exc_type , exc_value and third element of the result of the method sys . exc_info .
self . lineno is None .
call the method sys . stderr . write with an argument string " installed flup , then make sure you have it in your PYTHONPATH . \n " .
derive the class ExtendsError from the Exception base class .
append filename to filenames .
derive the class Command from the AppCommand base class .
define the method keys with an argument self .
call the method self . iterkeys , return the list of results .
if header equals a string ' ACCEPT_LANGUAGE ' and is_accept_language_redundant is boolean True ,
substitute the return value of the function abspathu with self . base_location as argument for self . location .
join fixture_name and suffix into a string , separated by ' . ' for every suffix in suffixes , put the results in set , substitute it for targets .
call the function re . compile with an argument raw string ' ^\w { 3 } %s %s %s %s$ ' formated with __M , __D2 , __T and __Y , substitute the result for ASCTIME_DATE .
if p . image is not empty ,
raise an ValidationError with an argument errors .
define the method incr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None .
call the method pulldom . parse with arguments: self . stream and return value of the method self . _make_parser , substitute the result for self . event_stream .
if cookie is not an instance of http_cookies . BaseCookie ,
get the value under the ' cookies ' key of the state dictionary , convert it to a string and substitute it for value under the ' cookies ' key of the state dictionary .
run_syncdb is boolean False .
do nothing .
call the method unicodedata . combining with an argument char , if it evaluates to false ,
append node to nodelist .
define the method __init__ with , self , server , params , library , value_not_found_exception as arguments .
try ,
call the function exc_type with an argument string " Unsupported value: %r . You should install pytz . " , replace ' %s ' with dt , substitute the result for exc_value .
call the method self . can_write . release .
call the function mark_safe with an arguments: for every n in nodelist results of the function force_text called with an argument n , joined in a string , return the result .
get " _decorated_function " attribute from func object , if it exists substitute __name__ field of the result for name , if not , substitute func . __name__ for name .
if ImportError or AttributeError exception occurred ,
return an instance of LoaderOrigin class , created with 4 arguments: display_name , loader , name and dirs .
raise an SuspiciousFileOperation exception with string " Attempted access to ' %s ' denied . " as argument , replace ' %s ' with name .
return string ' form ' .
append string ' Form ' to model . __name__ , substitute the result for class_name .
raise a ValueError exception with an argument string " JSON can ' t represent timezone-aware times . " .
if weight is greater or equal to integer 6 ,
import module os .
__D is a raw string ' ( ?P<day>\d { 2 } ) ' .
while path is true ,
if _cookie_allows_colon_in_names is False ,
import module sys .
return self . _errors .
classmethod decorator ,
if self . min_value is not None ,
append self . form . required_css_class to a whitespace character , append it to the value under the ' class ' key of the attrs dictionary .
define the function become_daemon with 4 arguments: our_home_dir set to ' . ' , out_log set to a string ' /dev/null ' ,
from django . utils . timezone import is_aware and utc into default name space .
define the method T with an argument self .
if sign is contained in self . digits ,
define the method has_previous with an argument self .
for every loader in self . loaders ,
call the function self . path with argument name , use the result as an argument for the call to the function os . path . getatime , use the result as an argument for the call to the function datetime . fromtimestamp , return the result .
outer_html is a string ' <ul { id_attr } > { content } </ul> ' .
define function has_vary_header , with response and header_query as arguments .
if alter_sql ,
if not ,
format candidate_pat with candidate_subs , return the result .
for every i and arg in enumerated iterable args ,
using_sysrandom is boolean True .
months is a tuple with 12 elements: strings ' Jan ' , ' Feb ' , ' Mar ' , ' Apr ' , ' May ' , ' Jun ' , ' Jul ' , ' Aug ' , ' Sep ' , ' Oct ' , ' Nov ' and ' Dec ' .
substitute upload_handlers for self . _upload_handlers .
from django . utils . encoding import force_text and iri_to_uri into default name space .
if timeout equals to DEFAULT_TIMEOUT ,
if default is None ,
call the method HttpResponse . content . fset with 2 arguments: self and value .
if not ,
if not ,
return no .
if not ,
shells is a list containing 2 elements: string ' ipython ' and string ' bpython ' .
define the method handle with 3 arguments: self , unpacked list fixture_labels and unpacked dictionary options .
_func_code is a string " __code__ " .
decrement self . waiting_writers by integer 1 ,
define lambda function that returns self . file . xreadlines field , use it as an argument for property function , put the result in xreadlines .
return maybe .
substitute fields for self . fields .
while x is greater than zero ,
call the function warnings . warn with 3 arguments: string ' `MergeDict` is deprecated , use `dict . update ( ) ` instead . ' , RemovedInDjango19Warning and integer 2 .
if current_app and is true and current_app is contained in app_list ,
if not ,
get the value under the key ' database ' of the options dictionary , use it as a index to get an element from connections , substitute it for connection .
remove ' sep ' key from the kwargs dictionary , if it exists substitute it for sep , if not sep is None .
register . tag decorator ,
from django . http . multipartparser import MultiPartParser and MultiPartParserError into default name space .
convert host to lowercase .
define the method _should_delete_form with an argument self .
doublecolon_start is integer -1 .
substitute the ' %s ' in string ' views . decorators . cache . cache_page . %s . %s . %s . %s ' with key_prefix , method , return value of method url . hexdigest ( ) , return value of method ctx . hexdigest , respectively , substitute it for cache_key .
if consume_next is true ,
from . . import Warning , register and Tags into default name space .
define the function __init__ with 5 arguments: self , takes_context , args , kwargs and target_var .
call the function ungettext with 3 arguments: singular , plural and number , substitute the result for result .
if ImportError exception is caught ,
call the method parser . add_argument with 5 arguments: string ' --database ' , action set to string ' store ' , dest as a string ' database ' , default set to DEFAULT_DB_ALIAS and help as a string ' Nominates a database to introspect . Defaults to using the " default " database . ' .
call the method next with an argument bits , substitute the result for bit .
return value .
define the function modelform_defines_fields with an argument form_class .
try ,
if settings . DEBUG is True ,
if token is None ,
if first is true ,
if integers 3 and 2 in a tuple are smaller than the sys . version_info and sys . version_info is smaller than integers 3 , 4 and 4 in a tuple , respectively ,
sum absolute p with units an integer 1 , substitute the result for prec .
for every i and k in enumerated values of self . _cache , if i is divisible by self . _cull_frequency , append k to doomed list .
raise an ValidationError with 3 arguments: value under the ' required ' key of the self . error_messages dictionary , and code set to an string ' required ' .
return potfiles .
return FormSet .
define the function dictsortreversed with 2 arguments value and arg .
from django . utils . six . moves import xrange into default name space .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary resolved_kwargs , substitute the result for _dict .
_dec . __name__ is a string ' method_decorator ( %s ) ' formated with decorator . __name__ .
compile regex from string ' ^ [ a-z_ ] [ a-z0-9_ ] *$ ' in case insensitive mode , substitute it for IDENTIFIER .
write content to new_file file .
if old_style_list is false ,
derive class TemporaryFile from the base class FileProxyMixin .
plist is an empty list .
extend comment_notes list with notes .
from django . utils . six import StringIO into default name space .
if ValueError exception is caught ,
if self . body is true ,
update fields dictionary with new_class . declared_fields .
join fixture_dir , fixture_name with appended character ' * ' into a valid file path , use it as an argument for the call to the glob . iglob , for every candidate in result ,
import bz2 .
define the method add_error with 3 arguments: self , field and errors .
append a tuple containing 2 elemetns: model and deps , to skipped .
define the method reload with an argument self .
self . _namespace_dict is an empty dictionary .
parser is an instance of the object OptionParser , created with arguments: prog set to prog_name , usage set to return value of the method self . usage called with an argument subcommand , version set to return value of the method self . get_version .
call the function new_method_proxy with an argument operator . ne , substitute the result for __ne__ .
if not ,
read 4 bytes from file f and store it in sample .
substitute self . data for value under the ' data ' key of the defaults dictionary .
call the get_script_name function with environ as argument , use the result as an argument for call to the set_script_prefix function .
do nothing .
fetch one entry from the database that cursor points at , substitute it for the result .
if flags is not None ,
while self . tokens is true ,
call the method field . rel . to . _default_manager . db_manager with an argument db on the return value call the method get_by_natural_key , with unpacked list value as an argument , return the pk field of the result .
derive the class DefusedExpatParser from the _ExpatParser base class .
call the method self . _cache . delete with argument key .
call the import_string with argument: import_path if exists or settings . DEFAULT_FILE_STORAGE , if not , return the result .
call the method self . iteritems , return list of results .
define the method loads with arguments self and data .
from django . utils . http import urlquote into default name space .
app_template_dirs is an empty list .
if ValueError exception is caught ,
from django . utils . encoding import force_text into default name space .
weight is an integer 0 .
update defaults dictionary with kwargs .
append check to checks list , for every check in self . register_checks , if check has an attribute ' tags ' and check . tags and tags set intersection is a non empty set .
call the function allow_lazy with 2 arguments: urlize , six . text_type , substitute the result for urlize .
try ,
return errors .
all the method self . create_table with arguments: db and cache . _table .
call the function _checkLevel with an argument level , use the result as an argument for the call to the method logger . setLevel .
if settings . FORCE_SCRIPT_NAME is not None ,
substitute msg for self . msg .
define the method attach_file with arguments self , path and mimetype set to None .
substitute unicode for text_type .
call the method value . strftime with an argument format , return the result .
if elt is an instance of NonCapture class ,
if not ,
decorator stringfilter ,
otherwise if first element of cwords is contanied in tuple with 8 entries: ' dumpdata ' , ' sql ' , ' sqlall ' , ' sqlclear ' , ' sqlcustom ' ,
break the loop execution .
choices is an property property object of this class , with _get_choices getter and ChoiceField . _set_choices setter functions .
replace ' %s ' in the string ' %s %s ' with response . status_code and response . reason_phrase , respectively , substitute it for status .
if value under the ' author_link ' key of the item dictionary is not None ,
if NameError exception is caught ,
return self . _count .
get the value under the settings . LANGUAGE_COOKIE_NAME key of the request . COOKIES dictionary , substitute it for lang_code .
if TypeError exception is caught ,
call the file . __enter__ method on self .
if not ,
write migration_string to file fh .
return boolean False .
raise an IOError exception with argument string " %s exists and is not a directory . " , where ' %s ' is replaced by directory .
derive the class HttpResponseNotAllowed from the HttpResponse base class .
left justify string s in a field of width equal to the sum of length of s and reminder of the division of length of s by integer 4 , pad the rest of the field with bytes string ' = ' , use the result as an argument for the call to the method base64 . urlsafe_b64decode , return the result .
return base and ext .
if ' widget ' key of the kwargs dictionary doesnt exists assign it widget field of the base class of the IntegerField class value .
substitute connections element at the index of the value db for connections .
derive the class DjangoUnicodeDecodeError from the base class UnicodeDecodeError .
return settings . DEBUG .
for f in sorted list of the files in the self . path directory ,
return _wrapper .
from django . core . mail import get_connection into default name space .
substitute result of the self . path function with argument name for full_path .
define the method r with an argument self .
call the method self . xml . startElement with 2 arguments: string ' field ' and dictionary containing 3 entries: field . name for ' name ' , field . rel . __class__ . __name__ for ' rel ' and return value of the function smart_text with an argument field . rel . to . _meta for ' to ' .
call the method other . __cast , substitute the result for other .
initial is an empty list .
raise an TemplateSyntaxError exception with an argument string " ' %s ' received some positional argument ( s ) after some keyword argument ( s ) " , where ' %s ' is replaced with name .
derive the class ClearableFileInput from the FileInput base class .
call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs , use the result as an argument for the call to the mark_safe function , return the result .
raise an CommandError exception with an argument string " You can only use --pks option with one model " .
add j and integer 1 , substitute the result for i .
define the method __next__ with an argument self .
if origin is true ,
for every relobj in iterator generated from the field . name attribute of the obj object .
kwargs is a dictionary with boolean True for ' pk_field ' .
if _serializers is false ,
if fk is not an instance of ForeignKey class , or fk . rel . to is not equal to parent_model , and fk . rel . to is not contained in result of the call to the method parent_model . _meta . get_parent_list .
try ,
define the method __init__ with arguments self , stream and boundary .
otherwise if self . required is false and value is false ,
derive the class ManagementUtility from object base class .
open the file in mode ' ab ' and with file name obtained by calling the self . _get_filename method .
for every __ in range of integers from 0 up to sep subtracted from fill_to ,
add field_params to extra_params dictionary .
if data is None ,
if not ,
create the object WSGIServer with 2 arguments: get_internal_wsgi_application return value and unpacked dictionary wsgi_opts , call the method run on it .
call the method parser . add_argument with 4 arguments: string ' --list-tags ' , action set to string ' store_true ' , dest set to string ' list_tags ' and help set to string ' List available tags . ' .
define the method __init__ with 3 arguments: self , msg and params set to an empty tuple .
try ,
derive the NoArgsCommand class from the BaseCommand base class .
if field . rel is true , and field . rel is an instance of models . ManyToManyRel ,
return boolean True .
otherwise if self . _delegate_text is true ,
from django . http import Http404 into default name space .
trans_real . _default is None .
raise an StopIteration exception .
return value . pk .
substitute raw_data for data .
executor is an instance of the class MigrationExecutor created with an argument: value under the DEFAULT_DB_ALIAS key of the connections dictionary .
call the Error function with 4 arguments , string " %s was connected to the ' %s ' signal with a lazy reference to the ' %s ' sender , which has not been installed . " with all the ' %s ' replaced by values of description , name and reference joined into a string delimited by ' . ' , respectively , obj set to receiver . __module__ , hint set to None and id set to string ' signals . E001 ' , append the result to errors .
 managed = False " ,
derive the class DeclarativeFieldsMetaclass from the base class MediaDefiningClass .
call the connection . creation . sql_indexes_for_model with model and no_style ( ) as arguments , substitute the result for index_squl .
for every i and line in enumerated iterable table_output , replace %s in string '
from __future__ import absolute_import into default name space .
append old_app_dir to app_dirs .
if urlconf_name is not an instance of six . string_types class ,
call the method match . groups , assign the result to name and value , respectively .
substitute self . html_name for name .
if context is an instance of Context class .
if not ,
if e . errno equals to errno . EEXIST ,
call the method self . validate_key with argument key .
get is a tuple containing elements generated by the call to the function pformat with an argument GET_override , if GET_override is not None , or otherwise generated with the call to the function pformat with an argument request . GET .
call the method urlparse with an argument url , substitute the result for bits .
nodelist . contains_nontext is boolean True .
define show_migration_list with self class instance , connection and app_names set to None , as arguments .
call the method activate with an argument self . old_language .
form . _meta . fields is a list created out of form . _meta . fields elements .
import module tempfile .
if not ,
parser is an instance of CommandParser class , created with 3 arguments , None , usage as a string " % ( prog ) s subcommand [ options ] [ args ] " and add_help set to boolean False .
call the method logging . StreamHandler , substitute the result for handler .
for every name in MEDIA_TYPES ,
from django . utils . http import http_date to the default name space .
concatenate opts . concrete_fields , sortable_virtual_fields and opts . many_to_many , for every f in sorted result ,
call the function date . strftime with an argument string ' %s , %%d %s %%Y %%H:%%M:%%S ' formated with dow and month , substitute the result for time_str .
raise an CommandError exception with an argument string " Command doesn ' t accept any arguments " .
skip this loop iteration .
define the class DjangoJSONEncoder from the json . JSONEncoder base class .
join into a path: path and string ' %s . pot ' , where ' %s ' is replaced with self . domain converted into a string .
raise an TemplateSyntaxError exception with an argument string " ' %s ' is not a valid tag or filter in tag library ' %s ' " , where ' %s ' is replaced with name and taglib .
return self .
raise an exception .
output is an empty list .
substitute ' %r ' in string ' npgettext ( %r , %r , %r , count ) ' with message_context , result of the function join_tokens , called with 2 arguments: singular and trimmed and result of the function join_tokens called with 2 arguments: plural and trimmed , write the result to out .
if kwargs is None ,
call the function get_template_from_string with 3 arguments: template , origin and template_name , substitute the result for template .
call the method parser . add_argument with string ' --exclude ' , string ' -x ' , dest set to string ' exclude ' , action set to string ' append ' , default as an empty list and help as an string ' Locales to exclude . Default is none . Can be used multiple times . ' .
from django . template . loader import BaseLoader into default name space .
if KeyError exception is caught ,
MAX_NUM_FORM_COUNT is a string ' MAX_NUM_FORMS ' .
url_markup_template is a string ' <a href= " { 0 } " > { 1 } </a> ' .
call the function termcolors . parse_color_setting with DJANGO_COLORS as an argument , assign the result to color_settings .
if field . serialize is true ,
derive the class StringOrigin form the base class Origin .
define the function random with an argument value .
call the function sanitize_address with arguments addr and encoding , for every addr in return value of the getadresses function with tuple containing val as argument , join all the results into a string separated by ' , ' , substitute the result for val .
call the function to_locale with an argument language , substitute it for self . __locale .
if col_name is not equal to new_name and field_notes is true ,
return a string " <UTC> " .
join results of format_html called with 2 arguments: format_string and tuple with an element args , into a string , separated with result of the function conditional_escape with an argument sep , for every args in args_generator , use the result as an argument for the call to the function mark_safe , return the result .
convert idx to an integer , substitute it or n .
derive class MovedAttribute from the _LazyDescr base class .
for every k and v in return value of the function six . iteritems called with an argument fields , if n is false , append it to a list , substitute the resulting list for none_model_fields .
for every name in filters ,
substitute lib for value under the library_name key of libraries dictionary .
if digest is None ,
set filter_func . _decorated_function objects attr attribute to value .
call the method render from the base class of the class ClearableFileInput , called with 3 arguments: name , value and attrs , substitute the result for value under the ' input ' key of the substitutions dictionary .
if socket . error , renamed to e , exception is caught ,
substitute settings . MEDIA_URL for prefix .
format value into printable data representation with formating rules arg , return the result .
define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .
return total_forms .
call the method self . _get_validation_exclusions , substitute the result for exclude .
if endpos is lesser than zero ,
derive the class SuspiciousFileOperation from the SuspiciousOperation base class .
define the function do_filter with 2 arguments: parser and token .
decrement week_number by integer 1 .
if media is true ,
call the method self . nodelist_empty . render with an argument context , return the result .
call the function allow_lazy with 2 arguments: get_text_list and six . text_type , substitute the result for get_text_list .
for every root , dirs and files in subdirectory tree starting from the base dir template_dir ,
call the function os . kill with os . getpid ( ) and negative exit_code as arguments .
if bytes is false ,
__all__ is a list of strings , ' SimpleCookie ' , ' parse_cookie ' , ' HttpRequest ' , ' QueryDict ' , ' RawPostDataException ' ,
raise an CommandError exception with an argument string " Unknown command: %r " , with ' %r ' replaced by name .
define the method start_doctype_decl with an arguments self , name , sysid , pubid and has_internal_subset .
remove the ' fields ' key from the options dictionary and substitute it for self . selected_fields , if the key doesnt exists substitute None for self . selected_fields .
otherwise if var_arg is true ,
substitute settings . FORMAT_MODULE_PATH for settings . FORMAT_MODULE_PATH .
call the method s . decode with an argument string ' utf-8 ' , substitute the result for s .
convert config_string to lowercase and split it by ' ; ' character , substitute the result for parts .
increment self . waiting_writers by integer 1 ,
do nothing .
if end is lesser than integer 0 ,
property decorator .
define the method parse with an argument self .
define the function to_bytes with arguments val and encoding .
call the method self . run_shell with an argument shell set to value under the ' interface ' key of the options dictionary .
define the function get_fixed_timezone with an argument offset .
do nothing .
otherwise if pluralmatch is true ,
move integer 1 left for 30 bits , substitute the result for GB .
call the function no_style , substitute the result for self . style .
call the method lookups . appendlist with 2 arguments: pattern . name and a tuple containing 3 elements: bits , p_pattern , and pattern . default_args .
substitute list containing element self for self . error_list .
call the function bytes with an argument value , return the result .
substitute complain for __setslice__ .
substitute empty for self . _wrapped .
raise an exception .
get ' error_messages ' attribute from the options object , if it exists substitute it for self . error_messages , if not self . error_messages is None .
get ' localized_fields ' attribute from the options object , if it exists substitute it for self . localized_fields , if not self . localized_fields is None .
if parser doesnt have an ' _namedCycleNodes ' attribute ,
call the method self . write_message with argument message .
define the method tag with 3 arguments: self , name set to None and compile_function set to None .
if filename ends with ' / ' or with ' \\ ' ,
call the method activate with an argument self . timezone .
if StandardError , renamed to e , exception is caught ,
define the method f with an argument self .
from django . utils . xmlutils import SimplerXMLGenerator into default name space .
try ,
for every plan_node in return value of the graph . forwards_plan method called with node as argument .
strip whitespaces from both sides of the value , return the result .
raise an TemplateSyntaxError exception with an argument string " Named cycle ' %s ' does not exist " , where ' %s ' is replaced with name .
print message to the standard output .
while newline character is not contained in self . buffer and , size is None or length of self . buffer is less than size ,
_meth_self is a string " __self__ " .
if args and kwargs are both true ,
if not ,
if source is an instance of inst class ,
if length of bits is lesser than integer 3 or second element of bits is not equal to string ' as ' ,
define the method __init__ with 2 arguments: self and timezone .
call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary , substitute the result for table .
define the method render with 2 arguments: self and context .
if UnicodeDecodeError exception is caught ,
raise CommandError with an argument string ' Unknown app in excludes: %s ' , where ' %s ' is replaced with exclude .
from django . conf import settings into default name space .
try ,
remove first element of text .
call the function wrapped_callback with request , list or arguments callback_args and dictionary arguments callback_kwargs , as the arguments , substitute the result for response .
define the method close with an argument self .
delete attr .
define the function title with an argument value .
substitute hint for self . hint .
define the method signature with arguments self and value .
from __future__ import unicode_literals into default name space .
define the function _check_boolean_field_default_value with app_config set to None and kwargs dictionary as arguments .
return string " <%s: %s> " , formated with self . __class__ . __name__ and self .
concatenate string ' templates/ ' and template_name , substitute the result for pkg_name .
if not ,
substitute show_hidden_initial for self . show_hidden_initial .
NON_FIELD_ERRORS is an string ' __all__ ' .
call the method self . create_select with 6 arguments: name , self . year_field , value , day_val , choices and self . day_none_value , substitute the result for the value under the ' day ' key of the html dictionary .
week_number is integer 1 .
BLOCK_TAG_START is a string ' { % ' .
try ,
if mw_instance has an attribute named ' process_view ' .
if ValidationError , renamed to e , exception is caught ,
skip this loop iteration ,
call the method extend with an argument error_list on the return value of the method error_dict . setdefault called with 2 arguments: NON_FIELD_ERRORS and an empty list .
step is an string ' any ' .
split header string at string ' \r\n ' , for every line in result ,
if settings . TEMPLATE_DEBUG is true ,
call the function find_template_loader with an argument loader_name , substitute the result for loader .
for every field in model . _meta . many_to_many ,
call the method connection . client . runshell .
if self has an ' error_dict ' attribute ,
from django . utils . translation import ugettext_lazy as _ and ugettext into default name space .
from django . db . models import AutoField , OneToOneField and ForeignKey .
register . tag decorator ,
define the method clean with arguments self and value .
return value under the alias key of self . _caches . caches dictionary .
derive the class ExtendsNode from the Node base class .
for field in self if field . is_hidden is false , append field to a list , return the resulting list .
call the sio . read method , substitute the result for self . buffer .
convert fist p elements of language to lowercase , append ' _ ' to it , covert to lowercase language elements from ( p+1 ) -th index to the end , append it to the previous result , return it .
if i is greater than sys . maxint ,
must_be_first is boolean False .
if min_value is not None ,
raise an ValueError exception with an argument string " dictionary doesn ' t specify a version " .
call the method __init__ from the base class of the class Truncator , called with with an argument lambda function which returns result of the force_text function called with an argument text .
define the method add_arguments with 2 arguments self and parser .
concatenate package_name , string ' . ' and module_name , substitute it for full_module_name .
call the method cursor . execute with string " DELETE FROM %s WHERE expires < %%s " as argument , substitute the ' %s ' with table and list containing return value of the method call ops . value_to_db_datetime with argument now on the object under the db key of connections dictionary , respectively .
property decorator ,
increment year by integer 2000 .
raise an TypeError exception with an argument string " sep must be None or a string " .
call the method handler . endElement with an argument string ' channel ' .
if ImportError exception is caught ,
call the json . dumps function with 2 arguments: obj and separators set to tuple containing ' , ' and ' : ' characters , call the encode method on the result with string ' latin-1 ' as an argument , return the result .
from django . core . management . sql import sql_indexes into default name space .
insert options . pythonpath at the beginning of sys . path .
if Exception , renamed to e , exception is caught ,
remove config dictionary entry under ' format ' key , substitute it for value under ' fmt ' key of config dictionary .
initialize the object of a InMemoryUploadedFile class with arguments: file set to self . file , field_name set to self . field_name , name set to self . file_name , content_type set to self . content_type , size set to file_size , charset set to self . charset , and content_type_extra set to self . content_type_extra , return it .
try ,
call the method handler . endElement with an argument string ' author ' .
if not ,
strip f of whitespaces and append it to plist .
call the function force_text with an argument bf_errors , format the error_row string with the result , append it to the output .
define the method __init__ with 2 arguments: self and config .
from django . db . migrations . state import ProjectState into default name space .
if self is an instance of nodetype ,
if call to the method self . L evaluates to true , and result of the call to the method self . data . month is greater than integer 2 ,
return final_path .
define the method content with an argument self .
substitute settings . DEFAULT_CHARSET for self . _encoding .
call the function loader with arguments name and dirs , assign the result to template and display_name , respectively .
matches is boolean False .
if evaluation of the function find_command with self . program as argument equals to None ,
derive the class cached_property from the object base class .
define the method _prepare_data with 2 arguments: self and data .
call the function warnings . warn with 2 arguments: string " Need { 0 } values to unpack in for loop; got { 1 } . This will raise an exception in Django 2 . 0 . " formated with num_loopvars and len_item , respectively , and RemovedInDjango20Warning .
if cc contains item ' max-age ' and kwargs contains item ' max_age ' ,
substitute dt for self . __dt .
substitute BytesIO for stream_class .
if tablename is contained in return value of the method connection . introspection . table_names ,
substitute value . pk for value .
append form to self . saved_forms .
try ,
contextlib . contextmanager decorator ,
if field is an instance of models . TimeField and filed . name attribute of obj is not None ,
try ,
call the function predicate with an argument item , use it as a key to get results dictionary value , append item to it .
if not ,
if module os field name equals to string ' nt ' ,
do nothing .
define the method to_python with arguments self and value .
call the function smart_text with argument key_value , use the result as an argument for the call to the self . xml . characters method .
call the method self . _set with key , pickled and timeout as arguments .
if min_num is None ,
if self . first is false ,
call the self . xml . endDocument method .
define the method urlconf_module with an argument self .
import module sys .
call the function new_method_proxy with an argument str , substitute the result for __str__ .
call the function import_module with an argument templatetag_module .
if Exception exception is caught ,
from django . utils import six into default name space .
substitute self . STDOFFSET for self . DSTOFFSET .
join elements of the output into a string , separated with ' & ' , return the result .
call the function apps . get_app_configs , for every app_config in result ,
define the method __iter__ with an argument self .
substitute self . current_token for t .
define the method handle with 3 arguments: self , unpacked list args and unpacked dictionary options .
append tuple containing 2 elements: k and v to a list , for every k and v in options , only if k starts with curr , sort the result and substitute it for options .
define the method render with 4 arguments: self , name , value and attrs set to None .
do nothing .
call the function normalize_newlines with an argument value , substitute the result for value .
call the function django . get_version , return the result .
if choice_label is an instance of tuple or list ,
raise an CommandError exception with an argument string " You can only use --pks option with one model " .
if ValueError , TypeError or ValidationError exception is caught ,
return nothing .
if not ,
use fourth element of version as a key to get the value from mapping dictionary , append to it fourth element of version converted to string , substitute it for sub .
call the method compiled_parent . _render with an argument context , return the result .
call the function smart_text with an argument value , return the result .
return final_output .
derive the class ComboField from the base class Field class .
skip this loop iteration .
call the method field . _has_changed with 2 arguments: initial_value and data_value , if it evaluates to true ,
if ' HTTP_HOST ' is contained in self . META ,
call the method cache . set , with cache_key , headerlist , cache_timeout as arguments .
call the method token_string . count with an argument ' \n ' , append the result to self . lineno .
call the method parser . add_argument with 5 arguments: string ' --failfast ' , action set to string ' store_true ' , dest set to ' failfast ' , default set to boolean False and help set to string ' Tells Django to stop running the test suite after first failed test . ' .
increment s_len by integer 1 ,
define the method start_serialization with an argument self .
substitute DEFAULT_PORT for self . port .
call the method stream_or_string . decode with string ' utf-8 ' as argument , substitute the result for stream_or_string .
define the method pop with 3 arguments: self , key and default set to None .
if lib is false ,
for every name in loggers ,
define the method _coerce with arguments self and value .
if not ,
substitute DjangoJSONEncoder for DateTimeAwareJSONEncoder .
self . verbatim is boolean False .
call the method pattern . resolve with an argument new_path , substitute the result for sub_match .
substitute value under the " unifunc " key of the results dictionary for unifunc .
import module sta .
yield string " # into your database . " as the result .
property decorator ,
if not ,
try ,
evaluate the method git_log . communicate , substitute first element of the result for timestamp .
from django . utils import six into default name space .
settings . USE_I18N is boolean True .
if second element of options is true ,
lineno_comment_map is an dictionary .
return encoding .
if namespaces is true ,
token is an instance of Token class , created with 2 arguments: TOKEN_TEXT and token_string .
return errors .
raise an CommandError with argument msg ,
if string ' ( ) ' is contained in config ,
if fk . unique is boolean true ,
convert first element of answer to lowercase and substitute it for answer .
define the method validate with 2 arguments: self and value .
if size is not zero ,
if value under the index key of the hextets dictionary equals to string ' 0 ' ,
join comment elements into a string , substitute it for content .
get the position of the self . file file pointer , substitute it for pos .
try ,
decorator function register . filter with an argument is_safe set to boolean True .
return boolean True .
import module errno .
if self . data is an instance of datetime . datetime and result of the function is_aware called with an argument self . data evaluates to true ,
get attribute piece of the self object , call it and use the result as an argument for the call to the function force_text , append the result to pieces .
define the method load_template_source with 3 arguments: self , template_name and template_dirs set to None .
define the method __getinitargs__ with an argument self .
derive the class BaseContext from the object base class .
if value is not an instance of list type ,
substitute a tuple with 2 elements: template and origin , for self . find_template_cache dictionary value under the key key .
delete Trans .
call the function _slugify with an argument value , return the result .
define the method __contains__ with an argument self .
return string ' th ' .
if to is true ,
if not ,
if field . rel . to . _default_manager has an attribute ' get_by_natural_key ' ,
define the method render with 2 arguments: self and context .
append block to the value under the name key of self . blocks dictionary .
from __future__ import unicode_literals into default name space .
if ImportError exception is caught ,
kw is a list with 3 elements: d . year , d . month and d . day .
substitute bits without last two elements for bits .
substitute value under level key of logging . _levelNames dictionary for rv .
call the function yaml . dump with 4 arguments: self . objects , self . stream , Dumper=DjangoSafeDumper and unpacked dictionary self . options .
if pattern is an instance of RegexURLResolver class ,
if msg is true ,
s is an instance of the Select class , created with choices set to choices .
append string " Field renamed because it started with ' _ ' . " to field_notes .
derive the class WSGIServer from simple_server . WSGIServer and object base classes .
latest_date is None .
call the function get_template_from_string with 3 arguments: source , origin and template_name , substitute the result for template .
define the method add_arguments with arguments self and parser .
if not ,
substitute value under name key of handlers dictionary for handler_config .
get the value under the ' database ' key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .
try ,
if value is true and value has an attribute ' url ' ,
call the __init__ method with fields , unpacked list args and unpacked dictionary kwargs from the base class of the SplitDateTimeField class .
get the id of the self object , use it as a key to obtain the value from the memo dictionary , substitute self with it .
call the method self . errors . as_data , for every error for value under the filed key of the returned dictionary ,
call the method parse from the instance of TemplateIfParser class , created with 2 arguments parser and bits , substitute the result for condition .
if OSError , renamed to err , is caught ,
return the value under the pk key of self . _object_dict dictionary .
call the function handle_extensions with 2 arguments: value under the ' extensions ' key of the options dictionary , and ignored as an empty tuple , convert the result into a tuple and substitute it for extensions .
for every attr in tuple with 3 arguments: strings ' expects_localtime ' , ' is_safe ' and ' needs_autoescape ' ,
call the method self . show_migration_list with connection as first argument , as second argument use value under the ' app_label ' key of options dictionary , if exists , if not use None as the second argument , return the result .
if value is false ,
append self to context . dicts .
return an empty list .
get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .
call the method domain . encode with an argument string ' idna ' , call the method decode on the result with an argument string ' ascii ' , substitute the result for domain .
substitute the value under the ' socket ' key of options dictionary for value under the ' bindAddress ' key of wsgi_opts dictionary .
if var_obj is None ,
call the method self . resolve with an argument c , substitute the result for c .
if message is not None ,
from argparse import ArgumentParser into default name space .
create dictionary out of the unpacked dictionary options , using defaults . _get_kwargs as a mapping function , substitute the result for defaults .
if length of empty_label is not equal to integer 3 .
import time module .
define the method __repr__ with an argument self .
for every model in app_models ,
substitute Select for widget .
bits is an empty list .
from django . utils . text import get_text_list into default name space .
call the function re . compile with 2 arguments regex , re . UNICODE and substitute the result for regex .
return a list containing return values of the function to_py called with an argument val , for every val in value .
call the function check_for_migrations with arguments app_config and connection .
convert field into a string and concatenate it to a string ' * ' , append the result to output .
if features . needs_datetime_string_cast field of the object represented stored under the db key of connections dictionary is true , and expires is not an instance of datetime .
call the method parser . add_argument with 5 arguments: string ' -o ' , string ' --output ' , default is None , dest set to string ' output ' , and help is a string ' Specifies file to which the output is written . ' .
decorator function register . filter with an argument is_safe set to boolean False .
if not ,
call the smart_text function with 2 arguments: return value of the obj . _get_pk_val function and string_only set to boolean True , substitute it for value under the ' pk ' key of data dictionary .
try ,
if self . interactive is true ,
call the function ungettext with 3 arguments: string " % ( size ) d byte " , string " % ( size ) d bytes " and 0 , ' % ( size ) d ' is replaced with 0 , substitute the result for value .
decorator function register . filter with an argument is_safe set to boolean True .
return result .
call the method self . has_key with an argument key , return the result .
derive the class Enclosure from the object base class .
define the method writeString with 2 arguments self and encoding .
in the string " ResolverMatch ( func=%s , args=%s , kwargs=%s , url_name=%s , app_name=%s , namespaces=%s ) " , replace all the occurrences of: string ' %s ' with self . _func_path , self . args , self . kwargs , self . url_name , self . app_name and self . namespaces , respectively .
substitute template for self . template_name .
raise an CommandError with an argument string " Cache table ' %s ' could not be created . \nThe error was: %s . " , replace ' %s ' with: tablename and return value of the function force_text called with an argument e , respectively .
import module binascii .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
if not ,
return value .
define the method __init__ with 7 arguments: self , data set to None , files set to None , auto_id set to an string ' id_%s ' ,
delete entry under the attr key of the attrs dictionary .
get frag attribute from found object , substitute it for found .
call the method datetime . date with an argument unpacked dictionary kw , return the result .
define the method __init__ with 13 arguments: self , queryset , empty_label set to a string " --------- " , cache_choices set to None , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , to_field_name set to None , limit_choices_to set to None , unpacked list args and unpacked dictionary kwargs .
if self . stream is None:
delete logging . _handlerList list .
multiply offset . days , integer 24 and integer 60 , sum the result with floored result of dividing offset . seconds by integer 60 , substitute the result for timezone .
if remaining is None ,
convert args into a list , substitute it for args .
call the method self . configure_custom with an argument config , substitute the result for result .
call the method self . _should_delete_form with an argument , if it evaluates to true ,
call the function _load_serializers .
if found is false and , line is false or return value of the function plural_forms_re . search called with an argument line is false ,
return an empty list .
substitute var for self . var .
append to options a tuple containing 2 entries: firs element of sorted list of the s_opt . option_strings , and evaluated boolean expression s_opt . nargs doesnt equal to integer 0 , for every s_opt in parser . _actions , only if s_opt . option_strings is true ,
attrs is a dictionary containing 1 entry: return value of the smart_text function with argument obj . _meta for ' model ' .
try ,
if empty_label is not None ,
if not ,
self . _changed_data is an empty list .
if not ,
call the method self . namelist , if the length of the result is not integer 1 ,
call the function meta with 3 arguments: name , base and d .
define the method save_new with 3 arguments: self , form and commit set to boolean True .
raise an base . DeserializationError exception with an argument string " Invalid model identifier: ' %s ' " , where ' %s ' is replaced with model_identifier .
return val .
return self .
renamed is boolean True .
define the function quote_etag with an argument etag .
remove the ' using ' key from the options dictionary , substitute the return value for self . db , if the key doesnt exists substitute DEFAULT_DB_ALIAS for self . db .
substitute choices for self . choices .
call the function lazy_number with 6 arguments: npgettext , six . text_type , context set to context , singular set to singular , plural set to plural and number set to number , return the result .
for every arg in self . args call the method arg . resolve with an argument context , substitute the results in a list for args .
evaluate the function debug . technical_500_response with request , evaluated value of function sys . exc_info as a list , status code set to integer 400 , return the result .
define the method _render with 2 arguments self and context .
call the method value . encode with an argument self . _charset , use the result as an argument for the call to the bytes function , return the result .
substitute options for self . options .
define the method __deepcopy__ with 2 arguments self and memo .
substitute _html_parser . interesting_normal for self . interesting .
call method mail . attach_alternative as html_message and string ' text/hmtl ' as arguments .
call the method compile_func with 2 arguments self and token , substitute the result for compiled_result .
substitute view_name for self . view_name .
try ,
substitute first element of options for opt_label .
directories , files are empty lists .
return an instance of the module . Command class .
call the self . _lock . writer method , with the result perform the following ,
otherwise if field . required is true ,
for every x in argset ,
derive the class Command from the TemplateCommand base class .
if template_dirs is false ,
VARIABLE_TAG_START is a string ' { { ' .
parent is a tuple with 2 arguments: form . Meta and object .
create a instance of a class BadSerializerModule from the object base class , with elements Deserializer set to bad_serializer and Serializer set to bad_serializer .
remove dirname from the dirnames .
define the function get_supported_language_variant with 2 arguments: lang_code and strict set to boolean False .
substitute mapped_tokens for self . tokens .
return integer 0 .
if not ,
raise an ValidationError with 3 arguments: value under the ' max_decimal_places ' key of the self . error_messages dictionary , code set to string ' max_decimal_places ' and params set to a dictionary with an entry: self . decimal_places for ' max ' .
call the function _add_doc with 2 arguments: b and string " " " Byte literal " " " .
return value .
define the method __init__ with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
if self . verbosity is greater or equal to integer 2 , call the self . stdout . write method with string "
if KeyError exception is caught ,
if value is contained in self . empty_values ,
help is a string " Prints the CREATE TABLE SQL statements for the given app name ( s ) . " .
from django . conf import settings into default name space .
return boolean True .
otherwise if value under the ' method ' key of optins dictionary equals to string ' thread ' or ' threaded ' ,
derive the class ConvertingTuple from tuple base class .
from django . db . migrations . questioner import MigrationQuestioner and InteractiveMigrationQuestioner into default name space .
if func is None ,
try ,
return the second element of the return value of the call to the self . _det_image_dimensions method .
if Exception exception is caught .
return nothing .
if length of unique_check equals integer 1 ,
define the function debug with an argument request .
define the function iriencode with an argument value .
return value .
if not ,
exc_info is an tuple with 3 elements: None , result of method record . getMessage and None .
substitute t . nodelist for self . nodelist .
call the function warnings . warn with an argument string " Your TEMPLATE_LOADERS setting includes %r , but your Python installation doesn ' t support that type of template loading . Consider removing that line from TEMPLATE_LOADERS . " , where ' %r ' is replaced with loader .
get the value under the ' HTTP_X_REQUESTED_WITH ' key of the self . META dictionary , if it equals string ' XMLHttpRequest ' , return boolean True , otherwise return boolean False .
try ,
return result .
use the app_config , style and connection as arguments for the call to the sql_create , sql_custom and sql_indexes functions , append the results respectively , return the result .
call the method self . is_valid , if it evaluates to false ,
from django . http . response import HttpResponse , StreamingHttpResponse , HttpResponseRedirect , HttpResponsePermanentRedirect , HttpResponseNotModified , HttpResponseBadRequest , HttpResponseForbidden , HttpResponseNotFound , HttpResponseNotAllowed , HttpResponseGone , HttpResponseServerError , Http404 , BadHeaderError , JsonResponse into default name space .
from importlib import import_module into default name space .
return self .
define the method add_arguments with arguments self and parser .
try ,
_format_cache is an empty dictionary .
from django . utils import six into default name space .
substitute code for self . code .
call the method related . natural_key , substitute the result for related .
substitute name for self . name .
substitute value under the self . token_type key of the TOKEN_MAPPING dictionary for token_name .
encoding . setter decorator ,
close the process with an argument 0 .
define the method __init__ with 4 arguments: self , parser , unpacked list args and unpacked dictionary kwargs .
derive the class DisallowedHost from the SuspiciousOperation base class .
derive CacheEntry class from the object base class .
for every app_name and mode_list in return value of manifest . items method ,
return boolean False .
define the method needs_multipart_form with an argument self .
if filename ends with string " . pyc " or it ends with " . pyo " ,
return an instance of SafeBytes , created with an argument t .
define the method clear_checkbox_name with 2 arguments: self and name .
decorator register with argument Tags . compatibility .
if space equals integer 0 ,
decorator classmethod ,
call the method parser . invalid_block_tag with 3 arguments: endblock , ' endblock ' and acceptable_endblocks .
return an empty string ,
call the function exhaust with an argument field_stream .
get the value under the lang_code key of the _BROWSERS_DEPRECATED_LOCALES dictionary , substitute it for replacement .
if settings . TEMPLATE_DEBUG is true ,
get the value under the key key of the self . find_template_cache dictionary , substitute it for result .
substitute complain for sort .
if field_type equals a string ' BooleanField ( ' ,
call the method pretty_name with an argument name , substitute the result for self . label .
define the method Y with an argument self .
if transfer_encoding is not None ,
increment self . fixture_count by one .
from django . conf import settings into default name space .
raise an ImproperlyConfigured with an argument string " Calling modelform_factory without defining ' fields ' or ' exclude ' explicitly is prohibited . "
if not ,
if _globs_ is None ,
return the value under the self . data . month key of the MONTHS_ALT dictionary .
call the function re . compile with an argument string ' \s*\n\s* ' , substitute the result for trim_whitespace_re .
define the method tag_exists with self class instance and tag as arguments .
for eery app_config in app_configs ,
if cc contains item ' private ' and kwargs contains item ' public ' ,
return property object with _media as getter function .
if package doesnt have an ' rindex ' attribute ,
while i is smaller than l ,
return self . _urlconf_module .
if not ,
define the method clean with arguments self and value .
substitute self . form . auto_id for auto_id .
call the function force_text with arguments self and _regex , substitute the result for regex .
call the method self . fetch_command with first element of cwords as an argument , substitute it for subcommand_cls .
return changeset .
if settings . USE_ETAGS is True and function call response . has_header with string ' ETag ' as argument returns boolean False ,
if self . requires_system_checks is true and values under the ' skip_validation ' and ' skip_checks ' keys of the options dictionary are false ,
call the function walk_to_end with 2 arguments: ch and pattern_iter .
if self has an attribute ' error_dict ' ,
if not ,
raise a ValidationError exception with arguments self . message , code set to self . code and params set to params .
call the method formats . get_format_lazy with an argument string ' DATE_INPUT_FORMATS ' , substitute the result for input_formats .
LOCK_EX is a hexadecimal 2 .
import module socket .
if value under the ' unique_id ' key of the item dictionary is not None ,
for every func and args in self . filters ,
from lib2to3 . fixer_util import find_indentation , Name , syms and touch_import into default name space .
can_import_settings is boolean False .
define the function Deserializer with 2 arguments: stream_or_string and unpacked dictionary options .
if value under the ' daemonize ' of options dictionary is None ,
if self . localize is true ,
call the function import_module with an argument project_name .
get attribute real_name from the trans object , return it .
if PY3 is true ,
if _cookie_encodes_correctly and _cookie_allows_colon_in_names are boolean True ,
substitute first element of self . argv for subcommand .
raise an TemplateSyntaxError exception with an argument string ' " with " in %r tag needs at least one keyword argument . ' , where ' %s ' is replaced with first element of bits .
raise an MultiPartParserError with an argument string ' Invalid Content-Type: %s ' , where ' %s ' is replaced with content_type .
if t . token_type equals TOKEN_BLOCK ,
call the function load_command_class with arguments: app_name and name , substitute the result for command .
from io import BytesIO , StringIO and UnsupportedOperation into default name space .
call the function template_localtime with 2 arguments: output and use_tz set to context . use_tz , substitute the result for output .
define the method has_header with 2 arguments: self and header .
call the function force_str with an argument signature , return the result .
call the function module_has_submodule with 2 arguments: package and module , return inverted boolean result .
if compress is true ,
substitute settings . CACHE_MIDDLEWARE_KEY_PREFIX for key_prefix .
define the function deconstruct with an argument obj .
if ' , ' is not contained in arg ,
call the function warnings . warn with 3 arguments: string " django . utils . tzinfo will be removed in Django 1 . 9 . " " Use django . utils . timezone instead . " , RemovedInDjango19Warning and stacklevel set to 2 .
define the method reset with an argument self .
from ctypes . wintypes import BOOL , DWORD and HANDLE into default name space .
if cache_timeout is None ,
call the method create_token from the base class of the class DebugLexer , with 2 arguments: template_string and in_tag , substitute the result for token .
define the method __getattr__ with arguments self and name .
bitwise shift integer 1 to the left by 63 spaces , substitute integer 1 from the result , convert the result to a integer , substitute it for MAXSIZE .
convert git_changeset to string , append it to the string ' . dev ' , replace it for sub .
define the function blankout with 2 arguments: src and char .
define the method __reversed__ with an argument self .
define the method __init__ with arguments self , argument list args and dictionary of arguments kwargs .
call the method self . _deleted_form_indexes . append with an argument i .
for every subnode in node ,
remove the ' use_natural_keys ' key from the options dictionary and substitute it for self . use_natural_keys , if the key doesnt exists substitute boolean False for self . use_natural_keys .
call the function get_token with an argument request , substitute the result for token .
return obj .
join dir_ and return value of the function os . path . dirname called with an argument fixture_name into a valid file path , append it to a list , perform the previous for every dir_ in fixture_dirs , substitute the resulting list for fixture_dirs .
return result .
if loader is an instance of six . string_types ,
SINGLE_BRACE_START is a string ' { ' .
substitute content . name for name .
values is an dictionary created with result of the method val . resolve called with an argument context , for key , for every key and val in return value of the function six . iteritems called with an arguments self . extra_context .
if not ,
convert value into an string , convert the result into an integer and substitute it for value .
derive the class RegexField from the base class CharField class .
derive the class FieldError from the Exception base class .
if out_log is true ,
call the method resolved_path . append with an argument ns .
if name is contained in lib . filters .
derive the class CheckboxInput from the Widget base class .
help is a tuple containing a string: ' Removes ALL DATA from the database , including data added during ' ' migrations . Unmigrated apps will also have their initial_data fixture reloaded . Does not achieve a " fresh install " state . '
return boolean True .
if sign is true ,
if app_list_value is not None ,
update default_attrs dictionary with attrs entry .
if commands_only is true ,
if locale_dir is false ,
status_code is an integer 200 .
get the element with minimal value between the value under the TOTAL_FORM_COUNT key of self . management_form . cleaned_data dictionary , and self . absolute_max , return the result .
call the self . validate_key method with argument key .
from django . core . management . base import BaseCommand and CommandError into default name space .
convert lang_string to lowercase , split by the result string accept_language_re , substitute the result for pieces .
call the method clear from the base class of the class QueryDict , return the result .
if not ,
if StopUpload , renamed to e , exception is caught ,
decorator function register . filter with an argument is_safe set to boolean False .
derive the class BoundaryIter from the six . Iterator base class .
define the function receive_data_chunk with arguments self , raw_data and start .
if first element of data_list is contained in self . empty_values ,
call the method m . group with an argument string ' value ' , use the result as an argument for the call to the force_str , substitute the result for plural_form_line .
return boolean False .
define the method __init__ with an argument self .
if length of compressed is lesser than length of data decremented by 1 ,
convert ' Set-Cookie ' to a string and convert the return value of method c . output ( header= ' ' ) call to a string , format the previous in a tuple , append the tuple to the response_headers .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary resolved_kwargs , return it .
return nothing .
self . literal is None ,
join elements of ret_ip into a string separated with ' : ' , return it .
for every cmatch in cmatches ,
if middle ends with closing and count of occurrence of closing in middle equals count of occurrence of opening in middle incremented by one ,
derive the class FileField from the base class Field class .
if self . data . day equals integer 11 , 12 or 13 ,
if string ' django . middleware . clickjacking . XFrameOptionsMiddleware ' is not contained in settings . MIDDLEWARE_CLASSES set ,
if six . PY2 is true ,
call the method __init__ from the base class of the class IntegerField , with arguments unpacked list args and unpacked dictionary kwargs .
level is an integer 0 .
return tuple , consisting of first element of t converted to lowercase and second element of t .
timeout is integer 300 .
aise and exception InvalidCacheBackendError with string " Could not find backend ' %s ' : %s " as argument , replace ' %s ' with backend and e , respectively .
yield k .
if not ,
define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .
item is a dictionary with 15 initial entries: result of the function to_unicode called with an argument title for ' title ' , result of the function iri_to_uri called with an argument link for ' link ' , result of the function to_unicode called with an argument description for ' description ' , result of the function to_unicode called with an argument author_email for ' author_email ' , result of the function to_unicode called with an argument author_name for ' author_name ' , result of the function iri_to_uri called with an author_link link for ' author_link ' , pubdate for ' pubdate ' , updateddate for ' updateddate ' , result of the function to_unicode called with an comments author_name for ' comments ' , result of the function to_unicode called with an argument unique_id ) for ' unique_id ) ' , unique_id_is_permalink for ' unique_id_is_permalink ' , enclosure for ' enclosure ' , if true , categories is value for ' categories ' key , if not , empty tuple is value for ' categories ' key , result of the function to_unicode called with an argument item_copyright for ' item_copyright ' , ttl for ' ttl ' .
define the method __len__ with an argument self .
derive the class BaseMemcachedCache from base class BaseMemcachedCacheMethods and BaseCache .
define the method external_entity_ref_handler with arguments self , context , base , sysid and pubid .
get self . to_field attribute of self . parent_instance object , substitute it for value under the ' initial ' key of the kwargs dictionary .
return nothing .
call the method questioner . ask_merge with an argument app_label , if it evaluates to true ,
import module sys .
from __future__ import absolute_import into default name space .
call the method app_config . get_models with include_auto_created set to boolean True , substitute the result for models .
call the method self . compression_formats . keys , convert it to list , substitute it for cmp_fmts if cmp_fmt is None , otherwise cmp_fmts is a list containing cmp_fmt .
if self . translate is true ,
if fift element of bits is not equal to a string ' as ' ,
define the method handle with 3 arguments: self , unpacked args and unpacked dictionary options .
call the method func . __get__ with 2 arguments: self and type of self object , call the result with 2 arguments: unpacked list args2 and unpacked dictionary kwargs2 , return the result .
define the method __new__ with 3 arguments: cls , unpacked list args and unpacked dictionary kwargs .
if use_base_manager is true ,
define the method __init__ with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
define the method __bool__ with argument self .
define the method configure_custom with 2 arguments: self and config .
if confirm equals string ' yes ' ,
from django . core import validators into default name space .
call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,
activate is a lambda function which returns None for any argument x .
return a dictionary generated with an expression , return value of the method e . as_data for f , for every f and e in list of tuples of self dictionary key , pair entries .
subtract i from len_values , decrement the result by integer 1 , substitute it for value under the ' revcounter ' key of the loop_dict dictionary .
from django . template . smartif import IfParser and Literal into default name space .
define the method language with an argument self .
try ,
call the method self . parent_name . resolve with an argument context .
substitute char ' 0 ' for the value under the ' Content-Length ' key of the response dictionary .
if self . value equals self . choice_value , return boolean True , if not , return boolean False .
if KeyError exception is caught ,
raise an exception ,
define the method __copy__ with an argument self .
INITIAL_FORM_COUNT is a string ' INITIAL_FORMS ' .
import module warnings .
define the method __init__ with 5 arguments: self , max_length set to None , min_length set to None , unpacked list args , and unpacked dictionary kwargs .
if template_dirs is false ,
return name .
read file fp , call the method decode on the result with an argument settings . FILE_CHARSET , return tuple containing 2 elements , previous result and filepath .
if the Exception exception is caught ,
call the function get_ns_resolver . cache_clear .
get the next element of iterable self , substitute it for chunk .
return None .
utf8_charset . body_encoding is None .
if not ,
year_field is a string ' %s_year ' .
call the method make_key with arguments key and version from the base class of the class BaseMemcachedCache , use it as an argument for the call to the function force_str , return the result .
define the method __init__ with 2 arguments: self and format_string .
try ,
if not ,
return an instance of FixedOffset class , created with 2 arguments: offset and name .
call the method Model . _meta . get_field with an argument field_name , substitute it for field .
call the method self . data . weekday , increment the result by integer 1 , substitute the result for weekday .
do nothing .
call the method connection . ops . sequence_reset_sql with 2 arguments self . style and models , substitute the result for statements .
if original_lookup and lookup_view are not callable objects ,
parse_until is an empty list ,
if request . method equals to string ' HEAD ' ,
boundarystream is an instance of InterBoundaryIter class , created with self . _stream and self . _separator as arguments .
call the executor . migration_plan method with targets as the argument , substitute the result for plan .
import module decimal .
substitute length of package for dot .
substitute third element of url_fields for second element of url_fields .
call the method parser . parse with an argument tuple with 2 elements strings: ' else ' and ' endfilter ' , substitute the result for nodelistelse .
 raise tp , value , tb " " " .
for every ip in tuple containing 3 elements: self . _ipython , self . _ipython_pre_100 and self . _ipython_pre_011 ,
do nothing .
register . tag decorator ,
self . path_info is an empty string .
resolved_path is an empty list .
if self . activated is boolean True ,
substitute save_m2m for form . save_m2m .
if six . PY3 is true ,
join basedir , l and string ' LC_MESSAGES ' into a path separated by ' / ' for every l in locales , assign the list to dirs .
call the method self . make_key with key and version set to version as arguments , substitute the result for key .
return value under the ' forloop ' key of the context dictionary .
self . current is an empty dictionary .
define the method handle with arguments self and unpacked dictionary options .
call the method s . decode with encoding and errors as the arguments , substitute the result for s .
call the method stream . unget with list containing elements of chunk list from the header_end incremented by integer 4 as a start index to the end as argument .
if self . _changed_data is None ,
do nothing .
call the method path_rest . replace with arguments base_name and name , substitute the result for relative_dir .
TEMPLATE_FRAGMENT_KEY_TEMPLATE is a string ' template . cache . %s . %s ' .
return id_ .
if _default is None ,
call the function mark_safe with an argument data , return the result .
define the method as_tuple with 2 arguments: self and value .
if not ,
get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .
if lang is None ,
return self . _choices .
default_error_messages is an dictionary with an initial entry: result of the function _ called with an argument string , ' Enter a number . ' for ' invalid ' .
cc is an empty dictionary .
define the method handle_raw_input with arguments: self , input_data , META , content_length , boundary and encoding set to None .
from django . utils import translation into default namespace .
define the method keys with an argument self .
if exit_code is lesser than integer 0 ,
if KeyError exception is caught ,
from __future__ import unicode_literals into default name space .
if not ,
raise an ValueError with an argument string " Non-reversible reg-exp portion: ' ( ?%s ' " formated with ch .
define the method incr with self , key , delta defaulting to integer 1 and version defaulting to None as arguments .
call the method f . formfield with an argument , unpacked dictionary kwargs , substitute the result for formfield .
if ImportError exception is caught .
substitute HiddenInput for widget .
if not ,
property decorator ,
if self . input_type equals string ' hidden ' and self has an attribute ' input_type ' , return boolean True , otherwise return boolean False .
create list out of email_messages , return the length of the list .
call the method self . xml . addQuickElement with an argument string ' None ' .
evaluate the method self . _cache . incr with key and negative delta as arguments , return the result .
call the __call__ method from the base class of the URLValidator class , with an argument url .
return a list containing results of the function format_html called with 2 arguments: string ' <script type= " text/javascript " src= " { 0 } " ></script> ' and absolute file path of the path , for every path is self . _js .
substitute message . message , message . code , message . params for message , code and params , respectively .
get the value from the options dictionary under the key ' test_database ' , or False if the key dont exists , substitute it for self . test_database .
convert value to uppercase , return the result .
raise an ValueError exception with an argument string ' Unable to configure root logger: %s ' formated with e .
if remaining is not greater than 0 , assert an error with the message string ' remaining bytes to read should never go negative ' .
remove tmpdir directory .
return source and display_name .
if not ,
if not ,
not_found is an empty list .
if truncate_len equals integer 0 .
return path .
if Exception exception is caught ,
define the method build_potfiles with an argument self .
define the function find_template with 2: template_name and dirs set to None .
do nothing .
substitute i-th element of subject for c .
if decimal_pos is not None
append tok to c .
call the function language_code_prefix_re . match with an argument path , substitute it for regex_match .
if i incremented by 1 is lesser than length of chunks ,
call the method self . field . widget . subwidgets with 3 arguments: self . html_name , return value of the method self . value and attrs , for every subwidget in the result ,
define the method _format_value with 2 arguments: self and value .
call the function settings . is_overridden with argument string ' ADMINS ' , if it evaluates to boolean True ,
call the method self . error with an argument self . cmd . missing_args_message .
as long as self . exists function with argument name evaluates to boolean True ,
return an empty string .
add decimal_sep and dec_part , substitute the result for dec_part .
define the method getlist with 3 arguments: self , key and default set to None .
if args in true ,
help is a string " Runs this project as a FastCGI application . Requires flup . " .
return initial .
substitute max_expr for self . max_expr .
call the method handler . endElement with an argument string ' entry ' .
if self has an attribute ' _files ' ,
define the method __eq__ with arguments self and other .
if self . keep_pot is false ,
define the method add_post_render_callback with 2 arguments: self and callback .
derive the class LoaderOrigin from the Origin base class .
otherwise if o is an instance of datetime . date object ,
return f .
create list of first remaining elements of chunk , substitute it for emitting .
call the form . is_valid method , if it evaluates to false ,
try ,
split server with ' ; ' as delimiter , substitute the result for self . _servers .
define the function clean_ipv6_address with 3 arguments: ip_str , unpack_ipv4 set to boolean False and error_message ,
do nothing .
define the method render with 4 arguments: self , name , value and attrs set to None .
return self . token .
define the method incr with self class instance , key , delta set to integer 1 and version set to None , as arguments .
if plan is not true ,
get ' EMAIL_FILE_PATH ' from the settings , if it exists , substitute it for self . file_path , if not substitute None for self . file_path .
define the method __iter__ with an argument self .
derive the class RssUserland091Feed from the RssFeed base class .
builtins is an empty list .
append block_content to a string ' end ' , substitute the result for self . verbatim .
call the function _trans . to_locale with an argument language , return the result .
substitute str_number and an empty string for int_part and dec_part .
call the method self . xml . startElement with arguments string ' natural ' and an empty dictionary .
call the color_style function , substitute the result for style .
update self . __dict__ dictionary with obj_dict .
if row is None ,
derive the class BaseValidator form the object base class .
if arg is None ,
from django . db . migrations . executor import MigrationExecutor into default name space .
_assertCountEqual is a strnig " assertCountEqual " .
derive the class TemplateSyntaxError form the base class Exception .
define the function all_locale_paths .
call the function CheckRegistry , substitute the result for registry .
call the initialization method _html_parser . HTMLParser . __init__ ( self ) for the base class .
call the get_complete_version with an argument version , store the result in version .
call the method self . _archive . close .
inner_html is a string ' <li> { choice_value } { sub_widgets } </li> ' .
if reason is not None ,
if self . obj is None ,
for every opening and closing in WRAPPING_PUNCTUATION ,
call the method handler . addQuickElement with 2 arguments: string ' category ' and cat .
otherwise if value under the " author_name " key of the item dictionary is true ,
return directories and files .
call the self . style . MIGRATE_HEADING method , with string " Operations to perform: " as an argument , use the result as an argument for the call to the self . stdout . write method .
try ,
sub is an empty string .
define the function clear_url_caches .
try ,
call the function compile_string with 2 arguments: template_string and origin , substitute the result for self . nodelist .
total_ordering decorator ,
shown is an empty set .
if has_bz2 is true ,
define function dictvale , with an argument t .
substitute ' %s ' in a string " Branch %s " with migration . name , use it as an argument for the call to the method self . style . MIGRATE_HEADING , write the result to self . stdout .
call the method self . extend_nodelist with 3 arguments: nodelist , instance of TextNode class , created with an argument token . contents , and token .
call the function hashlib . pbkdf2_hmac with 5 arguments: field name of the result of the function digest , password , salt , iterations and dklen , return the result .
call the method connection . creation . sql_create_model with arguments model , style and known_models , substitute the result for output and references .
if app_name is not contained in loader . migrated_apps ,
do nothing .
if constant is true ,
define the function run with 5 arguments: addr , port , wsgi_handler , ipv6 set to boolean False and threading set to boolean False .
import module zlib .
append att_name to used_column_names list .
derive the class InvalidTemplateLibrary form the base class Exception .
if pickle . PickleError exception is caught ,
call the method data . items , for every medium and paths in the result .
define the _setup method with argument self .
return a string " <WithNode> "
substitute next_item for sublist_item .
derive the class ChoiceField from the base class Field class .
for every app in sorted return value of the commands_dict . keys function ,
define the method choice with 2 arguments: self and obj .
call the method handler . addQuickElement with 3 arguments: string ' dc:creator ' , value under the ' author_name ' key of the item dictionary and dictionary with an entry: " http://purl . org/dc/elements/1 . 1/ " for " xmlns:dc " .
if not callback ,
skip this loop iteration ,
call the method app_list . items , use the result as an argument for the call to the function sort_dependencies , for every model in result ,
return value under the key key of self dictionary .
call the function add_to_builtins with an argument string ' django . template . defaulttags ' .
help is an string ' Installs the named fixture ( s ) in the database . ' .
from django . conf import settings into default name space .
substitute value for self . value .
call the method media_property with an argument new_class , substitute the result for new_class . media .
return an instance of DebugNode class .
call the os . stat function with argument filename , store the return value in stat .
call the method other_dict . lists , for every key and value_list in result ,
if match is true ,
call the method field . widget . value_from_datadict with 3 arguments: self . data , self . files , prefixed_name , substitute the result for data_value .
convert value to an string and substitute it for value .
if not ,
args is an empty list .
substitute ' %s ' in ' Not Found: %s ' with request . path , extra is an dictionary with two pairs of elements ' status_code ' with value 404 , and ' request with value request , respectively use the previous as the arguments for the call to the logger . warning function .
call the method self . error with 2 arguments: token and string " Empty variable tag " , return the result .
iterator is an instance of ChunkIter class , created with arguments: stream_or_iterable and integer 16384 .
__all__ is an tuple with 3 elements: strings ' MultiPartParser ' , ' MultiPartParserError ' and ' InputStreamExhausted ' .
derive the class TemplateEncodingError form the base class Exception .
call the function
define the method _create_attachments with arguments self and msg .
set move . name attribute of the _MovedItems to move .
return template .
instantiate QueryDict class with 2 arguments: an empty string and encoding set to self . _encoding , instantiate a class MultiValueDict , return them .
subtract length of the ext from the integer 255 , take first elements of the name list up to the previous result index , append ext to the end of it , substitute the resulting list for name .
if value under the ' author_name ' key of the item dictionary is not None ,
with self . mutex perform ,
subject is an string ' %s ( %s IP ) : %s ' , formated with record . levelname , string ' internal ' if value under the ' REMOTE_ADDR ' key , of the request . META dictionary is contained in settings . INTERNAL_IPS , otherwise use string ' EXTERNAL ' , and result of the method record . getMessage .
define the function first with an argument value .
if data in self . empty_values is true ,
substitute callback for self . _callback_str .
raise an AttributeError with an argument attr .
define the function rfc3339_date with an argument date .
call the function tempfile . mkdtemp with arguments: prefix set to prefix and suffix set to string ' _download ' .
define the function make_style with 2 arguments: opts set to an empty tuple and unpacked dictionary kwargs .
define the method add_arguments with 2 arguments self and parser .
call the method self . error_class with an argument e . error_list , substitute the result for self . _non_form_errors .
append ' _ ' to string created from first p elements of languages converted to lowercase , convert slice of language string from ( p+1 ) -th index to the end to uppercase , append it to the previous result , return the resulting string .
raise an MultiPartParserError with an argument string ' Invalid boundary in multipart: %s ' is replaced with boundary .
remove config dictionary element under ' filter ' key , if it exists substitute it for filters , if not , filters is None .
append ch to result .
return self . new_objects .
get the type of self object , call its method __bool__ with an argument self , return the result .
define the method bound_data with arguments self , data and initial .
call the add_argument method on parser object , use string ' --database ' , default set to DEFAULT_DB_ALIAS and help set to string , ' Nominates a database to print the SQL for . Defaults to the " default " database . ' as the arguments .
if value under the ' author_email ' key of the item dictionary is not None ,
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
DEFAULT_CACHE_ALIAS is a string ' default ' .
if best_doublecolon_end equals length of hextets ,
if not ,
for every f in file_field_list ,
if commit is true ,
call the method self . create_variable_node with an argument filter_expression , substitute the result for var_node .
import module tempfile .
define the function _helper with 2 arguments list and tabs set to integer 1 .
define the method __init__ with arguments self , content and name defaulting to None .
import module codecs .
call the method self . stdout . write with an argument string " Loading ' %s ' fixtures . . . " , where ' %s ' is replaced with fixture_name .
substitute a tuple with 2 elements: characters ' , ' and ' : ' for value under the ' separators ' key of the self . json_kwargs dictionary .
if file_name is an instance of Template class .
substitute help_texts for value under the ' help_texts ' key of attrs dictionary .
otherwise if value is an instance of datetime . datetime ,
derive the class ViewDoesNotExist from the Exception base class .
_localtime is None .
derive the class DefaultCacheProxy from the base class object .
return value .
call the function middleware_method with the request and response as the arguments , assign the result to response .
__all__ is a string containing strings: ' UploadFileException ' , ' StopUpload ' , ' SkipFile ' , ' FileUploadHandler ' , ' TemporaryFileUploadHandler ' , ' MemoryFileUploadHandler ' , ' load_handler ' and ' StopFutureHandlers ' .
write item to zfile stream .
define the function handle_m2m with an argument value ,
default_validators is an empty list .
strip_prefix is a lambda function with an argument s , return value is s without the first element if s starts with string ' u ' ' , otherwise returns s .
import module errno .
if index is not None and index is smaller than return value of the method self . initial_form_count ,
if not ,
outut is an empty list .
import module sys .
return string " [ Didn ' t have permission to include file ] " .
substitute the second element of result for current_expires .
call the method _construct_form from the base class of the class BaseModelFormSet , with 2 arguments: i and unpacked dictionary kwargs .
raise an ValidationError exception with 2 arguments: value under the ' invalid_choice ' key of the self . error_messages dictionary , code set to a string ' invalid_choice ' .
define the method get_renderer with 5 arguments: self , name , value , attrs set to None and choices set to an empty tuple .
call the method self . dicts . pop , return the result .
derive the class Command from the base class AppCommand .
mime_type is a string ' application/rss+xml; charset=utf-8 ' .
if cmatch is true ,
convert to strings and concatenate context , CONTEXT_SEPARATOR and message , substitute the result for msg_with_ctxt .
from django . utils . encoding import force_bytes into default name space .
if self . fk . rel . field_name is not equal to self . fk . rel . to . _meta . pk . name ,
substitute str for text_type .
substitute _itervalues for values .
define the function mark_safe with an argument s .
get the value under the ' merge ' key of the options dictionary , if the key exists substitute it for self . merge , if not , self . merge is boolean False .
from django . core . exceptions import MiddlewareNotUsed , PermissionDenied and SuspiciousOperation into default name space .
substitute key for result . key .
substitute value for self . value .
if LookupError exception is caught ,
yield string " from __future__ import unicode_literals " as the result .
get self . instance
call the function chain with arguments self . choices and choices , for every option_value and option_label in the result ,
return self . id .
call the method self . data . timetuple , use the result as an argument for the call to the function time . mktime , return result converted into an integer .
substitute sixth element of row for value under the ' decimal_places ' key of the field_params .
use return value of the self . fk . get_attname as the name of the attribute of form . instance object to set , set it to self . instance . pk .
if offset is not None ,
if os has an attribute ' chmod ' ,
skip this loop iteration .
if PY3 is true ,
call the method autodetector . arrange_for_graph with 2 arguments: changes , loader . graph , substitute the result for changes .
from django . core . management . color import color_style into default name space .
otherwise if value is an instance of datetime . time ,
substitute left for self . first .
return self . msg formatted with a tuple , with elements generated from return value of the function force_text with 2 arguments: p and errors set to string ' replace ' , for p in self . params .
substitute last element of colors for value under the ' bg ' key of definition dictionary .
if KeyError exception is caught ,
return a string ' %02d ' formated with the result of the function self . G .
call the function warnings . warn with 3 arguments: string ' Reversing by dotted path is deprecated ( %s ) . ' , with ' %s ' replaced with original_lookup , RemovedInDjango20Warning and stacklevel set to integer 3 .
call the function force_text with 3 arguments: file_name , encoding and errors set to string ' replace ' , substitute the result for file_name .
if LookupError exception is caught ,
if html is true ,
call the method self . _lock , with the return value ,
substitute loaders for self . _loaders .
derive the class FloatField from the base class IntegerField class .
substitute oldroot for value under the key key of the cache dictionary .
output is an list with initial elements generated with call to the function pformat with an argument val , for every val in context .
from django . utils . encoding import force_bytes , force_text and iri_to_uri into default name space .
if fake is true ,
call the method writer . as_string , append newline to the result , write it to self . stdout .
increment stats dictionary value under the HITS key by integer 1 .
derive the class Lexer from the object base class .
call the function import_module with an argument app_name .
otherwise if closing_tag is true ,
if not ,
call the function inline_re . match with an argument t . contents , substitute the result for imatch .
derive the class BaseModelForm from the BaseForm base class .
call the function warnings . warn with 3 arguments: string ' Using SplitDateTimeWidget with DateTimeField is deprecated . ' ' Use SplitDateTimeField instead . ' , RemovedInDjango19Warning and stacklevel set to integer 2 .
raise an NotImplementedError with argument string ' subclasses of FileUploadHandler must provide a file_complete ( ) method ' .
if sequence_sql is true ,
call the method operator . attrgetter with an argument _func_closure , substitute the result for get_method_closure .
translation . _info is an empty dictionary .
if pickled is not None .
close is boolean True .
for every format in BUILTIN_SERIALIZERS ,
call the function re . compile with an argument raw string " ^\s*blocktrans ( \s+ . *context\s+ ( ( ?: " [ ^ " ] *? " ) | ( ?: ' [ ^ ' ] *? ' ) ) ) ? ( ?:\s+|$ ) " , substitute the result for block_re .
substitute buf_size for self . buf_size .
call the function flatten_result with an argument result , unpack the resulting list and zip it in the list of tuples , return the result .
substitute model . _meta for opts .
if form is contained in forms_to_delete ,
call the method initial_form_count from the base class of the class BaseModelFormSet , return the result .
yield value under key key of self dictionary .
for every chunk in content . chunks function return value ,
raise an TemplateSyntaxError exception with an argument string " Searching for value . Unexpected end of string in column %d: %s " , where ' %d ' is replaced with i and ' %s ' is replaced with subject .
substitute value under the the ' forloop ' key of the context dictionary for parentloop .
if member is a directory ,
define the method _has_changed with arguments self , initial and data .
do nothing .
self . _is_rendered is boolean True .
if not ,
define the method sign with arguments self and value .
handler is an instance of SimplerXMLGenerator class , created with 2 arguments: outfile and encoding .
define private method __repr__ with argument self .
for every model in model_list ,
if value has an ' close ' attribute ,
test_runner is an instance of TestRunner class , called with an argument unpacked dictionary options .
define the method __call__ with arguments self and value .
return model_list .
from django . utils . _os import safe_join into default name space .
from django . apps import apps into default name space .
substitute error_message for value under the ' invalid ' key of the error_messages dictionary .
define the method endChannelElement with 2 arguments: self and handler .
convert string header to uppercase and replace all occurrences of ' - ' with ' _ ' , substitute it for header .
increment weight by integer 2 .
call the function force_text with an argument text , replace every occurrence of ' & ' in the result with ' &amp; ' , every occurrence of ' < ' with ' &lt; ' , every occurrence of ' > ' with ' &gt; ' , every occurrence of ' " ' with ' &quot; ' , and every occurrence of " ' " with ' &#39; ' , call the function mark_safe with the previous result as an argument , return the result .
define the method render with 2 arguments: self and context .
value under the TOTAL_FORM_COUNT of the self . base_fields dictionary is an instance of IntegerField class , created with an argument widget set to HiddenInput .
write a newline into a self . stream file stream .
define the method __init__ with 4 arguments: self , parent_instance , unpacked list args and unpacked dictionary kwargs .
return new_class .
while field . rel is not None ,
from django . forms . utils import from_current_timezone and to_current_timezone into default name space .
call the method threading . Semaphore with an argument integer 0 , substitute the result for self . can_read .
raise an CommandError exception with an argument string , " Incompatible values of ' leave_locale_alone ' " " ( %s ) and ' can_import_settings ' ( %s ) command options . " , replace ' %s ' with self . leave_locale_alone and self . can_import_settings .
from django . utils import lru_cache into default name space .
substitute value for the value under the key key of self . _cache dictionary .
try ,
return value .
return an instance of SafeBytes , created with an argument data .
append string ' -- The following references should be added but depend on non-existent tables: ' to the final_output .
